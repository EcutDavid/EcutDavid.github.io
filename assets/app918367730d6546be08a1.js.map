{"version":3,"sources":["webpack:///app918367730d6546be08a1.js","webpack:///webpack/bootstrap 918367730d6546be08a1","webpack:///./src/index.js","webpack:///./~/react/index.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/constants/domID.js","webpack:///./~/core-js/modules/_core.js","webpack:///./~/core-js/modules/_descriptors.js","webpack:///./~/core-js/modules/_global.js","webpack:///./~/core-js/modules/_fails.js","webpack:///./~/core-js/modules/_is-object.js","webpack:///./~/core-js/modules/_defined.js","webpack:///./~/core-js/modules/_has.js","webpack:///./~/core-js/modules/_hide.js","webpack:///./~/core-js/modules/_iobject.js","webpack:///./~/core-js/modules/_shared.js","webpack:///./~/core-js/modules/_to-integer.js","webpack:///./~/core-js/modules/_to-iobject.js","webpack:///./~/core-js/modules/_uid.js","webpack:///./~/object-assign/index.js","webpack:///./src/components/About.js","webpack:///./src/components/Articles.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Main.js","webpack:///./src/components/Work.js","webpack:///./src/components/Works.js","webpack:///./src/constants/articles.js","webpack:///./src/constants/descriptionList.js","webpack:///./src/constants/worksData.js","webpack:///./~/core-js/fn/object/assign.js","webpack:///./~/core-js/modules/_a-function.js","webpack:///./~/core-js/modules/_an-object.js","webpack:///./~/core-js/modules/_array-includes.js","webpack:///./~/core-js/modules/_cof.js","webpack:///./~/core-js/modules/_ctx.js","webpack:///./~/core-js/modules/_dom-create.js","webpack:///./~/core-js/modules/_enum-bug-keys.js","webpack:///./~/core-js/modules/_export.js","webpack:///./~/core-js/modules/_function-to-string.js","webpack:///./~/core-js/modules/_ie8-dom-define.js","webpack:///./~/core-js/modules/_library.js","webpack:///./~/core-js/modules/_object-assign.js","webpack:///./~/core-js/modules/_object-dp.js","webpack:///./~/core-js/modules/_object-gops.js","webpack:///./~/core-js/modules/_object-keys-internal.js","webpack:///./~/core-js/modules/_object-keys.js","webpack:///./~/core-js/modules/_object-pie.js","webpack:///./~/core-js/modules/_property-desc.js","webpack:///./~/core-js/modules/_redefine.js","webpack:///./~/core-js/modules/_shared-key.js","webpack:///./~/core-js/modules/_to-absolute-index.js","webpack:///./~/core-js/modules/_to-length.js","webpack:///./~/core-js/modules/_to-object.js","webpack:///./~/core-js/modules/_to-primitive.js","webpack:///./~/core-js/modules/es6.object.assign.js","webpack:///./~/font-awesome/css/font-awesome.min.css","webpack:///./~/normalize.css/normalize.css","webpack:///./src/styles/About.scss","webpack:///./src/styles/App.scss","webpack:///./src/styles/Articles.scss","webpack:///./src/styles/Footer.scss","webpack:///./src/styles/Work.scss","webpack:///./src/styles/Works.scss","webpack:///./~/font-awesome/fonts/fontawesome-webfont.eot","webpack:///./~/font-awesome/fonts/fontawesome-webfont.svg","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react-dom/index.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./~/font-awesome/css/font-awesome.min.css?2e64","webpack:///./~/normalize.css/normalize.css?ea05","webpack:///./src/styles/About.scss?2d25","webpack:///./src/styles/App.scss?0d65","webpack:///./src/styles/Articles.scss?b584","webpack:///./src/styles/Footer.scss?8b89","webpack:///./src/styles/Work.scss?ca05","webpack:///./src/styles/Works.scss?73fe","webpack:///./~/three/build/three.js","webpack:///./src/particles.ts","webpack:///./~/font-awesome/fonts/fontawesome-webfont.ttf","webpack:///./~/font-awesome/fonts/fontawesome-webfont.woff2","webpack:///./~/font-awesome/fonts/fontawesome-webfont.woff","webpack:///./src/assets/contests-sub.png","webpack:///./src/assets/invaders.png","webpack:///./src/assets/photo-filter.png","webpack:///./src/assets/ucc-validator.png","webpack:///./src/assets/webgl-wrokshop.png"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_particles","_particles2","_Main","_Main2","ReactDOM","render","createElement","document","getElementById","window","WebGLRenderingContext","list","toString","result","length","item","push","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","type","createLinkElement","linkElement","rel","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","memo","arguments","isOldIE","test","self","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","defineProperty","value","ABOUT_ME","ARTICLES","MY_WORKS","CONTACT_ME","core","version","__e","get","global","Math","Function","__g","exec","e","it","undefined","TypeError","key","dP","createDesc","object","f","cof","propertyIsEnumerable","split","SHARED","store","mode","copyright","ceil","floor","isNaN","IObject","defined","px","random","toObject","val","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","test3","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","target","source","from","symbols","to","s","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_domID","_descriptionList","_descriptionList2","_Works","_Works2","_Articles","_Articles2","About","_Component","_this","getPrototypeOf","state","descriptionList","DESCRIPTION_LIST","_ref","text","meta","pointer","_this2","incremented","d","setState","setTimeout","incrementDescriptionText","newText","tagList","tagListPointer","shouldWrapTag","displacement","domEndingTag","_tagList$tagListPoint","start","end","tag","attributes","domStartTag","_this3","_ref2","isDone","dangerouslySetInnerHTML","__html","mappingText","className","aria-label","mapDescriptionList","Component","_articles","_articles2","Articles","showActionButton","showAll","_state","data","Number","MAX_VALUE","name","date","url","disabled","onClick","toggleShowAll","Footer","_Footer","_Footer2","_About","_About2","AppComponent","Work","_props","title","picture","description","isIframe","pictureAlt","style","float","width","height","scrolling","src","alt","_extends","_Work","_Work2","_worksData","_worksData2","Works","k","CURRENT_POSITION","_contestsSub","_contestsSub2","_webglWrokshop","_webglWrokshop2","_uccValidator","_uccValidator2","_photoFilter","_photoFilter2","_invaders","_invaders2","contestsSub","photoFilter","invaders","uccValidator","webglWrokshop","isObject","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","O","aFunction","that","is","hide","redefine","ctx","PROTOTYPE","$export","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","expProto","U","W","R","DESCRIPTORS","getKeys","gOPS","pIE","$assign","A","Symbol","K","T","aLen","getSymbols","isEnum","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","has","arrayIndexOf","IE_PROTO","names","$keys","enumBugKeys","bitmap","SRC","$toString","TO_STRING","TPL","inspectSource","safe","isFunction","shared","uid","toInteger","max","min","valueOf","u","da","ba","ca","ea","extractEvents","eventTypes","g","h","fa","phasedRegistrationNames","ha","registrationName","ia","ja","dependencies","ka","l","Array","onError","qa","la","ma","pa","ra","na","oa","wa","currentTarget","va","xa","isArray","ya","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","za","Da","stateNode","sa","Ua","Ta","Va","_status","_ctor","_result","then","Wa","displayName","Ia","Ha","Ka","Ja","Pa","Qa","$$typeof","Ma","La","Oa","Ra","Sa","Xa","_debugOwner","_debugSource","fileName","replace","Fa","lineNumber","return","bb","ua","Za","cb","$a","ab","db","eb","fb","gb","kb","pb","mb","ob","nb","lb","qb","acceptsBooleans","rb","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","tb","toUpperCase","ub","vb","D","removeAttribute","setAttributeNS","wb","nodeName","xb","getOwnPropertyDescriptor","set","getValue","setValue","stopTracking","_valueTracker","yb","zb","checked","Ab","defaultChecked","defaultValue","_wrapperState","initialChecked","Bb","initialValue","controlled","Cb","Eb","Fb","Gb","ownerDocument","activeElement","Hb","aa","Children","Ib","children","Jb","selected","defaultSelected","Kb","Lb","Mb","Nb","textContent","Pb","Qb","Tb","lastChild","nodeType","nodeValue","Ub","Yb","Wb","Vb","Xb","ec","alternate","effectTag","fc","memoizedState","dehydrated","gc","hc","child","sibling","current","ic","wc","xc","uc","yc","vc","zc","blockedOn","topLevelType","eventSystemFlags","nativeEvent","Ac","oc","pc","qc","rc","delete","pointerId","sc","Bc","Cc","kc","Dc","Ec","Fc","q","unstable_runWithPriority","priority","lc","hydrate","containerInfo","Gc","Hc","Ic","Jc","mc","nc","jc","shift","Kc","unstable_scheduleCallback","unstable_NormalPriority","Lc","tc","Mc","srcElement","correspondingUseElement","Nc","Oc","dispatchConfig","Pc","_targetInst","Qc","Rc","Sc","Tc","Uc","E","Interface","isDefaultPrevented","defaultPrevented","returnValue","Wc","eventPool","pop","Xc","destructor","Vc","getPooled","bd","keyCode","charCode","gd","getModifierState","fd","hd","Kd","targetInst","ancestors","Md","Hd","Nd","Od","Pd","addEventListener","ib","Gd","Fd","Qd","Jd","jb","hb","Id","Ld","Rd","Ya","Sd","Set","add","dc","Vd","Td","trim","Wd","setProperty","Yd","Xd","Zd","$d","ae","be","body","ce","de","node","offset","ee","contains","compareDocumentPosition","fe","HTMLIFrameElement","contentWindow","location","ge","contentEditable","ne","autoFocus","oe","re","se","previousSibling","he","ke","je","ie","ue","we","xe","ye","ve","Ce","Be","Ae","ze","Ne","Fe","Oe","detail","Qe","which","Me","Ke","Re","Pe","Ge","ctrlKey","altKey","metaKey","char","Je","locale","Ue","Te","We","Ve","change","Ze","$e","af","cf","Xe","detachEvent","df","Ye","ef","attachEvent","ff","gf","hf","nf","qf","of","pf","xf","wf","tf","selectionStart","selectionEnd","defaultView","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","vf","sf","select","uf","Bf","Af","I","Ef","contextTypes","Cf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","L","childContextTypes","Ff","J","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Df","Kf","dg","Rf","Sf","Tf","Uf","Vf","Wf","eg","fg","Lf","gg","Mf","hg","Zf","$f","ig","Xf","jg","Nf","ag","lg","mg","defaultProps","rg","qg","pg","og","sg","_context","ng","_currentValue","tg","ug","childExpirationTime","vg","firstContext","expirationTime","wg","xg","context","observedBits","next","responders","zg","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstEffect","lastEffect","firstCapturedEffect","lastCapturedEffect","Ag","Bg","suspenseConfig","payload","callback","nextEffect","Cg","Dg","updateQueue","Eg","Fg","Gg","yg","Hg","Ig","C","Jg","Kg","Lg","Og","Tg","shouldComponentUpdate","isPureReactComponent","Ug","contextType","updater","Sg","_reactInternalFiber","Vg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","Wg","Ng","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Yg","ref","_owner","_stringRef","Zg","$g","Map","ah","bh","elementType","ch","implementation","dh","eh","Ga","Xg","y","H","z","r","x","ta","done","lh","hh","mh","kh","jh","ih","documentElement","namespaceURI","tagName","nh","oh","ph","qh","memoizedProps","revealOrder","rh","responder","Q","Hh","Ih","th","uh","vh","sh","Jh","Kh","Bh","Gh","xh","wh","zh","Ch","Lh","yh","Ah","Mh","Nh","queue","baseUpdate","Oh","Ph","Qh","lastRenderedReducer","dispatch","action","last","lastRenderedState","eagerReducer","eagerState","Rh","Sh","Th","Uh","destroy","deps","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","Pg","Mg","suspense","Qg","Rg","fi","gi","hi","pendingProps","ii","ei","di","ci","ji","ki","li","gh","fh","ni","oi","pi","qi","compare","ri","si","ti","ui","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","vi","mi","getDerivedStateFromError","wi","pendingContext","yi","M","fallback","unstable_avoidThisFallback","xi","zi","Ai","isBackwards","rendering","tail","tailExpiration","tailMode","Bi","Ci","Li","Mi","Ni","stack","Pi","console","error","Qi","componentWillUnmount","Ri","Si","Ti","Ui","__reactInternalSnapshotBeforeUpdate","Vi","Wi","Xi","Yi","Zi","$i","_reactRootContainer","onclick","aj","Sb","wasMultiple","multiple","bj","cg","display","cj","Oi","dj","fj","element","gj","hj","ij","componentDidCatch","jj","componentStack","oj","pj","Jj","timeoutMs","Hj","Ij","Kj","nj","Lj","Z","Gj","X","uj","Mj","Nj","Oj","lastExpiredTime","firstPendingTime","Pj","lastPingedTime","nextKnownPendingLevel","callbackExpirationTime","callbackPriority","callbackNode","Qj","timeout","Rj","Sj","Tj","V","Uj","Vj","Wj","lj","rj","wj","finishedWork","finishedExpirationTime","qj","sj","tj","lastSuspendedTime","Xj","xj","Cj","Bj","timeoutHandle","pe","Yj","yj","kj","vj","zj","busyMinDurationMs","busyDelayMs","Zj","ak","bk","ck","qe","Aj","pingCache","ej","dk","t","ek","v","fk","Of","gk","mj","Ii","Ji","Ob","html","innerHTML","size","createElementNS","Hi","Ki","ik","firstSuspendedTime","le","rangeCount","Db","me","focusedElem","selectionRange","Y","jk","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Dh","cc","dd","hk","Eh","Fh","xk","Di","Ei","Fi","wd","Gi","Yf","Dj","Ej","Fj","kk","lk","mk","ok","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","pk","isReactComponent","nk","Na","pendingChildren","qk","rk","sk","tk","retryTime","uk","vk","wk","_internalRoot","yk","zk","hasAttribute","Ak","Bk","Ca","injectEventPluginOrder","injectEventPluginsByName","Ea","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentBatchConfig","w","for","iterator","sb","xlinkHref","Rb","mathml","svg","MSApp","execUnsafeLocalFunction","animationend","animationiteration","animationstart","transitionend","animation","transition","Zb","$b","ac","bc","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","Yc","animationName","elapsedTime","pseudoElement","Zc","clipboardData","$c","view","ad","relatedTarget","cd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","ed","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Alt","Control","Meta","Shift","shiftKey","repeat","jd","kd","ld","md","nd","screenX","screenY","clientX","clientY","pageX","pageY","button","buttons","fromElement","toElement","movementX","movementY","od","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","xd","yd","zd","Ad","Bd","Cd","Dd","bubbled","captured","eventPriority","Ed","getEventPriority","unstable_UserBlockingPriority","WeakMap","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Ud","charAt","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","param","track","wbr","clearTimeout","te","De","Ee","He","documentMode","Ie","Le","beforeInput","compositionEnd","compositionStart","compositionUpdate","Se","color","datetime","datetime-local","email","month","number","password","range","search","tel","time","week","bf","lf","jf","_isInputEventSupported","kf","mouseEnter","mouseLeave","pointerEnter","pointerLeave","mf","parentWindow","rf","yf","onSelect","zf","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","unstable_cancelCallback","unstable_shouldYield","Pf","unstable_requestPaint","Qf","unstable_now","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_LowPriority","unstable_IdlePriority","bg","kg","isMounted","enqueueSetState","enqueueForceUpdate","N","readContext","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useResponder","useDeferredValue","useTransition","unstable_next","ReactCurrentOwner","WeakSet","hidden","_calculateChangedBits","unstable_observedBits","querySelectorAll","form","unmount","Ck","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","flushSync","Events","findFiberByHostInstance","overrideHookState","overrideProps","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","bundleType","rendererPackageName","Dk","Ek","checkDCE","escape","=",":","keyPrefix","func","count","forceUpdate","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","Fragment","Profiler","StrictMode","Suspense","cloneElement","createFactory","isValidElement","IsSomeRendererActing","sortIndex","startTime","priorityLevel","MessageChannel","unstable_forceFrameRate","performance","requestAnimationFrame","cancelAnimationFrame","port2","port1","onmessage","postMessage","delay","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","unstable_Profiling","content","locals","factory","EventDispatcher","Vector2","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","textureId","uuid","_Math","generateUUID","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","RGBAFormat","UnsignedByteType","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","_w","Vector3","Matrix4","elements","DataTexture","NearestFilter","CubeTexture","images","CubeReflectionMapping","UniformContainer","seq","flatten","array","nBlocks","blockSize","firstElem","arrayCacheF32","Float32Array","allocTexUnits","renderer","arrayCacheI32","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","mat3array","setValue4fm","uniformMatrix4fv","mat4array","setValueT1","unit","setTexture2D","emptyTexture","setValueT6","setTextureCube","emptyCubeTexture","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","addUniform","container","uniformObject","parseUniform","path","pathLength","RePathPart","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","Color","setRGB","Box2","Infinity","WebGLFlareRenderer","textures","capabilities","init","vertices","faces","Uint16Array","vertexBuffer","createBuffer","elementBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","tempTexture","createTexture","occlusionTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","shader","vertexShader","fragmentShader","createProgram","vertex","getAttribLocation","uv","uniforms","renderType","occlusionMap","scale","rotation","screenPosition","createShader","FRAGMENT_SHADER","VERTEX_SHADER","prefix","precision","shaderSource","compileShader","attachShader","linkProgram","flares","scene","camera","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","depth","setMask","flare","matrixWorld","applyMatrix4","matrixWorldInverse","projectionMatrix","copy","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","reset","CanvasTexture","canvas","needsUpdate","WebGLSpriteRenderer","position","uvOffset","uvScale","modelViewMatrix","fogType","fogDensity","fogNear","fogFar","fogColor","alphaTest","getContext","fillStyle","fillRect","painterSortStable","renderOrder","spritePosition","spriteRotation","spriteScale","sprites","oldFogType","sceneFogType","fog","isFog","near","far","isFogExp2","density","multiplyMatrices","sort","material","visible","onBeforeRender","decompose","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","onAfterRender","Material","materialId","lights","NormalBlending","side","FrontSide","flatShading","vertexColors","NoColors","transparent","SrcAlphaFactor","OneMinusSrcAlphaFactor","AddEquation","depthFunc","LessEqualDepth","clippingPlanes","clipIntersection","clipShadows","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","userData","ShaderMaterial","parameters","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","setValues","MeshDepthMaterial","depthPacking","BasicDepthPacking","alphaMap","displacementMap","displacementScale","displacementBias","MeshDistanceMaterial","referencePosition","nearDistance","farDistance","Box3","Sphere","center","radius","Matrix3","Plane","normal","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","WebGLShadowMap","_renderer","_objects","maxTextureSize","getDepthMaterial","isPointLight","lightPositionWorld","shadowCameraNear","shadowCameraFar","geometry","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","warn","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","localClippingEnabled","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","clone","scope","renderSingleSided","DoubleSide","renderReverseSided","BackSide","isMeshDistanceMaterial","renderObject","shadowCamera","layers","isMesh","isLine","isPoints","castShadow","frustumCulled","_frustum","intersectsObject","groups","kl","group","groupMaterial","materialIndex","depthMaterial","_lightPositionWorld","renderBufferDirect","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_NumberOfMaterialVariants","cubeDirections","cubeUps","cube2DViewPorts","RGBADepthPacking","distanceMaterial","enabled","autoUpdate","PCFShadowMap","_gl","setClear","setScissorTest","faceCount","il","light","shadow","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","matrix","setFromMatrixPosition","makeTranslation","lookAt","updateMatrixWorld","multiply","setRenderTarget","clear","face","up","vpDimensions","setFromMatrix","WebGLAttributes","attribute","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","deleteBuffer","Euler","_order","DefaultOrder","Layers","mask","Object3D","onRotationChange","quaternion","setFromEuler","onQuaternionChange","setFromQuaternion","object3DId","parent","DefaultUp","onChange","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","Camera","OrthographicCamera","right","bottom","PerspectiveCamera","fov","aspect","filmGauge","filmOffset","Face3","isVector3","vertexNormals","isColor","GeometryIdCount","Geometry","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","boundingSphere","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","indices","normals","uvs","uvs2","arrayMax","BufferGeometry","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","fromBufferGeometry","BoxBufferGeometry","mergeVertices","buildPlane","udir","vdir","gridX","gridY","ix","iy","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","numberOfVertices","addGroup","groupStart","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframeLinecap","wireframeLinejoin","Ray","origin","direction","Line3","Triangle","Mesh","drawMode","TrianglesDrawMode","updateMorphTargets","WebGLBackground","geometries","renderList","forceClear","background","clearColor","clearAlpha","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","boxMesh","ShaderLib","cube","makeScale","copyPosition","tCube","isTexture","planeCamera","planeMesh","alpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","reversePainterSortStable","WebGLRenderList","renderItemsIndex","opaque","renderItem","renderItems","WebGLRenderLists","hash","lists","dispose","absNumericalSort","abs","WebGLMorphtargets","objectInfluences","morphTargetInfluences","influences","influencesList","influence","morphInfluences","getUniforms","WebGLIndexedBufferRenderer","infoRender","setMode","calls","POINTS","points","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","onGeometryDispose","event","buffergeometry","removeEventListener","wireframeAttributes","_bufferGeometry","setFromObject","geometryAttributes","getWireframeAttribute","geometryIndex","UniformsCache","shadowBias","shadowRadius","shadowMapSize","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","WebGLLights","setup","shadows","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","cache","multiplyScalar","vector3","sub","transformDirection","bias","directionalShadowMap","directionalShadowMatrix","directional","isSpotLight","cos","angle","penumbra","spotShadowMap","spotShadowMatrix","spot","isRectAreaLight","matrix42","identity","matrix4","premultiply","extractRotation","rectArea","pointShadowMap","pointShadowMatrix","point","isHemisphereLight","normalize","hemi","ambient","WebGLObjects","frame","updateList","updateFromObject","addLineNumbers","string","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getEncodingComponents","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","generateExtensions","rendererExtensions","chunks","envMapCubeUV","bumpMap","normalMap","logarithmicDepthBuffer","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","include","ShaderChunk","pattern","unrollLoops","snippet","unroll","parseInt","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","PCFSoftShadowMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","MixOperation","AddOperation","prefixVertex","prefixFragment","gammaFactorDefine","gammaFactor","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","emissiveMap","roughnessMap","metalnessMap","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","sizeAttenuation","gradientMap","numClipIntersection","physicallyCorrectLights","NoToneMapping","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","isShaderMaterial","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","log","deleteShader","cachedUniforms","cachedAttributes","getAttributes","deleteProgram","programIdCount","usedTimes","WebGLPrograms","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","isWebGLRenderTarget","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","getParameters","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","getProgramCode","onBeforeCompile","acquireProgram","pl","programInfo","releaseProgram","WebGLTextures","properties","utils","clampToMaxSize","maxSize","drawImage","isPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","nearestPowerOfTwo","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LINEAR","onTextureDispose","deallocateTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","isWebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","RGBFormat","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","setTextureCubeDynamic","textureType","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","_isWebGL2","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DepthFormat","UnsignedShortType","UnsignedIntType","DepthStencilFormat","DEPTH_STENCIL","UnsignedInt248Type","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGL2RenderingContext","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","equals","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","newAttributes","enabledAttributes","enableVertexAttribArray","attributeDivisors","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","compressedTextureFormats","formats","getParameter","COMPRESSED_TEXTURE_FORMATS","currentProgram","NoBlending","CustomBlending","currentBlending","currentPremultipledAlpha","AdditiveBlending","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","MultiplyBlending","SRC_COLOR","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","setMaterial","setFlipSided","colorBuffer","setPolygonOffset","currentFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CullFaceNone","currentCullFace","CullFaceBack","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setLineWidth","currentLineWidth","lineWidthAvailable","lineWidth","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","SCISSOR_TEST","webglSlot","maxTextures","currentTextureSlot","webglType","boundTexture","currentBoundTextures","emptyTextures","currentScissor","currentViewport","maxVertexAttributes","MAX_VERTEX_ATTRIBS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","parseFloat","VERSION","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","ArrayCamera","cameras","WebVRManager","onVRDisplayPresentChange","device","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","currentPixelRatio","getPixelRatio","currentSize","getSize","setDrawingBufferSize","frameData","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","cameraVR","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","fromArray","orientation","stageParameters","sittingToStandingTransform","getInverse","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","resetGlobalState","uniform","globalState","numGlobalPlanes","numPlanes","numIntersection","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewNormalMatrix","getNormalMatrix","i4","plane","renderingShadows","enableLocalClipping","beginShadows","endShadows","fromCache","nGlobal","lGlobal","clippingState","WebGLUtils","RepeatWrapping","REPEAT","MirroredRepeatWrapping","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipMapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","DST_ALPHA","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","DstColorFactor","DST_COLOR","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","MinEquation","MaxEquation","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","initGLContext","MaxIndex","_currentScissor","_scissor","_currentViewport","_viewport","_infoMemory","objects","_infoRender","morphtargets","programCache","renderLists","_premultipliedAlpha","bufferRenderer","indexedBufferRenderer","flareRenderer","spriteRenderer","onContextLost","_isContextLost","onContextRestore","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","setupVertexAttributes","startIndex","isInstancedBufferGeometry","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","isAnimating","vr","loop","onAnimationFrame","projectObject","sortObjects","isLight","lightsArray","shadowsArray","isSprite","intersectsSprite","spritesArray","isLensFlare","flaresArray","isImmediateRenderObject","_vector3","currentRenderList","renderObjects","overrideMaterial","isArrayCamera","_currentArrayCamera","camera2","_width","_height","setProgram","_currentGeometryProgram","initMaterial","materialProperties","_clipping","programChange","UniformsUtils","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","ambientLightColor","directionalLights","spotLights","rectAreaLights","pointLights","hemisphereLights","progUniforms","uniformsList","seqWithValue","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","_currentCamera","useCache","_currentMaterialId","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","setOptional","boneTexture","sqrt","nextPowerOfTwo","boneMatrices","boneTextureSize","toneMappingExposure","toneMappingWhitePoint","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltcMat","UniformsLib","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","upload","diffuse","emissive","emissiveIntensity","flipEnvMap","uvScaleMap","offsetRepeat","dashSize","totalSize","gapSize","specular","shininess","bumpScale","normalScale","roughness","metalness","envMapIntensity","clearCoat","clearCoatRoughness","textureUnit","REVISION","_canvas","_alpha","_depth","_stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","domElement","_currentFramebuffer","_currentScissorTest","_scissorTest","memory","contextAttributes","rangeMin","rangeMax","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","geometryProgram","updateBuffers","rangeFactor","dataCount","rangeStart","drawStart","drawEnd","drawCount","LINES","TriangleStripDrawMode","TRIANGLE_STRIP","TriangleFanDrawMode","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","compile","traverse","animate","isCamera","opaqueObjects","transparentObjects","setFaceCulling","frontFaceDirection","FrontFaceDirectionCW","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","o","ol","edge1","edge2","edge","edges","index1","index2","getX","fromBufferAttribute","ParametricGeometry","slices","stacks","ParametricBufferGeometry","EPS","pu","pv","sliceCount","subVectors","crossVectors","PolyhedronGeometry","PolyhedronBufferGeometry","subdivide","getVertexByIndex","subdivideFace","cols","pow","lerp","rows","pushVertex","appplyRadius","generateUVs","azimuth","PI","inclination","uvBuffer","correctUVs","correctSeam","x0","x1","x2","centroid","uvA","uvB","uvC","divideScalar","azi","correctUV","atan2","computeVertexNormals","normalizeNormals","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","generateBufferData","generateSegment","generateIndices","getPointAt","frames","sin","computeFrenetFrames","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","calculatePositionOnCurve","cu","su","quOverP","cs","P1","P2","addVectors","cx","cy","TorusGeometry","arc","TorusBufferGeometry","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","clamp","inverseSegments","phi","n1","n2","ShapeGeometry","ShapeBufferGeometry","addShape","shape","shapeHole","indexOffset","extractPoints","shapeVertices","shapeHoles","holes","ShapeUtils","isClockWise","reverse","triangulateShape","EdgesGeometry","thresholdAngle","geometry2","thresholdDot","DEG2RAD","computeFaceNormals","sourceVertices","face1","face2","dot","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","generateTorso","slope","indexRow","theta","sinTheta","cosTheta","indexArray","generateCap","centerIndexStart","centerIndexEnd","sign","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","RawShaderMaterial","STANDARD","PHYSICAL","TOON","LoadingManager","onLoad","onProgress","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","FileLoader","manager","DefaultLoadingManager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","updateMatrix","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","times","values","interpolation","AnimationUtils","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","withCredentials","ObjectLoader","texturePath","CatmullRom","v0","v1","t2","t3","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","LineCurve","v2","CurvePath","curves","autoClose","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v3","QuadraticBezierCurve","Path","currentPoint","fromPoints","Shape","ShapePath","subPaths","currentPath","Font","FontLoader","AudioLoader","StereoCamera","eyeSep","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","AudioContext","gain","createGain","connect","destination","Audio","listener","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","typeName","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","clip","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","endingStart","ZeroCurvatureEnding","endingEnd","interpolant","createInterpolant","settings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","LoopRepeat","_loopCount","_startTime","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ray","params","threshold","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","raycast","Clock","autoStart","oldTime","running","Spherical","Cylindrical","ImmediateRenderObject","renderCallback","VertexNormalsHelper","hex","nNormals","objGeometry","positions","SpotLightHelper","cone","getBoneList","boneList","isBone","SkeletonHelper","color1","color2","bone","VertexColors","PointLightHelper","sphereSize","RectAreaLightHelper","line","HemisphereLightHelper","rotateY","getAttribute","GridHelper","divisions","step","halfSize","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","addLine","addPoint","pointMap","FaceColors","colorFrustum","colorCone","colorUp","colorTarget","colorCross","BoxHelper","Box3Helper","box","computeBoundingSphere","PlaneHelper","positions2","ArrowHelper","dir","headLength","headWidth","lineGeometry","coneGeometry","translate","setDirection","setLength","AxisHelper","CubicPoly","t0","t1","c0","c1","c2","c3","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","CatmullRomCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","aRadius","Face4","MeshFaceMaterial","materials","MultiMaterial","isMultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","setDynamic","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","EPSILON","isInteger","isFinite","output","nextKey","_listeners","listeners","hasEventListener","listenerArray","dispatchEvent","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCCW","BasicShadowMap","FlatShading","SmoothShading","UVMapping","RGBEFormat","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","RAD2DEG","chars","rnd","euclideanModulo","mapLinear","a1","a2","b1","b2","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","degToRad","degrees","radToDeg","radians","round","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","divide","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","lengthSq","lengthManhattan","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","lerpVectors","getY","rotateAround","toJSON","getDataURL","ImageData","putImageData","toDataURL","metadata","generator","wrap","transformUv","isVector4","setZ","setW","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","slerp","qm","slerpFlat","dst","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","y1","z1","w1","sqrSin","len","tDir","onChangeCallback","euler","isEuler","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","iz","iw","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setFromSpherical","sinPhiRadius","setFromCylindrical","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","extractBasis","xAxis","yAxis","zAxis","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","makeRotationFromQuaternion","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","setXYZ","determinant","transpose","tmp","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeShear","compose","invSX","invSY","invSZ","makePerspective","makeOrthographic","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setHex","setStyle","setHSL","hue2rgb","handleAlpha","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","common","specularmap","envmap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","merge","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","basic","lambert","phong","standard","dashed","tFlip","equirect","tEquirect","distanceRGBA","physical","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","isEmpty","getCenter","expandByVector","expandByScalar","containsBox","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","isMaterial","newValue","currentValue","extractFromCache","isRoot","parse","srcPlanes","dstPlanes","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","expandByObject","intersectsSphere","closestPoint","sphere","intersectsPlane","getBoundingSphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","negRadius","d1","d2","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","toggle","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateX","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","serialize","library","isRootObject","uuids","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","computeBoundingBox","addFace","tempNormals","tempUVs","tempUVs2","fl","vA","vB","vC","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","diff","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","getIndex","clearGroups","setDrawRange","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","array2","morphAttribute","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","edgeList","projectedPoint","minDistance","setDrawMode","ml","morphTargetDictionary","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","faceIndex","inverseMatrix","tempA","tempB","tempC","fvA","fvB","fvC","faceMaterial","tl","targets","uvs_f","vecX","vecY","wantedRotation","isSpriteMaterial","intersectPoint","worldPosition","worldScale","guessSizeSq","level","addLevel","getObjectForDistance","matrixPosition","offsetMatrix","identityMatrix","gbone","pos","rotq","scl","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","testPoint","rayPointDistanceSq","localThresholdSq","distanceToRay","localThreshold","contour","triangulate","snip","verts","py","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","hole","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","intersectsHoleEdge","ihIdx","chkHole","hIdx","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","pts","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","indicesArray","sl","arrays","scalePt2","pt","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","vlen","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","extrudeMaterial","slen1","slen2","f4","placeholder","addVertex","nextIndex","uvgen","generateTopUV","addUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","vector2","extrudePts","splineTube","binormal","position2","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","getSpacedPoints","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","Geometries","freeze","Materials","Cache","files","file","load","cached","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","ArrayBuffer","charCodeAt","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","status","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loadTexture","loader","texDatas","mipmapCount","isCubemap","texData","crossOrigin","substr","setCrossOrigin","urls","isJPEG","arraySlice","isTypedArray","forceClone","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrackPrototype","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","ValueTypeName","getInterpolation","timeOffset","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","json","trackType","_getTrackTypeForValueTypeName","jsonTracks","frameTime","fps","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","Handlers","handlers","regex","extractUrlBase","initMaterials","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setTexturePath","parseModel","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","getPoint","getUtoTmapping","getPoints","getLength","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","tz","isLineCurve","tangent","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","intPoint","point0","point1","point2","point3","PathPrototype","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","createPaths","line_height","yMax","yMin","underlineThickness","paths","ret","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","webkitAudioContext","setContext","decodeAudioData","audioBuffer","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","stop","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","directoryRe","nodeRe","objectRe","propertyRe","trackRe","RegExp","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","setFromCamera","coords","intersectObjects","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","hx","hy","setPoint","setColor","pz","SceneUtils","createMultiMaterialObject","detach","attach","LineStrip","LinePieces","construct","initFromArray","getControlPointsArray","reparametrizeByArcLength","samplingCoef","setColors","isIntersectionBox","isIntersectionSphere","random16","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","fromAttribute","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CubeGeometry","mobilecheck","check","vendor","opera","onDocumentMouseMove","evt","yInc","scrollY","rayX","offsetLeft","displayRatio","visibleWidth","rayY","offsetTop","visibleHeight","getRendererWidth","querySelector","targetSelector","offsetWidth","rebuildParticles","onReset","offsetHeight","distanceFromCamera","drawText","namePoints","isOnDebounce","renderingLoop","selector","THREE","filterLogging","undesiredPattern","originalLog","_i","isMobile","maxSpeed","planeMaterial","planeGeometry","posX","posY","rendererWidth","speedX","speedY","setPos","mouseX","mouseY","_a","accX","accY","hemisphereLight","MIN_VALUE","process","renderPoints","boundary","innerWidth","innerHeight"],"mappings":"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C,GAAA,o5BAEAC,GAAA,iQAEAC,GAAA,iSAEAC,GAAA,6RAEAC,GAAA,oFAEAC,GAAA,2GAEAC,GAAA,6EAEAC,GAAA,2NAEAC,GAAA,wPAEAC,GAAA,+LAEAC,GAAA,ivBAEAC,GAAA,oqBAEAC,GAAA,+rBAEAC,GAAA,otBAEAC,GAAA,oXAEAC,GAAA,+LAEAC,GAAA,qyBAEAC,GAAA,khBAEAC,GAAA,w8CAEAC,GAAA,u2BAEAC,GAAA,mlEAEAC,GAAA,4jCAEAC,GAAA,g4DAEAC,GAAA,uqCAEAC,GAAA,0mEAEAC,GAAA,+mCAEAC,GAAA,wgBAEAC,GAAA,i8BAEAC,GAAA,8yBAEAC,GAAA,4mBAEAC,GAAA,kSAEAC,GAAA,4KAEAh4D;AACAqxD,qBACAC,0BACAC,sBACAC,kBACAC,uBACAC,gBACAC,sBACAC,SACAC,yBACAC,4BACAC,iCACAC,+BACAC,0BACAC,kBACAC,uBACAC,qBACAC,gBACAlC,UACAmC,+BACAC,wBACAC,+BACAC,0BACAC,wBACAC,6BACAC,sBACAC,2BACAC,mBACAC,wBACAC,sBACAC,iBACAC,cACAC,mBACAC,gBACAC,qBACAC,6BACAC,qBACAC,0BACAC,yBACAC,eACAC,yBACAC,8BACAC,4BACAC,iCACAC,mBACAC,wBACAC,6BACAC,2BACAC,sBACAC,gBACAC,qBACAC,yBACAC,8BACAC,yBACAC,8BACAC,sBACAC,2BACAC,sBACAC,mBACAC,2BACAC,WACAC,gCACAC,kBACAC,sBACAC,2BACAC,yBACAC,8BACAC,2BACAC,yBACAC,oBACAC,4BACAC,mBACAC,wBACAC,mBACAC,qBACAC,wBACAC,6BACAC,wBACAC,6BACAC,oBACAC,kBACAC,aACAC,qBACAC,mBACAC,cACAC,mBAEAC,aACAC,aACAC,cACAC,cACAC,qBACAC,qBACAC,iBACAC,iBACAC,mBACAC,mBACAC,kBACAC,kBACAC,oBACAC,oBACAC,kBACAC,kBACAC,qBACAC,qBACAC,eACAC,eACAC,eACAC,eACAC,eACAC,gBASAliE,IAEAmiE,OAEA79E,SAAAoqC,GAAAusC,OA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","file":"app918367730d6546be08a1.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(28);\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(66);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _particles = __webpack_require__(79);\n\t\n\tvar _particles2 = _interopRequireDefault(_particles);\n\t\n\tvar _Main = __webpack_require__(22);\n\t\n\tvar _Main2 = _interopRequireDefault(_Main);\n\t\n\t__webpack_require__(71);\n\t\n\t__webpack_require__(70);\n\t\n\t__webpack_require__(73);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Render the main component into the dom\n\t_reactDom2.default.render(_react2.default.createElement(_Main2.default, null), document.getElementById('main'));\n\t\n\t!!window.WebGLRenderingContext && (0, _particles2.default)(\"#header\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(67);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(true) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction createLinkElement(options) {\n\t\tvar linkElement = document.createElement(\"link\");\n\t\tlinkElement.rel = \"stylesheet\";\n\t\tinsertStyleElement(options, linkElement);\n\t\treturn linkElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else if(obj.sourceMap &&\n\t\t\ttypeof URL === \"function\" &&\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\t\ttypeof Blob === \"function\" &&\n\t\t\ttypeof btoa === \"function\") {\n\t\t\tstyleElement = createLinkElement(options);\n\t\t\tupdate = updateLink.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t\tif(styleElement.href)\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t\t};\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\n\t\tif(media) {\n\t\t\tstyleElement.setAttribute(\"media\", media)\n\t\t}\n\t\n\t\tif(styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\t\n\tfunction updateLink(linkElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif(sourceMap) {\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\n\t\n\t\tvar oldSrc = linkElement.href;\n\t\n\t\tlinkElement.href = URL.createObjectURL(blob);\n\t\n\t\tif(oldSrc)\n\t\t\tURL.revokeObjectURL(oldSrc);\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ABOUT_ME = exports.ABOUT_ME = 'about';\n\tvar ARTICLES = exports.ARTICLES = 'articles';\n\tvar MY_WORKS = exports.MY_WORKS = 'my_works';\n\tvar CONTACT_ME = exports.CONTACT_ME = 'me';\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tvar core = module.exports = { version: '2.6.10' };\n\tif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(8)(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function (it) {\n\t  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar dP = __webpack_require__(41);\n\tvar createDesc = __webpack_require__(46);\n\tmodule.exports = __webpack_require__(6) ? function (object, key, value) {\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(32);\n\t// eslint-disable-next-line no-prototype-builtins\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar core = __webpack_require__(5);\n\tvar global = __webpack_require__(7);\n\tvar SHARED = '__core-js_shared__';\n\tvar store = global[SHARED] || (global[SHARED] = {});\n\t\n\t(module.exports = function (key, value) {\n\t  return store[key] || (store[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: core.version,\n\t  mode: __webpack_require__(39) ? 'pure' : 'global',\n\t  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n\t});\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tmodule.exports = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(13);\n\tvar defined = __webpack_require__(10);\n\tmodule.exports = function (it) {\n\t  return IObject(defined(it));\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tmodule.exports = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _domID = __webpack_require__(4);\n\t\n\tvar _descriptionList = __webpack_require__(26);\n\t\n\tvar _descriptionList2 = _interopRequireDefault(_descriptionList);\n\t\n\tvar _Works = __webpack_require__(24);\n\t\n\tvar _Works2 = _interopRequireDefault(_Works);\n\t\n\tvar _Articles = __webpack_require__(20);\n\t\n\tvar _Articles2 = _interopRequireDefault(_Articles);\n\t\n\t__webpack_require__(72);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar About = function (_Component) {\n\t  _inherits(About, _Component);\n\t\n\t  function About() {\n\t    _classCallCheck(this, About);\n\t\n\t    var _this = _possibleConstructorReturn(this, (About.__proto__ || Object.getPrototypeOf(About)).call(this));\n\t\n\t    _this.state = {\n\t      descriptionList: _descriptionList2.default.map(function (_ref) {\n\t        var text = _ref.text,\n\t            meta = _ref.meta;\n\t        return {\n\t          meta: meta,\n\t          text: text,\n\t          // Remove the typing animation\n\t          pointer: 9999\n\t        };\n\t      })\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(About, [{\n\t    key: 'incrementDescriptionText',\n\t    value: function incrementDescriptionText() {\n\t      var _this2 = this;\n\t\n\t      var descriptionList = this.state.descriptionList;\n\t\n\t      var incremented = false;\n\t      descriptionList.forEach(function (d) {\n\t        if (incremented) {\n\t          return;\n\t        }\n\t        if (d.text.length > d.pointer) {\n\t          d.pointer++;\n\t          incremented = true;\n\t        }\n\t      });\n\t      if (incremented) {\n\t        this.setState({ descriptionList: descriptionList });\n\t        setTimeout(function () {\n\t          _this2.incrementDescriptionText();\n\t        }, 30);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.incrementDescriptionText();\n\t    }\n\t  }, {\n\t    key: 'mappingText',\n\t    value: function mappingText(text, pointer, meta) {\n\t      var newText = text.slice(0, pointer);\n\t      if (!meta || !meta.tagList) {\n\t        return newText;\n\t      }\n\t      var tagList = meta.tagList;\n\t\n\t      var tagListPointer = 0;\n\t      var shouldWrapTag = false;\n\t      var displacement = 0;\n\t      var domEndingTag = '';\n\t\n\t      for (var i = 0; i < newText.length; i++) {\n\t        var _tagList$tagListPoint = tagList[tagListPointer],\n\t            start = _tagList$tagListPoint.start,\n\t            end = _tagList$tagListPoint.end,\n\t            tag = _tagList$tagListPoint.tag,\n\t            attributes = _tagList$tagListPoint.attributes;\n\t\n\t        var domStartTag = '<' + tag + ' ' + (attributes ? attributes : '') + '>';\n\t        domEndingTag = '</' + tag + '>';\n\t\n\t        if (i === start + displacement) {\n\t          newText = '' + newText.slice(0, i) + domStartTag + newText.slice(i);\n\t          displacement += domStartTag.length;\n\t          i += domStartTag.length;\n\t          shouldWrapTag = true;\n\t        }\n\t\n\t        if (i === end + displacement) {\n\t          newText = '' + newText.slice(0, i) + domEndingTag + newText.slice(i);\n\t          displacement += domEndingTag.length;\n\t          i += domEndingTag.length;\n\t          tagListPointer++;\n\t          shouldWrapTag = false;\n\t        }\n\t      }\n\t      if (shouldWrapTag) {\n\t        newText += domEndingTag;\n\t      }\n\t      return newText;\n\t    }\n\t  }, {\n\t    key: 'mapDescriptionList',\n\t    value: function mapDescriptionList() {\n\t      var _this3 = this;\n\t\n\t      var descriptionList = this.state.descriptionList;\n\t\n\t      return descriptionList.map(function (_ref2, i) {\n\t        var text = _ref2.text,\n\t            pointer = _ref2.pointer,\n\t            meta = _ref2.meta;\n\t\n\t        var length = text.length;\n\t        var isDone = i === descriptionList.length - 1 && pointer === length;\n\t        return pointer > 0 && _react2.default.createElement(\n\t          'div',\n\t          { key: i },\n\t          _react2.default.createElement(\n\t            'p',\n\t            null,\n\t            _react2.default.createElement('span', { dangerouslySetInnerHTML: { __html: _this3.mappingText(text, pointer, meta) } }),\n\t            (pointer < length || isDone) && _react2.default.createElement('span', { className: 'typing-cursor ' + (isDone ? 'done' : '') })\n\t          )\n\t        );\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'main',\n\t        { className: 'About row', id: _domID.ABOUT_ME },\n\t        _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'flex-container' },\n\t            _react2.default.createElement(\n\t              'section',\n\t              { className: 'column small-10 description-list', 'aria-label': 'introduction' },\n\t              this.mapDescriptionList()\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'flex-container' },\n\t            _react2.default.createElement(\n\t              'a',\n\t              {\n\t                'aria-label': 'David\\'s Github profile',\n\t                className: 'column small-6 medium-3 account-container',\n\t                target: '_blank',\n\t                href: 'https://github.com/EcutDavid'\n\t              },\n\t              _react2.default.createElement('i', { className: 'fa fa-github' }),\n\t              'Github'\n\t            ),\n\t            _react2.default.createElement(\n\t              'a',\n\t              {\n\t                'aria-label': 'David\\'s Stack overflow profile',\n\t                className: 'column small-6 medium-3 account-container',\n\t                target: '_blank',\n\t                href: 'http://stackoverflow.com/users/5076405/david-guan'\n\t              },\n\t              _react2.default.createElement('i', { className: 'fa fa-stack-overflow' }),\n\t              'Stack overflow'\n\t            ),\n\t            _react2.default.createElement(\n\t              'a',\n\t              {\n\t                'aria-label': 'David\\'s Medium homepage',\n\t                className: 'column small-6 medium-3 account-container',\n\t                target: '_blank',\n\t                href: 'https://medium.com/@davidguandev'\n\t              },\n\t              _react2.default.createElement('i', { className: 'fa fa-medium' }),\n\t              'Medium'\n\t            ),\n\t            _react2.default.createElement(\n\t              'a',\n\t              {\n\t                'aria-label': 'David\\'s Youtube channel',\n\t                className: 'column small-6 medium-3 account-container',\n\t                target: '_blank',\n\t                href: 'https://www.youtube.com/channel/UCxSyYbODJF3ULNMoRwxjJbg'\n\t              },\n\t              _react2.default.createElement('i', { className: 'fa fa-youtube' }),\n\t              'Youtube channel'\n\t            )\n\t          ),\n\t          _react2.default.createElement(_Works2.default, null),\n\t          _react2.default.createElement(_Articles2.default, null)\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return About;\n\t}(_react.Component);\n\t\n\texports.default = About;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _articles = __webpack_require__(25);\n\t\n\tvar _articles2 = _interopRequireDefault(_articles);\n\t\n\tvar _domID = __webpack_require__(4);\n\t\n\t__webpack_require__(74);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Articles = function (_Component) {\n\t  _inherits(Articles, _Component);\n\t\n\t  function Articles() {\n\t    _classCallCheck(this, Articles);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Articles.__proto__ || Object.getPrototypeOf(Articles)).call(this));\n\t\n\t    _this.state = {\n\t      showActionButton: false,\n\t      showAll: true\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Articles, [{\n\t    key: \"toggleShowAll\",\n\t    value: function toggleShowAll() {\n\t      var _this2 = this;\n\t\n\t      var showAll = this.state.showAll;\n\t\n\t\n\t      this.setState({\n\t        showAll: !showAll\n\t      });\n\t      setTimeout(function () {\n\t        _this2.setState({ showActionButton: false });\n\t      }, 0);\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      var _state = this.state,\n\t          showAll = _state.showAll,\n\t          showActionButton = _state.showActionButton;\n\t\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        { id: _domID.ARTICLES, className: \"articles-container\" },\n\t        _react2.default.createElement(\n\t          \"h2\",\n\t          { className: \"title\" },\n\t          \"Articles\"\n\t        ),\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: \"content\" },\n\t          _articles2.default.slice(0, showAll ? Number.MAX_VALUE : 5).map(function (d, i) {\n\t            return _react2.default.createElement(\n\t              \"article\",\n\t              {\n\t                className: \"flex-container\",\n\t                key: i,\n\t                \"aria-label\": d.name + \", \" + d.date\n\t              },\n\t              _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"small-11 small-centered medium-9 large-7\" },\n\t                _react2.default.createElement(\n\t                  \"div\",\n\t                  { className: \"article\" },\n\t                  _react2.default.createElement(\n\t                    \"h3\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                      \"a\",\n\t                      { className: \"link\", target: \"_blank\", href: d.url },\n\t                      d.name\n\t                    )\n\t                  ),\n\t                  _react2.default.createElement(\n\t                    \"span\",\n\t                    { className: \"date\" },\n\t                    d.date\n\t                  )\n\t                )\n\t              )\n\t            );\n\t          })\n\t        ),\n\t        showActionButton && _react2.default.createElement(\n\t          \"button\",\n\t          {\n\t            className: \"button action-button \" + (showAll ? \"hide-button\" : \"\"),\n\t            disabled: showAll ? true : false,\n\t            onClick: function onClick() {\n\t              return _this3.toggleShowAll();\n\t            }\n\t          },\n\t          \"Display more articles\"\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Articles;\n\t}(_react.Component);\n\t\n\texports.default = Articles;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _domID = __webpack_require__(4);\n\t\n\t__webpack_require__(75);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Footer = function (_Component) {\n\t  _inherits(Footer, _Component);\n\t\n\t  function Footer() {\n\t    _classCallCheck(this, Footer);\n\t\n\t    return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Footer, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'footer',\n\t        { className: 'Footer', id: _domID.CONTACT_ME },\n\t        _react2.default.createElement(\n\t          'a',\n\t          {\n\t            'aria-label': 'David\\'s linkedin profile',\n\t            className: 'footer-link',\n\t            target: '_blank',\n\t            href: 'https://www.linkedin.com/in/david-guan-64b69b110'\n\t          },\n\t          _react2.default.createElement('i', { className: 'fa fa-linkedin-square' })\n\t        ),\n\t        _react2.default.createElement(\n\t          'a',\n\t          {\n\t            'aria-label': 'David\\'s twitter profile',\n\t            className: 'footer-link',\n\t            target: '_blank',\n\t            href: 'https://twitter.com/davidguandev'\n\t          },\n\t          _react2.default.createElement('i', { className: 'fa fa-twitter' })\n\t        ),\n\t        _react2.default.createElement('br', null),\n\t        _react2.default.createElement(\n\t          'a',\n\t          {\n\t            'aria-label': 'Send a email to David',\n\t            className: 'mail',\n\t            href: 'mailto:davidguandev@gmail.com'\n\t          },\n\t          'davidguandev@gmail.com'\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'snack-bar' },\n\t          _react2.default.createElement(\n\t            'p',\n\t            null,\n\t            'All the assets cached locally.'\n\t          ),\n\t          _react2.default.createElement(\n\t            'p',\n\t            null,\n\t            'Ready for offline situations!'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Footer;\n\t}(_react.Component);\n\t\n\texports.default = Footer;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Footer = __webpack_require__(21);\n\t\n\tvar _Footer2 = _interopRequireDefault(_Footer);\n\t\n\tvar _About = __webpack_require__(19);\n\t\n\tvar _About2 = _interopRequireDefault(_About);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar AppComponent = function (_Component) {\n\t  _inherits(AppComponent, _Component);\n\t\n\t  function AppComponent() {\n\t    _classCallCheck(this, AppComponent);\n\t\n\t    return _possibleConstructorReturn(this, (AppComponent.__proto__ || Object.getPrototypeOf(AppComponent)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(AppComponent, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'App' },\n\t        _react2.default.createElement(_About2.default, null),\n\t        _react2.default.createElement(_Footer2.default, null)\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return AppComponent;\n\t}(_react.Component);\n\t\n\texports.default = AppComponent;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\t__webpack_require__(76);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Work = function (_Component) {\n\t  _inherits(Work, _Component);\n\t\n\t  function Work() {\n\t    _classCallCheck(this, Work);\n\t\n\t    return _possibleConstructorReturn(this, (Work.__proto__ || Object.getPrototypeOf(Work)).call(this));\n\t  }\n\t\n\t  _createClass(Work, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _props = this.props,\n\t          title = _props.title,\n\t          picture = _props.picture,\n\t          description = _props.description,\n\t          className = _props.className,\n\t          index = _props.index,\n\t          isIframe = _props.isIframe,\n\t          pictureAlt = _props.pictureAlt;\n\t\n\t\n\t      return _react2.default.createElement(\n\t        \"section\",\n\t        {\n\t          \"aria-label\": \"Project \" + title,\n\t          className: className,\n\t          style: index === 5 ? { float: \"right\" } : {}\n\t        },\n\t        !isIframe ? _react2.default.createElement(\"img\", { className: \"img thumbnail\", src: picture, alt: pictureAlt }) : _react2.default.createElement(\"iframe\", {\n\t          className: \"img thumbnail\",\n\t          width: \"300\",\n\t          height: \"300\",\n\t          scrolling: \"no\"\n\t        }),\n\t        _react2.default.createElement(\n\t          \"h3\",\n\t          { \"aria-label\": \"Project \" + title },\n\t          title\n\t        ),\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: \"description\" },\n\t          description\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Work;\n\t}(_react.Component);\n\t\n\texports.default = Work;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Work = __webpack_require__(23);\n\t\n\tvar _Work2 = _interopRequireDefault(_Work);\n\t\n\tvar _worksData = __webpack_require__(27);\n\t\n\tvar _worksData2 = _interopRequireDefault(_worksData);\n\t\n\tvar _domID = __webpack_require__(4);\n\t\n\t__webpack_require__(77);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Works = function (_Component) {\n\t  _inherits(Works, _Component);\n\t\n\t  function Works() {\n\t    _classCallCheck(this, Works);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Works.__proto__ || Object.getPrototypeOf(Works)).call(this));\n\t\n\t    _this.state = {\n\t      // Just have 5 projects for now, no need for the toggle button.\n\t      showAll: true\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Works, [{\n\t    key: 'toggleShowAll',\n\t    value: function toggleShowAll() {\n\t      var showAll = this.state.showAll;\n\t\n\t\n\t      this.setState({\n\t        showAll: !showAll\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var showAll = this.state.showAll;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { id: _domID.MY_WORKS },\n\t        _react2.default.createElement(\n\t          'h2',\n\t          { className: 'title' },\n\t          'Projects'\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'flex-container work-container' },\n\t          _worksData2.default.slice(0, showAll ? 6 : 3).map(function (d, k) {\n\t            return _react2.default.createElement(_Work2.default, _extends({}, d, {\n\t              key: k,\n\t              className: 'column work medium-6 large-4',\n\t              index: k\n\t            }));\n\t          })\n\t        ),\n\t        !showAll && _react2.default.createElement(\n\t          'button',\n\t          {\n\t            className: 'button action-button ' + (showAll ? 'hide-button' : ''),\n\t            disabled: showAll ? true : false,\n\t            onClick: function onClick() {\n\t              return _this2.toggleShowAll();\n\t            }\n\t          },\n\t          'More'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Works;\n\t}(_react.Component);\n\t\n\texports.default = Works;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = [{\n\t  date: \"Jan 2020\",\n\t  url: \"https://medium.com/@davidguandev/2019-year-in-review-d4580d38cd3a\",\n\t  name: \"2019 Year in Review\"\n\t}, {\n\t  date: \"Oct 2019\",\n\t  url: \"https://medium.com/@davidguandev/build-a-voice-notes-app-part-2-user-system-5aa58594469e\",\n\t  name: \"Build a Voice Notes App — Part 2, User System\"\n\t}, {\n\t  date: \"Aug 2019\",\n\t  url: \"https://medium.com/@davidguandev/build-a-voice-notes-app-part-1-text-to-speech-pipeline-afde7e42da63\",\n\t  name: \"Build a Voice Notes App — Part 1, Text to Speech Pipeline\"\n\t}, {\n\t  date: \"Apr 2019\",\n\t  url: \"https://medium.com/@davidguandev/reversing-string-that-contains-emojis-in-javascript-and-c-2d2979d28e26\",\n\t  name: \"Reversing String That Contains Emojis in Javascript and C++\"\n\t}, {\n\t  date: \"Jan 2019\",\n\t  url: \"https://medium.com/p/8f2c498fcc7e\",\n\t  name: \"2018 Year in Review\"\n\t}, {\n\t  date: \"Dec 2018\",\n\t  url: \"https://medium.com/p/1ef024e85c22\",\n\t  name: \"AOC 2018 Day 20: A Regular Map\"\n\t}, {\n\t  date: \"June 2018\",\n\t  name: \"Fixed a Bunch of Accessibility Issues for My Website(And How)\",\n\t  url: \"https://medium.com/p/bbaac48d314f\"\n\t}, {\n\t  date: \"June 2018\",\n\t  name: \"A Bash Script That Saves Me from git -m “I forgot git add”\",\n\t  url: \"https://medium.com/p/434b8af95311\"\n\t}, {\n\t  date: \"May 2018\",\n\t  name: \"Participating Google Code Jam(the First Time)\",\n\t  url: \"https://medium.com/p/67bba2d6b7f0\"\n\t}, {\n\t  date: \"May 2018\",\n\t  name: \"Introduction to Dynamic Programming with Examples\",\n\t  url: \"https://medium.com/p/bc04dca3ccee\"\n\t}, {\n\t  date: \"Jan 2018\",\n\t  name: \"Haskell Study Note 01, Sorting\",\n\t  url: \"https://medium.com/p/46b49648e084\"\n\t}, {\n\t  date: \"Nov 2017\",\n\t  name: \"Alpha Blending and WebGL\",\n\t  url: \"https://medium.com/p/823d86de00d8\"\n\t}, {\n\t  date: \"Oct 2017\",\n\t  name: \"Build ARKit Application with Unity\",\n\t  url: \"https://medium.com/p/10af4a5e3b05\"\n\t}, {\n\t  date: \"Sep 2017\",\n\t  name: \"Build Particles Effect with three.js or PixiJS\",\n\t  url: \"https://medium.com/p/7814e154bd52\"\n\t}, {\n\t  date: \"Sep 2017\",\n\t  name: \"Build an Online Photo Filter Application\",\n\t  url: \"https://medium.com/p/d6e00c36a3bb\"\n\t}, {\n\t  date: \"Aug 2017\",\n\t  name: \"Build a flappy bird copy with TypeScript & Pixi.js\",\n\t  url: \"https://medium.com/p/890f5a07931e\"\n\t}, {\n\t  date: \"Aug 2017\",\n\t  name: \"WebGL and Image Filter 101\",\n\t  url: \"https://medium.com/p/5017b290d02f\"\n\t}, {\n\t  date: \"Jul 2016\",\n\t  name: \"Build a Tic Tac Toe with React Native\",\n\t  url: \"https://medium.com/p/2a3c44e697f2\"\n\t}, {\n\t  date: \"Jul 2016\",\n\t  name: \"Let’s build a React Native application\",\n\t  url: \"https://medium.com/p/4190839a4f5c\"\n\t}];\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar CURRENT_POSITION = 'Engineer at Canva.';\n\t\n\texports.default = [{\n\t  text: CURRENT_POSITION,\n\t  meta: {\n\t    tagList: [{\n\t      tag: \"a\",\n\t      start: CURRENT_POSITION.indexOf(\"Canva\"),\n\t      end: CURRENT_POSITION.indexOf(\"Canva\") + \"Canva\".length,\n\t      attributes: 'href=\"https://www.canva.com/\" target=\"_blank\" aria-label=\"canva, a company that provides graphic-design tools.\"'\n\t    }]\n\t  }\n\t}, {\n\t  text: \"Programming machines to do web and graphics stuff.\"\n\t  // text: MAIN_EXPERIENCE,\n\t  // meta: {\n\t  //   tagList: [\n\t  //     {\n\t  //       tag: 'b',\n\t  //       start: MAIN_EXPERIENCE.indexOf('single page applications'),\n\t  //       end: MAIN_EXPERIENCE.indexOf('single page applications') + 'single page applications'.length\n\t  //     },\n\t  //     {\n\t  //       tag: 'b',\n\t  //       start: MAIN_EXPERIENCE.indexOf('javascript'),\n\t  //       end: MAIN_EXPERIENCE.indexOf('javascript') + 'javascript'.length\n\t  //     },\n\t  //     {\n\t  //       tag: 'b',\n\t  //       start: MAIN_EXPERIENCE.indexOf('TypeScript'),\n\t  //       end: MAIN_EXPERIENCE.indexOf('TypeScript') + 'TypeScript'.length\n\t  //     },\n\t  //     {\n\t  //       tag: 'b',\n\t  //       start: MAIN_EXPERIENCE.indexOf('C#'),\n\t  //       end: MAIN_EXPERIENCE.indexOf('C#') + 'C#'.length\n\t  //     },\n\t  //     {\n\t  //       tag: 'b',\n\t  //       start: MAIN_EXPERIENCE.indexOf('node.js'),\n\t  //       end: MAIN_EXPERIENCE.indexOf('node.js') + 'node.js'.length\n\t  //     }\n\t  //   ]\n\t  // }\n\t}, {\n\t  text: \"Lifelong learner, book lover and competitive programming enthusiast.\"\n\t}, {\n\t  text: \"Interested in accessibility and all kinds of things.\"\n\t}];\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _contestsSub = __webpack_require__(83);\n\t\n\tvar _contestsSub2 = _interopRequireDefault(_contestsSub);\n\t\n\tvar _webglWrokshop = __webpack_require__(87);\n\t\n\tvar _webglWrokshop2 = _interopRequireDefault(_webglWrokshop);\n\t\n\tvar _uccValidator = __webpack_require__(86);\n\t\n\tvar _uccValidator2 = _interopRequireDefault(_uccValidator);\n\t\n\tvar _photoFilter = __webpack_require__(85);\n\t\n\tvar _photoFilter2 = _interopRequireDefault(_photoFilter);\n\t\n\tvar _invaders = __webpack_require__(84);\n\t\n\tvar _invaders2 = _interopRequireDefault(_invaders);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = [{\n\t  title: \"Coding Contests Subscriber\",\n\t  pictureAlt: \"Project Coding Contests Subscriber screen capture\",\n\t  picture: _contestsSub2.default,\n\t  description: _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"A web utility that filtering available coding contests based on users' preferred time window(e.g. starting between 8 AM - 10 PM), and sending invites to their calendar.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"a\",\n\t      {\n\t        href: \"https://github.com/EcutDavid/coding-contests-subscriber\",\n\t        target: \"_blank\",\n\t        \"aria-label\": \"The github repo of Coding Contests Subscriber\"\n\t      },\n\t      \"Github repo\"\n\t    )\n\t  )\n\t}, {\n\t  title: \"Photo Filter\",\n\t  pictureAlt: \"Project Photo Filter screen capture\",\n\t  picture: _photoFilter2.default,\n\t  description: _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"An online application allows you filter an image and download the result.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"a\",\n\t      {\n\t        href: \"https://github.com/EcutDavid/photo-filter\",\n\t        target: \"_blank\",\n\t        \"aria-label\": \"The github repo of Photo Filter\"\n\t      },\n\t      \"Github repo\"\n\t    )\n\t  )\n\t}, {\n\t  title: \"Space Invaders\",\n\t  pictureAlt: \"Project Space Invaders screen capture\",\n\t  picture: _invaders2.default,\n\t  description: _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Yet another space invaders \\\"copy\\\".\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"a\",\n\t      {\n\t        href: \"https://davidguan.itch.io/space-invaders\",\n\t        target: \"_blank\",\n\t        \"aria-label\": \"Play this space invaders copy on Itch.io\"\n\t      },\n\t      \"Play on Itch.io\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"-----------\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"a\",\n\t      {\n\t        href: \"https://github.com/EcutDavid/space-invaders\",\n\t        target: \"_blank\",\n\t        \"aria-label\": \"The github repo of this space invaders copy\"\n\t      },\n\t      \"Github repo\"\n\t    )\n\t  )\n\t}, {\n\t  title: \"Splunk UCC configuration validator\",\n\t  pictureAlt: \"Project Splunk UCC configuration validator screen capture\",\n\t  picture: _uccValidator2.default,\n\t  description: _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"An online application helps Splunk add-on developers saving time from debugging problems caused by errors in configuration.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"a\",\n\t      {\n\t        href: \"https://github.com/EcutDavid/splunk-ucc-config-validator\",\n\t        target: \"_blank\",\n\t        \"aria-label\": \"The github repo of Splunk UCC configuration validator\"\n\t      },\n\t      \"Github repo\"\n\t    )\n\t  )\n\t}, {\n\t  title: \"webgl-workshop.com\",\n\t  pictureAlt: \"Project webgl-workshop.com screen capture\",\n\t  picture: _webglWrokshop2.default,\n\t  description: _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"A step by step practical guide for implementing 2D/3D rendering with WebGL.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"a\",\n\t      {\n\t        href: \"https://github.com/EcutDavid/webgl-workshop\",\n\t        target: \"_blank\",\n\t        \"aria-label\": \"The github repo of webgl-workshop.com\"\n\t      },\n\t      \"Github repo\"\n\t    )\n\t  )\n\t}];\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(53);\n\tmodule.exports = __webpack_require__(5).Object.assign;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (it) {\n\t  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(9);\n\tmodule.exports = function (it) {\n\t  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(16);\n\tvar toLength = __webpack_require__(50);\n\tvar toAbsoluteIndex = __webpack_require__(49);\n\tmodule.exports = function (IS_INCLUDES) {\n\t  return function ($this, el, fromIndex) {\n\t    var O = toIObject($this);\n\t    var length = toLength(O.length);\n\t    var index = toAbsoluteIndex(fromIndex, length);\n\t    var value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    // eslint-disable-next-line no-self-compare\n\t    if (IS_INCLUDES && el != el) while (length > index) {\n\t      value = O[index++];\n\t      // eslint-disable-next-line no-self-compare\n\t      if (value != value) return true;\n\t    // Array#indexOf ignores holes, Array#includes - not\n\t    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n\t      if (O[index] === el) return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function (it) {\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(29);\n\tmodule.exports = function (fn, that, length) {\n\t  aFunction(fn);\n\t  if (that === undefined) return fn;\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(9);\n\tvar document = __webpack_require__(7).document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(7);\n\tvar core = __webpack_require__(5);\n\tvar hide = __webpack_require__(12);\n\tvar redefine = __webpack_require__(47);\n\tvar ctx = __webpack_require__(33);\n\tvar PROTOTYPE = 'prototype';\n\t\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) source = name;\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // extend global\n\t    if (target) redefine(target, key, out, type & $export.U);\n\t    // export\n\t    if (exports[key] != out) hide(exports, key, exp);\n\t    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n\t  }\n\t};\n\tglobal.core = core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tmodule.exports = $export;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(14)('native-function-to-string', Function.toString);\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(6) && !__webpack_require__(8)(function () {\n\t  return Object.defineProperty(__webpack_require__(34)('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = false;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar DESCRIPTORS = __webpack_require__(6);\n\tvar getKeys = __webpack_require__(44);\n\tvar gOPS = __webpack_require__(42);\n\tvar pIE = __webpack_require__(45);\n\tvar toObject = __webpack_require__(51);\n\tvar IObject = __webpack_require__(13);\n\tvar $assign = Object.assign;\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(8)(function () {\n\t  var A = {};\n\t  var B = {};\n\t  // eslint-disable-next-line no-undef\n\t  var S = Symbol();\n\t  var K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function (k) { B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n\t  var T = toObject(target);\n\t  var aLen = arguments.length;\n\t  var index = 1;\n\t  var getSymbols = gOPS.f;\n\t  var isEnum = pIE.f;\n\t  while (aLen > index) {\n\t    var S = IObject(arguments[index++]);\n\t    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n\t    var length = keys.length;\n\t    var j = 0;\n\t    var key;\n\t    while (length > j) {\n\t      key = keys[j++];\n\t      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n\t    }\n\t  } return T;\n\t} : $assign;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar anObject = __webpack_require__(30);\n\tvar IE8_DOM_DEFINE = __webpack_require__(38);\n\tvar toPrimitive = __webpack_require__(52);\n\tvar dP = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (IE8_DOM_DEFINE) try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ }\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n\t  if ('value' in Attributes) O[P] = Attributes.value;\n\t  return O;\n\t};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar has = __webpack_require__(11);\n\tvar toIObject = __webpack_require__(16);\n\tvar arrayIndexOf = __webpack_require__(31)(false);\n\tvar IE_PROTO = __webpack_require__(48)('IE_PROTO');\n\t\n\tmodule.exports = function (object, names) {\n\t  var O = toIObject(object);\n\t  var i = 0;\n\t  var result = [];\n\t  var key;\n\t  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while (names.length > i) if (has(O, key = names[i++])) {\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys = __webpack_require__(43);\n\tvar enumBugKeys = __webpack_require__(35);\n\t\n\tmodule.exports = Object.keys || function keys(O) {\n\t  return $keys(O, enumBugKeys);\n\t};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(7);\n\tvar hide = __webpack_require__(12);\n\tvar has = __webpack_require__(11);\n\tvar SRC = __webpack_require__(17)('src');\n\tvar $toString = __webpack_require__(37);\n\tvar TO_STRING = 'toString';\n\tvar TPL = ('' + $toString).split(TO_STRING);\n\t\n\t__webpack_require__(5).inspectSource = function (it) {\n\t  return $toString.call(it);\n\t};\n\t\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n\t  if (O[key] === val) return;\n\t  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\t  if (O === global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    hide(O, key, val);\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || $toString.call(this);\n\t});\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(14)('keys');\n\tvar uid = __webpack_require__(17);\n\tmodule.exports = function (key) {\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(15);\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tmodule.exports = function (index, length) {\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(15);\n\tvar min = Math.min;\n\tmodule.exports = function (it) {\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(10);\n\tmodule.exports = function (it) {\n\t  return Object(defined(it));\n\t};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(9);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function (it, S) {\n\t  if (!isObject(it)) return it;\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(36);\n\t\n\t$export($export.S + $export.F, 'Object', { assign: __webpack_require__(40) });\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*!\\n *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome\\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\\n */@font-face{font-family:FontAwesome;src:url(\" + __webpack_require__(63) + \");src:url(\" + __webpack_require__(62) + \"?#iefix&v=4.7.0) format(\\\"embedded-opentype\\\"),url(\" + __webpack_require__(81) + \") format(\\\"woff2\\\"),url(\" + __webpack_require__(82) + \") format(\\\"woff\\\"),url(\" + __webpack_require__(80) + \") format(\\\"truetype\\\"),url(\" + __webpack_require__(64) + \"#fontawesomeregular) format(\\\"svg\\\");font-weight:400;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:.08em solid #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{animation:fa-spin 2s infinite linear}.fa-pulse{animation:fa-spin 1s infinite steps(8)}@keyframes fa-spin{0%{transform:rotate(0deg)}to{transform:rotate(359deg)}}.fa-rotate-90{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\\\";transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\\\";transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\\\";transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\\\";transform:scaleX(-1)}.fa-flip-vertical{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\\";transform:scaleY(-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\\\"\\\\F000\\\"}.fa-music:before{content:\\\"\\\\F001\\\"}.fa-search:before{content:\\\"\\\\F002\\\"}.fa-envelope-o:before{content:\\\"\\\\F003\\\"}.fa-heart:before{content:\\\"\\\\F004\\\"}.fa-star:before{content:\\\"\\\\F005\\\"}.fa-star-o:before{content:\\\"\\\\F006\\\"}.fa-user:before{content:\\\"\\\\F007\\\"}.fa-film:before{content:\\\"\\\\F008\\\"}.fa-th-large:before{content:\\\"\\\\F009\\\"}.fa-th:before{content:\\\"\\\\F00A\\\"}.fa-th-list:before{content:\\\"\\\\F00B\\\"}.fa-check:before{content:\\\"\\\\F00C\\\"}.fa-close:before,.fa-remove:before,.fa-times:before{content:\\\"\\\\F00D\\\"}.fa-search-plus:before{content:\\\"\\\\F00E\\\"}.fa-search-minus:before{content:\\\"\\\\F010\\\"}.fa-power-off:before{content:\\\"\\\\F011\\\"}.fa-signal:before{content:\\\"\\\\F012\\\"}.fa-cog:before,.fa-gear:before{content:\\\"\\\\F013\\\"}.fa-trash-o:before{content:\\\"\\\\F014\\\"}.fa-home:before{content:\\\"\\\\F015\\\"}.fa-file-o:before{content:\\\"\\\\F016\\\"}.fa-clock-o:before{content:\\\"\\\\F017\\\"}.fa-road:before{content:\\\"\\\\F018\\\"}.fa-download:before{content:\\\"\\\\F019\\\"}.fa-arrow-circle-o-down:before{content:\\\"\\\\F01A\\\"}.fa-arrow-circle-o-up:before{content:\\\"\\\\F01B\\\"}.fa-inbox:before{content:\\\"\\\\F01C\\\"}.fa-play-circle-o:before{content:\\\"\\\\F01D\\\"}.fa-repeat:before,.fa-rotate-right:before{content:\\\"\\\\F01E\\\"}.fa-refresh:before{content:\\\"\\\\F021\\\"}.fa-list-alt:before{content:\\\"\\\\F022\\\"}.fa-lock:before{content:\\\"\\\\F023\\\"}.fa-flag:before{content:\\\"\\\\F024\\\"}.fa-headphones:before{content:\\\"\\\\F025\\\"}.fa-volume-off:before{content:\\\"\\\\F026\\\"}.fa-volume-down:before{content:\\\"\\\\F027\\\"}.fa-volume-up:before{content:\\\"\\\\F028\\\"}.fa-qrcode:before{content:\\\"\\\\F029\\\"}.fa-barcode:before{content:\\\"\\\\F02A\\\"}.fa-tag:before{content:\\\"\\\\F02B\\\"}.fa-tags:before{content:\\\"\\\\F02C\\\"}.fa-book:before{content:\\\"\\\\F02D\\\"}.fa-bookmark:before{content:\\\"\\\\F02E\\\"}.fa-print:before{content:\\\"\\\\F02F\\\"}.fa-camera:before{content:\\\"\\\\F030\\\"}.fa-font:before{content:\\\"\\\\F031\\\"}.fa-bold:before{content:\\\"\\\\F032\\\"}.fa-italic:before{content:\\\"\\\\F033\\\"}.fa-text-height:before{content:\\\"\\\\F034\\\"}.fa-text-width:before{content:\\\"\\\\F035\\\"}.fa-align-left:before{content:\\\"\\\\F036\\\"}.fa-align-center:before{content:\\\"\\\\F037\\\"}.fa-align-right:before{content:\\\"\\\\F038\\\"}.fa-align-justify:before{content:\\\"\\\\F039\\\"}.fa-list:before{content:\\\"\\\\F03A\\\"}.fa-dedent:before,.fa-outdent:before{content:\\\"\\\\F03B\\\"}.fa-indent:before{content:\\\"\\\\F03C\\\"}.fa-video-camera:before{content:\\\"\\\\F03D\\\"}.fa-image:before,.fa-photo:before,.fa-picture-o:before{content:\\\"\\\\F03E\\\"}.fa-pencil:before{content:\\\"\\\\F040\\\"}.fa-map-marker:before{content:\\\"\\\\F041\\\"}.fa-adjust:before{content:\\\"\\\\F042\\\"}.fa-tint:before{content:\\\"\\\\F043\\\"}.fa-edit:before,.fa-pencil-square-o:before{content:\\\"\\\\F044\\\"}.fa-share-square-o:before{content:\\\"\\\\F045\\\"}.fa-check-square-o:before{content:\\\"\\\\F046\\\"}.fa-arrows:before{content:\\\"\\\\F047\\\"}.fa-step-backward:before{content:\\\"\\\\F048\\\"}.fa-fast-backward:before{content:\\\"\\\\F049\\\"}.fa-backward:before{content:\\\"\\\\F04A\\\"}.fa-play:before{content:\\\"\\\\F04B\\\"}.fa-pause:before{content:\\\"\\\\F04C\\\"}.fa-stop:before{content:\\\"\\\\F04D\\\"}.fa-forward:before{content:\\\"\\\\F04E\\\"}.fa-fast-forward:before{content:\\\"\\\\F050\\\"}.fa-step-forward:before{content:\\\"\\\\F051\\\"}.fa-eject:before{content:\\\"\\\\F052\\\"}.fa-chevron-left:before{content:\\\"\\\\F053\\\"}.fa-chevron-right:before{content:\\\"\\\\F054\\\"}.fa-plus-circle:before{content:\\\"\\\\F055\\\"}.fa-minus-circle:before{content:\\\"\\\\F056\\\"}.fa-times-circle:before{content:\\\"\\\\F057\\\"}.fa-check-circle:before{content:\\\"\\\\F058\\\"}.fa-question-circle:before{content:\\\"\\\\F059\\\"}.fa-info-circle:before{content:\\\"\\\\F05A\\\"}.fa-crosshairs:before{content:\\\"\\\\F05B\\\"}.fa-times-circle-o:before{content:\\\"\\\\F05C\\\"}.fa-check-circle-o:before{content:\\\"\\\\F05D\\\"}.fa-ban:before{content:\\\"\\\\F05E\\\"}.fa-arrow-left:before{content:\\\"\\\\F060\\\"}.fa-arrow-right:before{content:\\\"\\\\F061\\\"}.fa-arrow-up:before{content:\\\"\\\\F062\\\"}.fa-arrow-down:before{content:\\\"\\\\F063\\\"}.fa-mail-forward:before,.fa-share:before{content:\\\"\\\\F064\\\"}.fa-expand:before{content:\\\"\\\\F065\\\"}.fa-compress:before{content:\\\"\\\\F066\\\"}.fa-plus:before{content:\\\"\\\\F067\\\"}.fa-minus:before{content:\\\"\\\\F068\\\"}.fa-asterisk:before{content:\\\"\\\\F069\\\"}.fa-exclamation-circle:before{content:\\\"\\\\F06A\\\"}.fa-gift:before{content:\\\"\\\\F06B\\\"}.fa-leaf:before{content:\\\"\\\\F06C\\\"}.fa-fire:before{content:\\\"\\\\F06D\\\"}.fa-eye:before{content:\\\"\\\\F06E\\\"}.fa-eye-slash:before{content:\\\"\\\\F070\\\"}.fa-exclamation-triangle:before,.fa-warning:before{content:\\\"\\\\F071\\\"}.fa-plane:before{content:\\\"\\\\F072\\\"}.fa-calendar:before{content:\\\"\\\\F073\\\"}.fa-random:before{content:\\\"\\\\F074\\\"}.fa-comment:before{content:\\\"\\\\F075\\\"}.fa-magnet:before{content:\\\"\\\\F076\\\"}.fa-chevron-up:before{content:\\\"\\\\F077\\\"}.fa-chevron-down:before{content:\\\"\\\\F078\\\"}.fa-retweet:before{content:\\\"\\\\F079\\\"}.fa-shopping-cart:before{content:\\\"\\\\F07A\\\"}.fa-folder:before{content:\\\"\\\\F07B\\\"}.fa-folder-open:before{content:\\\"\\\\F07C\\\"}.fa-arrows-v:before{content:\\\"\\\\F07D\\\"}.fa-arrows-h:before{content:\\\"\\\\F07E\\\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\\\"\\\\F080\\\"}.fa-twitter-square:before{content:\\\"\\\\F081\\\"}.fa-facebook-square:before{content:\\\"\\\\F082\\\"}.fa-camera-retro:before{content:\\\"\\\\F083\\\"}.fa-key:before{content:\\\"\\\\F084\\\"}.fa-cogs:before,.fa-gears:before{content:\\\"\\\\F085\\\"}.fa-comments:before{content:\\\"\\\\F086\\\"}.fa-thumbs-o-up:before{content:\\\"\\\\F087\\\"}.fa-thumbs-o-down:before{content:\\\"\\\\F088\\\"}.fa-star-half:before{content:\\\"\\\\F089\\\"}.fa-heart-o:before{content:\\\"\\\\F08A\\\"}.fa-sign-out:before{content:\\\"\\\\F08B\\\"}.fa-linkedin-square:before{content:\\\"\\\\F08C\\\"}.fa-thumb-tack:before{content:\\\"\\\\F08D\\\"}.fa-external-link:before{content:\\\"\\\\F08E\\\"}.fa-sign-in:before{content:\\\"\\\\F090\\\"}.fa-trophy:before{content:\\\"\\\\F091\\\"}.fa-github-square:before{content:\\\"\\\\F092\\\"}.fa-upload:before{content:\\\"\\\\F093\\\"}.fa-lemon-o:before{content:\\\"\\\\F094\\\"}.fa-phone:before{content:\\\"\\\\F095\\\"}.fa-square-o:before{content:\\\"\\\\F096\\\"}.fa-bookmark-o:before{content:\\\"\\\\F097\\\"}.fa-phone-square:before{content:\\\"\\\\F098\\\"}.fa-twitter:before{content:\\\"\\\\F099\\\"}.fa-facebook-f:before,.fa-facebook:before{content:\\\"\\\\F09A\\\"}.fa-github:before{content:\\\"\\\\F09B\\\"}.fa-unlock:before{content:\\\"\\\\F09C\\\"}.fa-credit-card:before{content:\\\"\\\\F09D\\\"}.fa-feed:before,.fa-rss:before{content:\\\"\\\\F09E\\\"}.fa-hdd-o:before{content:\\\"\\\\F0A0\\\"}.fa-bullhorn:before{content:\\\"\\\\F0A1\\\"}.fa-bell:before{content:\\\"\\\\F0F3\\\"}.fa-certificate:before{content:\\\"\\\\F0A3\\\"}.fa-hand-o-right:before{content:\\\"\\\\F0A4\\\"}.fa-hand-o-left:before{content:\\\"\\\\F0A5\\\"}.fa-hand-o-up:before{content:\\\"\\\\F0A6\\\"}.fa-hand-o-down:before{content:\\\"\\\\F0A7\\\"}.fa-arrow-circle-left:before{content:\\\"\\\\F0A8\\\"}.fa-arrow-circle-right:before{content:\\\"\\\\F0A9\\\"}.fa-arrow-circle-up:before{content:\\\"\\\\F0AA\\\"}.fa-arrow-circle-down:before{content:\\\"\\\\F0AB\\\"}.fa-globe:before{content:\\\"\\\\F0AC\\\"}.fa-wrench:before{content:\\\"\\\\F0AD\\\"}.fa-tasks:before{content:\\\"\\\\F0AE\\\"}.fa-filter:before{content:\\\"\\\\F0B0\\\"}.fa-briefcase:before{content:\\\"\\\\F0B1\\\"}.fa-arrows-alt:before{content:\\\"\\\\F0B2\\\"}.fa-group:before,.fa-users:before{content:\\\"\\\\F0C0\\\"}.fa-chain:before,.fa-link:before{content:\\\"\\\\F0C1\\\"}.fa-cloud:before{content:\\\"\\\\F0C2\\\"}.fa-flask:before{content:\\\"\\\\F0C3\\\"}.fa-cut:before,.fa-scissors:before{content:\\\"\\\\F0C4\\\"}.fa-copy:before,.fa-files-o:before{content:\\\"\\\\F0C5\\\"}.fa-paperclip:before{content:\\\"\\\\F0C6\\\"}.fa-floppy-o:before,.fa-save:before{content:\\\"\\\\F0C7\\\"}.fa-square:before{content:\\\"\\\\F0C8\\\"}.fa-bars:before,.fa-navicon:before,.fa-reorder:before{content:\\\"\\\\F0C9\\\"}.fa-list-ul:before{content:\\\"\\\\F0CA\\\"}.fa-list-ol:before{content:\\\"\\\\F0CB\\\"}.fa-strikethrough:before{content:\\\"\\\\F0CC\\\"}.fa-underline:before{content:\\\"\\\\F0CD\\\"}.fa-table:before{content:\\\"\\\\F0CE\\\"}.fa-magic:before{content:\\\"\\\\F0D0\\\"}.fa-truck:before{content:\\\"\\\\F0D1\\\"}.fa-pinterest:before{content:\\\"\\\\F0D2\\\"}.fa-pinterest-square:before{content:\\\"\\\\F0D3\\\"}.fa-google-plus-square:before{content:\\\"\\\\F0D4\\\"}.fa-google-plus:before{content:\\\"\\\\F0D5\\\"}.fa-money:before{content:\\\"\\\\F0D6\\\"}.fa-caret-down:before{content:\\\"\\\\F0D7\\\"}.fa-caret-up:before{content:\\\"\\\\F0D8\\\"}.fa-caret-left:before{content:\\\"\\\\F0D9\\\"}.fa-caret-right:before{content:\\\"\\\\F0DA\\\"}.fa-columns:before{content:\\\"\\\\F0DB\\\"}.fa-sort:before,.fa-unsorted:before{content:\\\"\\\\F0DC\\\"}.fa-sort-desc:before,.fa-sort-down:before{content:\\\"\\\\F0DD\\\"}.fa-sort-asc:before,.fa-sort-up:before{content:\\\"\\\\F0DE\\\"}.fa-envelope:before{content:\\\"\\\\F0E0\\\"}.fa-linkedin:before{content:\\\"\\\\F0E1\\\"}.fa-rotate-left:before,.fa-undo:before{content:\\\"\\\\F0E2\\\"}.fa-gavel:before,.fa-legal:before{content:\\\"\\\\F0E3\\\"}.fa-dashboard:before,.fa-tachometer:before{content:\\\"\\\\F0E4\\\"}.fa-comment-o:before{content:\\\"\\\\F0E5\\\"}.fa-comments-o:before{content:\\\"\\\\F0E6\\\"}.fa-bolt:before,.fa-flash:before{content:\\\"\\\\F0E7\\\"}.fa-sitemap:before{content:\\\"\\\\F0E8\\\"}.fa-umbrella:before{content:\\\"\\\\F0E9\\\"}.fa-clipboard:before,.fa-paste:before{content:\\\"\\\\F0EA\\\"}.fa-lightbulb-o:before{content:\\\"\\\\F0EB\\\"}.fa-exchange:before{content:\\\"\\\\F0EC\\\"}.fa-cloud-download:before{content:\\\"\\\\F0ED\\\"}.fa-cloud-upload:before{content:\\\"\\\\F0EE\\\"}.fa-user-md:before{content:\\\"\\\\F0F0\\\"}.fa-stethoscope:before{content:\\\"\\\\F0F1\\\"}.fa-suitcase:before{content:\\\"\\\\F0F2\\\"}.fa-bell-o:before{content:\\\"\\\\F0A2\\\"}.fa-coffee:before{content:\\\"\\\\F0F4\\\"}.fa-cutlery:before{content:\\\"\\\\F0F5\\\"}.fa-file-text-o:before{content:\\\"\\\\F0F6\\\"}.fa-building-o:before{content:\\\"\\\\F0F7\\\"}.fa-hospital-o:before{content:\\\"\\\\F0F8\\\"}.fa-ambulance:before{content:\\\"\\\\F0F9\\\"}.fa-medkit:before{content:\\\"\\\\F0FA\\\"}.fa-fighter-jet:before{content:\\\"\\\\F0FB\\\"}.fa-beer:before{content:\\\"\\\\F0FC\\\"}.fa-h-square:before{content:\\\"\\\\F0FD\\\"}.fa-plus-square:before{content:\\\"\\\\F0FE\\\"}.fa-angle-double-left:before{content:\\\"\\\\F100\\\"}.fa-angle-double-right:before{content:\\\"\\\\F101\\\"}.fa-angle-double-up:before{content:\\\"\\\\F102\\\"}.fa-angle-double-down:before{content:\\\"\\\\F103\\\"}.fa-angle-left:before{content:\\\"\\\\F104\\\"}.fa-angle-right:before{content:\\\"\\\\F105\\\"}.fa-angle-up:before{content:\\\"\\\\F106\\\"}.fa-angle-down:before{content:\\\"\\\\F107\\\"}.fa-desktop:before{content:\\\"\\\\F108\\\"}.fa-laptop:before{content:\\\"\\\\F109\\\"}.fa-tablet:before{content:\\\"\\\\F10A\\\"}.fa-mobile-phone:before,.fa-mobile:before{content:\\\"\\\\F10B\\\"}.fa-circle-o:before{content:\\\"\\\\F10C\\\"}.fa-quote-left:before{content:\\\"\\\\F10D\\\"}.fa-quote-right:before{content:\\\"\\\\F10E\\\"}.fa-spinner:before{content:\\\"\\\\F110\\\"}.fa-circle:before{content:\\\"\\\\F111\\\"}.fa-mail-reply:before,.fa-reply:before{content:\\\"\\\\F112\\\"}.fa-github-alt:before{content:\\\"\\\\F113\\\"}.fa-folder-o:before{content:\\\"\\\\F114\\\"}.fa-folder-open-o:before{content:\\\"\\\\F115\\\"}.fa-smile-o:before{content:\\\"\\\\F118\\\"}.fa-frown-o:before{content:\\\"\\\\F119\\\"}.fa-meh-o:before{content:\\\"\\\\F11A\\\"}.fa-gamepad:before{content:\\\"\\\\F11B\\\"}.fa-keyboard-o:before{content:\\\"\\\\F11C\\\"}.fa-flag-o:before{content:\\\"\\\\F11D\\\"}.fa-flag-checkered:before{content:\\\"\\\\F11E\\\"}.fa-terminal:before{content:\\\"\\\\F120\\\"}.fa-code:before{content:\\\"\\\\F121\\\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\\\"\\\\F122\\\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\\\"\\\\F123\\\"}.fa-location-arrow:before{content:\\\"\\\\F124\\\"}.fa-crop:before{content:\\\"\\\\F125\\\"}.fa-code-fork:before{content:\\\"\\\\F126\\\"}.fa-chain-broken:before,.fa-unlink:before{content:\\\"\\\\F127\\\"}.fa-question:before{content:\\\"\\\\F128\\\"}.fa-info:before{content:\\\"\\\\F129\\\"}.fa-exclamation:before{content:\\\"\\\\F12A\\\"}.fa-superscript:before{content:\\\"\\\\F12B\\\"}.fa-subscript:before{content:\\\"\\\\F12C\\\"}.fa-eraser:before{content:\\\"\\\\F12D\\\"}.fa-puzzle-piece:before{content:\\\"\\\\F12E\\\"}.fa-microphone:before{content:\\\"\\\\F130\\\"}.fa-microphone-slash:before{content:\\\"\\\\F131\\\"}.fa-shield:before{content:\\\"\\\\F132\\\"}.fa-calendar-o:before{content:\\\"\\\\F133\\\"}.fa-fire-extinguisher:before{content:\\\"\\\\F134\\\"}.fa-rocket:before{content:\\\"\\\\F135\\\"}.fa-maxcdn:before{content:\\\"\\\\F136\\\"}.fa-chevron-circle-left:before{content:\\\"\\\\F137\\\"}.fa-chevron-circle-right:before{content:\\\"\\\\F138\\\"}.fa-chevron-circle-up:before{content:\\\"\\\\F139\\\"}.fa-chevron-circle-down:before{content:\\\"\\\\F13A\\\"}.fa-html5:before{content:\\\"\\\\F13B\\\"}.fa-css3:before{content:\\\"\\\\F13C\\\"}.fa-anchor:before{content:\\\"\\\\F13D\\\"}.fa-unlock-alt:before{content:\\\"\\\\F13E\\\"}.fa-bullseye:before{content:\\\"\\\\F140\\\"}.fa-ellipsis-h:before{content:\\\"\\\\F141\\\"}.fa-ellipsis-v:before{content:\\\"\\\\F142\\\"}.fa-rss-square:before{content:\\\"\\\\F143\\\"}.fa-play-circle:before{content:\\\"\\\\F144\\\"}.fa-ticket:before{content:\\\"\\\\F145\\\"}.fa-minus-square:before{content:\\\"\\\\F146\\\"}.fa-minus-square-o:before{content:\\\"\\\\F147\\\"}.fa-level-up:before{content:\\\"\\\\F148\\\"}.fa-level-down:before{content:\\\"\\\\F149\\\"}.fa-check-square:before{content:\\\"\\\\F14A\\\"}.fa-pencil-square:before{content:\\\"\\\\F14B\\\"}.fa-external-link-square:before{content:\\\"\\\\F14C\\\"}.fa-share-square:before{content:\\\"\\\\F14D\\\"}.fa-compass:before{content:\\\"\\\\F14E\\\"}.fa-caret-square-o-down:before,.fa-toggle-down:before{content:\\\"\\\\F150\\\"}.fa-caret-square-o-up:before,.fa-toggle-up:before{content:\\\"\\\\F151\\\"}.fa-caret-square-o-right:before,.fa-toggle-right:before{content:\\\"\\\\F152\\\"}.fa-eur:before,.fa-euro:before{content:\\\"\\\\F153\\\"}.fa-gbp:before{content:\\\"\\\\F154\\\"}.fa-dollar:before,.fa-usd:before{content:\\\"\\\\F155\\\"}.fa-inr:before,.fa-rupee:before{content:\\\"\\\\F156\\\"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen:before{content:\\\"\\\\F157\\\"}.fa-rouble:before,.fa-rub:before,.fa-ruble:before{content:\\\"\\\\F158\\\"}.fa-krw:before,.fa-won:before{content:\\\"\\\\F159\\\"}.fa-bitcoin:before,.fa-btc:before{content:\\\"\\\\F15A\\\"}.fa-file:before{content:\\\"\\\\F15B\\\"}.fa-file-text:before{content:\\\"\\\\F15C\\\"}.fa-sort-alpha-asc:before{content:\\\"\\\\F15D\\\"}.fa-sort-alpha-desc:before{content:\\\"\\\\F15E\\\"}.fa-sort-amount-asc:before{content:\\\"\\\\F160\\\"}.fa-sort-amount-desc:before{content:\\\"\\\\F161\\\"}.fa-sort-numeric-asc:before{content:\\\"\\\\F162\\\"}.fa-sort-numeric-desc:before{content:\\\"\\\\F163\\\"}.fa-thumbs-up:before{content:\\\"\\\\F164\\\"}.fa-thumbs-down:before{content:\\\"\\\\F165\\\"}.fa-youtube-square:before{content:\\\"\\\\F166\\\"}.fa-youtube:before{content:\\\"\\\\F167\\\"}.fa-xing:before{content:\\\"\\\\F168\\\"}.fa-xing-square:before{content:\\\"\\\\F169\\\"}.fa-youtube-play:before{content:\\\"\\\\F16A\\\"}.fa-dropbox:before{content:\\\"\\\\F16B\\\"}.fa-stack-overflow:before{content:\\\"\\\\F16C\\\"}.fa-instagram:before{content:\\\"\\\\F16D\\\"}.fa-flickr:before{content:\\\"\\\\F16E\\\"}.fa-adn:before{content:\\\"\\\\F170\\\"}.fa-bitbucket:before{content:\\\"\\\\F171\\\"}.fa-bitbucket-square:before{content:\\\"\\\\F172\\\"}.fa-tumblr:before{content:\\\"\\\\F173\\\"}.fa-tumblr-square:before{content:\\\"\\\\F174\\\"}.fa-long-arrow-down:before{content:\\\"\\\\F175\\\"}.fa-long-arrow-up:before{content:\\\"\\\\F176\\\"}.fa-long-arrow-left:before{content:\\\"\\\\F177\\\"}.fa-long-arrow-right:before{content:\\\"\\\\F178\\\"}.fa-apple:before{content:\\\"\\\\F179\\\"}.fa-windows:before{content:\\\"\\\\F17A\\\"}.fa-android:before{content:\\\"\\\\F17B\\\"}.fa-linux:before{content:\\\"\\\\F17C\\\"}.fa-dribbble:before{content:\\\"\\\\F17D\\\"}.fa-skype:before{content:\\\"\\\\F17E\\\"}.fa-foursquare:before{content:\\\"\\\\F180\\\"}.fa-trello:before{content:\\\"\\\\F181\\\"}.fa-female:before{content:\\\"\\\\F182\\\"}.fa-male:before{content:\\\"\\\\F183\\\"}.fa-gittip:before,.fa-gratipay:before{content:\\\"\\\\F184\\\"}.fa-sun-o:before{content:\\\"\\\\F185\\\"}.fa-moon-o:before{content:\\\"\\\\F186\\\"}.fa-archive:before{content:\\\"\\\\F187\\\"}.fa-bug:before{content:\\\"\\\\F188\\\"}.fa-vk:before{content:\\\"\\\\F189\\\"}.fa-weibo:before{content:\\\"\\\\F18A\\\"}.fa-renren:before{content:\\\"\\\\F18B\\\"}.fa-pagelines:before{content:\\\"\\\\F18C\\\"}.fa-stack-exchange:before{content:\\\"\\\\F18D\\\"}.fa-arrow-circle-o-right:before{content:\\\"\\\\F18E\\\"}.fa-arrow-circle-o-left:before{content:\\\"\\\\F190\\\"}.fa-caret-square-o-left:before,.fa-toggle-left:before{content:\\\"\\\\F191\\\"}.fa-dot-circle-o:before{content:\\\"\\\\F192\\\"}.fa-wheelchair:before{content:\\\"\\\\F193\\\"}.fa-vimeo-square:before{content:\\\"\\\\F194\\\"}.fa-try:before,.fa-turkish-lira:before{content:\\\"\\\\F195\\\"}.fa-plus-square-o:before{content:\\\"\\\\F196\\\"}.fa-space-shuttle:before{content:\\\"\\\\F197\\\"}.fa-slack:before{content:\\\"\\\\F198\\\"}.fa-envelope-square:before{content:\\\"\\\\F199\\\"}.fa-wordpress:before{content:\\\"\\\\F19A\\\"}.fa-openid:before{content:\\\"\\\\F19B\\\"}.fa-bank:before,.fa-institution:before,.fa-university:before{content:\\\"\\\\F19C\\\"}.fa-graduation-cap:before,.fa-mortar-board:before{content:\\\"\\\\F19D\\\"}.fa-yahoo:before{content:\\\"\\\\F19E\\\"}.fa-google:before{content:\\\"\\\\F1A0\\\"}.fa-reddit:before{content:\\\"\\\\F1A1\\\"}.fa-reddit-square:before{content:\\\"\\\\F1A2\\\"}.fa-stumbleupon-circle:before{content:\\\"\\\\F1A3\\\"}.fa-stumbleupon:before{content:\\\"\\\\F1A4\\\"}.fa-delicious:before{content:\\\"\\\\F1A5\\\"}.fa-digg:before{content:\\\"\\\\F1A6\\\"}.fa-pied-piper-pp:before{content:\\\"\\\\F1A7\\\"}.fa-pied-piper-alt:before{content:\\\"\\\\F1A8\\\"}.fa-drupal:before{content:\\\"\\\\F1A9\\\"}.fa-joomla:before{content:\\\"\\\\F1AA\\\"}.fa-language:before{content:\\\"\\\\F1AB\\\"}.fa-fax:before{content:\\\"\\\\F1AC\\\"}.fa-building:before{content:\\\"\\\\F1AD\\\"}.fa-child:before{content:\\\"\\\\F1AE\\\"}.fa-paw:before{content:\\\"\\\\F1B0\\\"}.fa-spoon:before{content:\\\"\\\\F1B1\\\"}.fa-cube:before{content:\\\"\\\\F1B2\\\"}.fa-cubes:before{content:\\\"\\\\F1B3\\\"}.fa-behance:before{content:\\\"\\\\F1B4\\\"}.fa-behance-square:before{content:\\\"\\\\F1B5\\\"}.fa-steam:before{content:\\\"\\\\F1B6\\\"}.fa-steam-square:before{content:\\\"\\\\F1B7\\\"}.fa-recycle:before{content:\\\"\\\\F1B8\\\"}.fa-automobile:before,.fa-car:before{content:\\\"\\\\F1B9\\\"}.fa-cab:before,.fa-taxi:before{content:\\\"\\\\F1BA\\\"}.fa-tree:before{content:\\\"\\\\F1BB\\\"}.fa-spotify:before{content:\\\"\\\\F1BC\\\"}.fa-deviantart:before{content:\\\"\\\\F1BD\\\"}.fa-soundcloud:before{content:\\\"\\\\F1BE\\\"}.fa-database:before{content:\\\"\\\\F1C0\\\"}.fa-file-pdf-o:before{content:\\\"\\\\F1C1\\\"}.fa-file-word-o:before{content:\\\"\\\\F1C2\\\"}.fa-file-excel-o:before{content:\\\"\\\\F1C3\\\"}.fa-file-powerpoint-o:before{content:\\\"\\\\F1C4\\\"}.fa-file-image-o:before,.fa-file-photo-o:before,.fa-file-picture-o:before{content:\\\"\\\\F1C5\\\"}.fa-file-archive-o:before,.fa-file-zip-o:before{content:\\\"\\\\F1C6\\\"}.fa-file-audio-o:before,.fa-file-sound-o:before{content:\\\"\\\\F1C7\\\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\\\"\\\\F1C8\\\"}.fa-file-code-o:before{content:\\\"\\\\F1C9\\\"}.fa-vine:before{content:\\\"\\\\F1CA\\\"}.fa-codepen:before{content:\\\"\\\\F1CB\\\"}.fa-jsfiddle:before{content:\\\"\\\\F1CC\\\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-ring:before,.fa-life-saver:before,.fa-support:before{content:\\\"\\\\F1CD\\\"}.fa-circle-o-notch:before{content:\\\"\\\\F1CE\\\"}.fa-ra:before,.fa-rebel:before,.fa-resistance:before{content:\\\"\\\\F1D0\\\"}.fa-empire:before,.fa-ge:before{content:\\\"\\\\F1D1\\\"}.fa-git-square:before{content:\\\"\\\\F1D2\\\"}.fa-git:before{content:\\\"\\\\F1D3\\\"}.fa-hacker-news:before,.fa-y-combinator-square:before,.fa-yc-square:before{content:\\\"\\\\F1D4\\\"}.fa-tencent-weibo:before{content:\\\"\\\\F1D5\\\"}.fa-qq:before{content:\\\"\\\\F1D6\\\"}.fa-wechat:before,.fa-weixin:before{content:\\\"\\\\F1D7\\\"}.fa-paper-plane:before,.fa-send:before{content:\\\"\\\\F1D8\\\"}.fa-paper-plane-o:before,.fa-send-o:before{content:\\\"\\\\F1D9\\\"}.fa-history:before{content:\\\"\\\\F1DA\\\"}.fa-circle-thin:before{content:\\\"\\\\F1DB\\\"}.fa-header:before{content:\\\"\\\\F1DC\\\"}.fa-paragraph:before{content:\\\"\\\\F1DD\\\"}.fa-sliders:before{content:\\\"\\\\F1DE\\\"}.fa-share-alt:before{content:\\\"\\\\F1E0\\\"}.fa-share-alt-square:before{content:\\\"\\\\F1E1\\\"}.fa-bomb:before{content:\\\"\\\\F1E2\\\"}.fa-futbol-o:before,.fa-soccer-ball-o:before{content:\\\"\\\\F1E3\\\"}.fa-tty:before{content:\\\"\\\\F1E4\\\"}.fa-binoculars:before{content:\\\"\\\\F1E5\\\"}.fa-plug:before{content:\\\"\\\\F1E6\\\"}.fa-slideshare:before{content:\\\"\\\\F1E7\\\"}.fa-twitch:before{content:\\\"\\\\F1E8\\\"}.fa-yelp:before{content:\\\"\\\\F1E9\\\"}.fa-newspaper-o:before{content:\\\"\\\\F1EA\\\"}.fa-wifi:before{content:\\\"\\\\F1EB\\\"}.fa-calculator:before{content:\\\"\\\\F1EC\\\"}.fa-paypal:before{content:\\\"\\\\F1ED\\\"}.fa-google-wallet:before{content:\\\"\\\\F1EE\\\"}.fa-cc-visa:before{content:\\\"\\\\F1F0\\\"}.fa-cc-mastercard:before{content:\\\"\\\\F1F1\\\"}.fa-cc-discover:before{content:\\\"\\\\F1F2\\\"}.fa-cc-amex:before{content:\\\"\\\\F1F3\\\"}.fa-cc-paypal:before{content:\\\"\\\\F1F4\\\"}.fa-cc-stripe:before{content:\\\"\\\\F1F5\\\"}.fa-bell-slash:before{content:\\\"\\\\F1F6\\\"}.fa-bell-slash-o:before{content:\\\"\\\\F1F7\\\"}.fa-trash:before{content:\\\"\\\\F1F8\\\"}.fa-copyright:before{content:\\\"\\\\F1F9\\\"}.fa-at:before{content:\\\"\\\\F1FA\\\"}.fa-eyedropper:before{content:\\\"\\\\F1FB\\\"}.fa-paint-brush:before{content:\\\"\\\\F1FC\\\"}.fa-birthday-cake:before{content:\\\"\\\\F1FD\\\"}.fa-area-chart:before{content:\\\"\\\\F1FE\\\"}.fa-pie-chart:before{content:\\\"\\\\F200\\\"}.fa-line-chart:before{content:\\\"\\\\F201\\\"}.fa-lastfm:before{content:\\\"\\\\F202\\\"}.fa-lastfm-square:before{content:\\\"\\\\F203\\\"}.fa-toggle-off:before{content:\\\"\\\\F204\\\"}.fa-toggle-on:before{content:\\\"\\\\F205\\\"}.fa-bicycle:before{content:\\\"\\\\F206\\\"}.fa-bus:before{content:\\\"\\\\F207\\\"}.fa-ioxhost:before{content:\\\"\\\\F208\\\"}.fa-angellist:before{content:\\\"\\\\F209\\\"}.fa-cc:before{content:\\\"\\\\F20A\\\"}.fa-ils:before,.fa-shekel:before,.fa-sheqel:before{content:\\\"\\\\F20B\\\"}.fa-meanpath:before{content:\\\"\\\\F20C\\\"}.fa-buysellads:before{content:\\\"\\\\F20D\\\"}.fa-connectdevelop:before{content:\\\"\\\\F20E\\\"}.fa-dashcube:before{content:\\\"\\\\F210\\\"}.fa-forumbee:before{content:\\\"\\\\F211\\\"}.fa-leanpub:before{content:\\\"\\\\F212\\\"}.fa-sellsy:before{content:\\\"\\\\F213\\\"}.fa-shirtsinbulk:before{content:\\\"\\\\F214\\\"}.fa-simplybuilt:before{content:\\\"\\\\F215\\\"}.fa-skyatlas:before{content:\\\"\\\\F216\\\"}.fa-cart-plus:before{content:\\\"\\\\F217\\\"}.fa-cart-arrow-down:before{content:\\\"\\\\F218\\\"}.fa-diamond:before{content:\\\"\\\\F219\\\"}.fa-ship:before{content:\\\"\\\\F21A\\\"}.fa-user-secret:before{content:\\\"\\\\F21B\\\"}.fa-motorcycle:before{content:\\\"\\\\F21C\\\"}.fa-street-view:before{content:\\\"\\\\F21D\\\"}.fa-heartbeat:before{content:\\\"\\\\F21E\\\"}.fa-venus:before{content:\\\"\\\\F221\\\"}.fa-mars:before{content:\\\"\\\\F222\\\"}.fa-mercury:before{content:\\\"\\\\F223\\\"}.fa-intersex:before,.fa-transgender:before{content:\\\"\\\\F224\\\"}.fa-transgender-alt:before{content:\\\"\\\\F225\\\"}.fa-venus-double:before{content:\\\"\\\\F226\\\"}.fa-mars-double:before{content:\\\"\\\\F227\\\"}.fa-venus-mars:before{content:\\\"\\\\F228\\\"}.fa-mars-stroke:before{content:\\\"\\\\F229\\\"}.fa-mars-stroke-v:before{content:\\\"\\\\F22A\\\"}.fa-mars-stroke-h:before{content:\\\"\\\\F22B\\\"}.fa-neuter:before{content:\\\"\\\\F22C\\\"}.fa-genderless:before{content:\\\"\\\\F22D\\\"}.fa-facebook-official:before{content:\\\"\\\\F230\\\"}.fa-pinterest-p:before{content:\\\"\\\\F231\\\"}.fa-whatsapp:before{content:\\\"\\\\F232\\\"}.fa-server:before{content:\\\"\\\\F233\\\"}.fa-user-plus:before{content:\\\"\\\\F234\\\"}.fa-user-times:before{content:\\\"\\\\F235\\\"}.fa-bed:before,.fa-hotel:before{content:\\\"\\\\F236\\\"}.fa-viacoin:before{content:\\\"\\\\F237\\\"}.fa-train:before{content:\\\"\\\\F238\\\"}.fa-subway:before{content:\\\"\\\\F239\\\"}.fa-medium:before{content:\\\"\\\\F23A\\\"}.fa-y-combinator:before,.fa-yc:before{content:\\\"\\\\F23B\\\"}.fa-optin-monster:before{content:\\\"\\\\F23C\\\"}.fa-opencart:before{content:\\\"\\\\F23D\\\"}.fa-expeditedssl:before{content:\\\"\\\\F23E\\\"}.fa-battery-4:before,.fa-battery-full:before,.fa-battery:before{content:\\\"\\\\F240\\\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\\\"\\\\F241\\\"}.fa-battery-2:before,.fa-battery-half:before{content:\\\"\\\\F242\\\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\\\"\\\\F243\\\"}.fa-battery-0:before,.fa-battery-empty:before{content:\\\"\\\\F244\\\"}.fa-mouse-pointer:before{content:\\\"\\\\F245\\\"}.fa-i-cursor:before{content:\\\"\\\\F246\\\"}.fa-object-group:before{content:\\\"\\\\F247\\\"}.fa-object-ungroup:before{content:\\\"\\\\F248\\\"}.fa-sticky-note:before{content:\\\"\\\\F249\\\"}.fa-sticky-note-o:before{content:\\\"\\\\F24A\\\"}.fa-cc-jcb:before{content:\\\"\\\\F24B\\\"}.fa-cc-diners-club:before{content:\\\"\\\\F24C\\\"}.fa-clone:before{content:\\\"\\\\F24D\\\"}.fa-balance-scale:before{content:\\\"\\\\F24E\\\"}.fa-hourglass-o:before{content:\\\"\\\\F250\\\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\\\"\\\\F251\\\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\\\"\\\\F252\\\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\\\"\\\\F253\\\"}.fa-hourglass:before{content:\\\"\\\\F254\\\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\\\"\\\\F255\\\"}.fa-hand-paper-o:before,.fa-hand-stop-o:before{content:\\\"\\\\F256\\\"}.fa-hand-scissors-o:before{content:\\\"\\\\F257\\\"}.fa-hand-lizard-o:before{content:\\\"\\\\F258\\\"}.fa-hand-spock-o:before{content:\\\"\\\\F259\\\"}.fa-hand-pointer-o:before{content:\\\"\\\\F25A\\\"}.fa-hand-peace-o:before{content:\\\"\\\\F25B\\\"}.fa-trademark:before{content:\\\"\\\\F25C\\\"}.fa-registered:before{content:\\\"\\\\F25D\\\"}.fa-creative-commons:before{content:\\\"\\\\F25E\\\"}.fa-gg:before{content:\\\"\\\\F260\\\"}.fa-gg-circle:before{content:\\\"\\\\F261\\\"}.fa-tripadvisor:before{content:\\\"\\\\F262\\\"}.fa-odnoklassniki:before{content:\\\"\\\\F263\\\"}.fa-odnoklassniki-square:before{content:\\\"\\\\F264\\\"}.fa-get-pocket:before{content:\\\"\\\\F265\\\"}.fa-wikipedia-w:before{content:\\\"\\\\F266\\\"}.fa-safari:before{content:\\\"\\\\F267\\\"}.fa-chrome:before{content:\\\"\\\\F268\\\"}.fa-firefox:before{content:\\\"\\\\F269\\\"}.fa-opera:before{content:\\\"\\\\F26A\\\"}.fa-internet-explorer:before{content:\\\"\\\\F26B\\\"}.fa-television:before,.fa-tv:before{content:\\\"\\\\F26C\\\"}.fa-contao:before{content:\\\"\\\\F26D\\\"}.fa-500px:before{content:\\\"\\\\F26E\\\"}.fa-amazon:before{content:\\\"\\\\F270\\\"}.fa-calendar-plus-o:before{content:\\\"\\\\F271\\\"}.fa-calendar-minus-o:before{content:\\\"\\\\F272\\\"}.fa-calendar-times-o:before{content:\\\"\\\\F273\\\"}.fa-calendar-check-o:before{content:\\\"\\\\F274\\\"}.fa-industry:before{content:\\\"\\\\F275\\\"}.fa-map-pin:before{content:\\\"\\\\F276\\\"}.fa-map-signs:before{content:\\\"\\\\F277\\\"}.fa-map-o:before{content:\\\"\\\\F278\\\"}.fa-map:before{content:\\\"\\\\F279\\\"}.fa-commenting:before{content:\\\"\\\\F27A\\\"}.fa-commenting-o:before{content:\\\"\\\\F27B\\\"}.fa-houzz:before{content:\\\"\\\\F27C\\\"}.fa-vimeo:before{content:\\\"\\\\F27D\\\"}.fa-black-tie:before{content:\\\"\\\\F27E\\\"}.fa-fonticons:before{content:\\\"\\\\F280\\\"}.fa-reddit-alien:before{content:\\\"\\\\F281\\\"}.fa-edge:before{content:\\\"\\\\F282\\\"}.fa-credit-card-alt:before{content:\\\"\\\\F283\\\"}.fa-codiepie:before{content:\\\"\\\\F284\\\"}.fa-modx:before{content:\\\"\\\\F285\\\"}.fa-fort-awesome:before{content:\\\"\\\\F286\\\"}.fa-usb:before{content:\\\"\\\\F287\\\"}.fa-product-hunt:before{content:\\\"\\\\F288\\\"}.fa-mixcloud:before{content:\\\"\\\\F289\\\"}.fa-scribd:before{content:\\\"\\\\F28A\\\"}.fa-pause-circle:before{content:\\\"\\\\F28B\\\"}.fa-pause-circle-o:before{content:\\\"\\\\F28C\\\"}.fa-stop-circle:before{content:\\\"\\\\F28D\\\"}.fa-stop-circle-o:before{content:\\\"\\\\F28E\\\"}.fa-shopping-bag:before{content:\\\"\\\\F290\\\"}.fa-shopping-basket:before{content:\\\"\\\\F291\\\"}.fa-hashtag:before{content:\\\"\\\\F292\\\"}.fa-bluetooth:before{content:\\\"\\\\F293\\\"}.fa-bluetooth-b:before{content:\\\"\\\\F294\\\"}.fa-percent:before{content:\\\"\\\\F295\\\"}.fa-gitlab:before{content:\\\"\\\\F296\\\"}.fa-wpbeginner:before{content:\\\"\\\\F297\\\"}.fa-wpforms:before{content:\\\"\\\\F298\\\"}.fa-envira:before{content:\\\"\\\\F299\\\"}.fa-universal-access:before{content:\\\"\\\\F29A\\\"}.fa-wheelchair-alt:before{content:\\\"\\\\F29B\\\"}.fa-question-circle-o:before{content:\\\"\\\\F29C\\\"}.fa-blind:before{content:\\\"\\\\F29D\\\"}.fa-audio-description:before{content:\\\"\\\\F29E\\\"}.fa-volume-control-phone:before{content:\\\"\\\\F2A0\\\"}.fa-braille:before{content:\\\"\\\\F2A1\\\"}.fa-assistive-listening-systems:before{content:\\\"\\\\F2A2\\\"}.fa-american-sign-language-interpreting:before,.fa-asl-interpreting:before{content:\\\"\\\\F2A3\\\"}.fa-deaf:before,.fa-deafness:before,.fa-hard-of-hearing:before{content:\\\"\\\\F2A4\\\"}.fa-glide:before{content:\\\"\\\\F2A5\\\"}.fa-glide-g:before{content:\\\"\\\\F2A6\\\"}.fa-sign-language:before,.fa-signing:before{content:\\\"\\\\F2A7\\\"}.fa-low-vision:before{content:\\\"\\\\F2A8\\\"}.fa-viadeo:before{content:\\\"\\\\F2A9\\\"}.fa-viadeo-square:before{content:\\\"\\\\F2AA\\\"}.fa-snapchat:before{content:\\\"\\\\F2AB\\\"}.fa-snapchat-ghost:before{content:\\\"\\\\F2AC\\\"}.fa-snapchat-square:before{content:\\\"\\\\F2AD\\\"}.fa-pied-piper:before{content:\\\"\\\\F2AE\\\"}.fa-first-order:before{content:\\\"\\\\F2B0\\\"}.fa-yoast:before{content:\\\"\\\\F2B1\\\"}.fa-themeisle:before{content:\\\"\\\\F2B2\\\"}.fa-google-plus-circle:before,.fa-google-plus-official:before{content:\\\"\\\\F2B3\\\"}.fa-fa:before,.fa-font-awesome:before{content:\\\"\\\\F2B4\\\"}.fa-handshake-o:before{content:\\\"\\\\F2B5\\\"}.fa-envelope-open:before{content:\\\"\\\\F2B6\\\"}.fa-envelope-open-o:before{content:\\\"\\\\F2B7\\\"}.fa-linode:before{content:\\\"\\\\F2B8\\\"}.fa-address-book:before{content:\\\"\\\\F2B9\\\"}.fa-address-book-o:before{content:\\\"\\\\F2BA\\\"}.fa-address-card:before,.fa-vcard:before{content:\\\"\\\\F2BB\\\"}.fa-address-card-o:before,.fa-vcard-o:before{content:\\\"\\\\F2BC\\\"}.fa-user-circle:before{content:\\\"\\\\F2BD\\\"}.fa-user-circle-o:before{content:\\\"\\\\F2BE\\\"}.fa-user-o:before{content:\\\"\\\\F2C0\\\"}.fa-id-badge:before{content:\\\"\\\\F2C1\\\"}.fa-drivers-license:before,.fa-id-card:before{content:\\\"\\\\F2C2\\\"}.fa-drivers-license-o:before,.fa-id-card-o:before{content:\\\"\\\\F2C3\\\"}.fa-quora:before{content:\\\"\\\\F2C4\\\"}.fa-free-code-camp:before{content:\\\"\\\\F2C5\\\"}.fa-telegram:before{content:\\\"\\\\F2C6\\\"}.fa-thermometer-4:before,.fa-thermometer-full:before,.fa-thermometer:before{content:\\\"\\\\F2C7\\\"}.fa-thermometer-3:before,.fa-thermometer-three-quarters:before{content:\\\"\\\\F2C8\\\"}.fa-thermometer-2:before,.fa-thermometer-half:before{content:\\\"\\\\F2C9\\\"}.fa-thermometer-1:before,.fa-thermometer-quarter:before{content:\\\"\\\\F2CA\\\"}.fa-thermometer-0:before,.fa-thermometer-empty:before{content:\\\"\\\\F2CB\\\"}.fa-shower:before{content:\\\"\\\\F2CC\\\"}.fa-bath:before,.fa-bathtub:before,.fa-s15:before{content:\\\"\\\\F2CD\\\"}.fa-podcast:before{content:\\\"\\\\F2CE\\\"}.fa-window-maximize:before{content:\\\"\\\\F2D0\\\"}.fa-window-minimize:before{content:\\\"\\\\F2D1\\\"}.fa-window-restore:before{content:\\\"\\\\F2D2\\\"}.fa-times-rectangle:before,.fa-window-close:before{content:\\\"\\\\F2D3\\\"}.fa-times-rectangle-o:before,.fa-window-close-o:before{content:\\\"\\\\F2D4\\\"}.fa-bandcamp:before{content:\\\"\\\\F2D5\\\"}.fa-grav:before{content:\\\"\\\\F2D6\\\"}.fa-etsy:before{content:\\\"\\\\F2D7\\\"}.fa-imdb:before{content:\\\"\\\\F2D8\\\"}.fa-ravelry:before{content:\\\"\\\\F2D9\\\"}.fa-eercast:before{content:\\\"\\\\F2DA\\\"}.fa-microchip:before{content:\\\"\\\\F2DB\\\"}.fa-snowflake-o:before{content:\\\"\\\\F2DC\\\"}.fa-superpowers:before{content:\\\"\\\\F2DD\\\"}.fa-wpexplorer:before{content:\\\"\\\\F2DE\\\"}.fa-meetup:before{content:\\\"\\\\F2E0\\\"}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".About{min-height:calc(100% - 350px - 400px);width:90%;margin-left:5%}.About .action-button{display:block;margin:9px auto;border-radius:34px;font-weight:700;overflow-y:hidden;transition:opacity 1.5s;opacity:1}.About .action-button.hide-button{opacity:0}.About .account-container{margin-top:10px;display:block;text-align:center;font-weight:600}.About .account-container i{display:block;font-size:3.7em}.About .title{font-size:2.3rem;font-weight:500;margin:30px 0 15px;text-align:center}.About .description-list{margin-top:15px;margin-bottom:15px;min-height:160px;text-align:center}.About .description-list p{font-size:18px;display:inline-block;white-space:pre-wrap}.About .description-list .typing-cursor{border-left:1.5px solid #000;opacity:1;transition:opacity 2s;white-space:pre}.About .description-list .typing-cursor.done{opacity:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"*{box-sizing:border-box}h1,h2,h3,h4,h5{cursor:default;color:#2f4f4f;font-family:Helvetica Neue,Helvetica,Roboto,Arial,sans-serif;font-style:normal;font-weight:400}h1{position:absolute;left:0;top:0}body{background:#fff;margin:0;font-family:arial,helvetica,clean,sans-serif}button{padding:.85em 1em;border:1px solid transparent;border-radius:0;font-size:.9rem;line-height:1;cursor:pointer;background-color:#2199e8;color:#fefefe}#app,.App,button{text-align:center}#app,.App{height:100%;line-height:1.6}a{color:#1976d2;text-decoration:none}a:hover{color:#0d47a1}p{cursor:default;margin-bottom:15px;line-height:1.6}.button{background-color:#1976d2}.button:hover{background-color:#0d47a1}.flex-container{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.column{padding:0 1rem}@media (max-width:640px){body .small-10{width:80%}body .small-6{width:50%}body .small-11{width:90%}}@media (min-width:641px) and (max-width:1024px){body .small-10{width:80%}body .small-6{width:50%}body .small-11{width:90%}body .medium-3{width:25%}body .medium-6{width:50%}body .medium-9{width:75%}}@media (min-width:1025px){body .small-10{width:80%}body .small-6{width:50%}body .small-11{width:90%}body .medium-3{width:25%}body .medium-6{width:50%}body .medium-9{width:75%}body .large-7{width:60%}body large-4{width:33%}}.thumbnail{display:inline-block;max-width:100%;margin-bottom:1rem;border:4px solid #fefefe;border-radius:0;box-shadow:0 0 0 1px hsla(0,0%,4%,.2);line-height:0}.Header{background:#fff;height:400px;position:relative;text-align:center}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".articles-container{text-align:left}.articles-container .article{padding:10px 0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;max-width:800px;margin:0 auto}.articles-container .article .link{font-size:23px;text-align:left;padding-right:20px}.articles-container .article .date{text-align:right;min-width:70px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".Footer{background-color:#3f51b5;min-height:60px;margin-top:20px;padding-top:15px;text-align:center}.Footer>a{margin:5px 0 20px;color:#fff;display:block;font-size:1.5em;text-align:center;transition:color .5s}.Footer>a:focus{outline-color:#fff}.Footer>a:hover{color:skyblue}.Footer>a i{display:block}.Footer .mail{display:inline-block;font-size:20px;color:#fff}.Footer .footer-link{font-size:3.5em;margin:0 15px;display:inline-block}.Footer .snack-bar{text-align:center;padding:10px 15px;position:fixed;bottom:20px;width:300px;box-sizing:border-box;left:calc(50% - 150px);background:#323232;color:#fff;border-radius:8px;transition:opacity 1s;display:none;opacity:0}.Footer .snack-bar p{margin:10px 0;font-size:18px;font-weight:700}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".work{min-height:520px}.work>a>img:hover{filter:none}.work>div>p{margin-bottom:5px}.work iframe{border:none;box-shadow:0 0 0 1px hsla(0,0%,4%,.2);margin-bottom:1rem}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".work-container{text-align:center}.work-container .img{height:300px;width:300px}.work-container.speeches .img{height:400px;width:400px}.work-container>div{clear:none!important}.work-container h5{cursor:default;font-weight:700}.work-container .description{margin-bottom:10px}@media screen and (min-width:40em){.work-container>div:last-child:not(:first-child){float:none}}@media screen and (min-width:64em){.work-container>div:last-child:not(:first-child){float:right}}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"674f50d287a8c48dc19ba404d20fe713.eot\";\n\n/***/ }),\n/* 63 */\n62,\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"912ec66d7572ff821749319396470bde.svg\";\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.11.0\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),n=__webpack_require__(18),q=__webpack_require__(69);function u(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(u(227));var ba=null,ca={};\n\tfunction da(){if(ba)for(var a in ca){var b=ca[a],c=ba.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!ea[c]){if(!b.extractEvents)throw Error(u(97,a));ea[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(fa.hasOwnProperty(h))throw Error(u(99,h));fa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ha(k[e],g,h);e=!0}else f.registrationName?(ha(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\n\tfunction ha(a,b,c){if(ia[a])throw Error(u(100,a));ia[a]=b;ja[a]=b.eventTypes[c].dependencies}var ea=[],fa={},ia={},ja={};function ka(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var la=!1,ma=null,na=!1,oa=null,pa={onError:function(a){la=!0;ma=a}};function qa(a,b,c,d,e,f,g,h,k){la=!1;ma=null;ka.apply(pa,arguments)}\n\tfunction ra(a,b,c,d,e,f,g,h,k){qa.apply(this,arguments);if(la){if(la){var l=ma;la=!1;ma=null}else throw Error(u(198));na||(na=!0,oa=l)}}var sa=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ra(d,b,void 0,a);a.currentTarget=null}function xa(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\n\tfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ba(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a){ya(a,Aa);if(za)throw Error(u(95));if(na)throw a=oa,na=!1,oa=null,a;}}\n\tvar Ca={injectEventPluginOrder:function(a){if(ba)throw Error(u(101));ba=Array.prototype.slice.call(a);da()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!ca.hasOwnProperty(c)||ca[c]!==d){if(ca[c])throw Error(u(102,c));ca[c]=d;b=!0}}b&&da()}};\n\tfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=sa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(u(231,b,typeof c));\n\treturn c}var Ea=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ea.hasOwnProperty(\"ReactCurrentDispatcher\")||(Ea.ReactCurrentDispatcher={current:null});Ea.hasOwnProperty(\"ReactCurrentBatchConfig\")||(Ea.ReactCurrentBatchConfig={suspense:null});\n\tvar Fa=/^(.*)[\\\\\\/]/,w=\"function\"===typeof Symbol&&Symbol.for,Ga=w?Symbol.for(\"react.element\"):60103,Ha=w?Symbol.for(\"react.portal\"):60106,Ia=w?Symbol.for(\"react.fragment\"):60107,Ja=w?Symbol.for(\"react.strict_mode\"):60108,Ka=w?Symbol.for(\"react.profiler\"):60114,La=w?Symbol.for(\"react.provider\"):60109,Ma=w?Symbol.for(\"react.context\"):60110,Na=w?Symbol.for(\"react.concurrent_mode\"):60111,Oa=w?Symbol.for(\"react.forward_ref\"):60112,Pa=w?Symbol.for(\"react.suspense\"):60113,Qa=w?Symbol.for(\"react.suspense_list\"):\n\t60120,Ra=w?Symbol.for(\"react.memo\"):60115,Sa=w?Symbol.for(\"react.lazy\"):60116;w&&Symbol.for(\"react.fundamental\");w&&Symbol.for(\"react.responder\");w&&Symbol.for(\"react.scope\");var Ta=\"function\"===typeof Symbol&&Symbol.iterator;function Ua(a){if(null===a||\"object\"!==typeof a)return null;a=Ta&&a[Ta]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\n\tfunction Va(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\n\tfunction Wa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case Ia:return\"Fragment\";case Ha:return\"Portal\";case Ka:return\"Profiler\";case Ja:return\"StrictMode\";case Pa:return\"Suspense\";case Qa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ma:return\"Context.Consumer\";case La:return\"Context.Provider\";case Oa:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\t\"ForwardRef\");case Ra:return Wa(a.type);case Sa:if(a=1===a._status?a._result:null)return Wa(a)}return null}function Xa(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=Wa(a.type);c=null;d&&(c=Wa(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Fa,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\n\tvar Ya=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),Za=null,$a=null,ab=null;function bb(a){if(a=ua(a)){if(\"function\"!==typeof Za)throw Error(u(280));var b=sa(a.stateNode);Za(a.stateNode,a.type,b)}}function cb(a){$a?ab?ab.push(a):ab=[a]:$a=a}function db(){if($a){var a=$a,b=ab;ab=$a=null;bb(a);if(b)for(a=0;a<b.length;a++)bb(b[a])}}function eb(a,b){return a(b)}function fb(a,b,c,d){return a(b,c,d)}function gb(){}\n\tvar hb=eb,ib=!1,jb=!1;function kb(){if(null!==$a||null!==ab)gb(),db()}new Map;var lb=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,mb=Object.prototype.hasOwnProperty,nb={},ob={};\n\tfunction pb(a){if(mb.call(ob,a))return!0;if(mb.call(nb,a))return!1;if(lb.test(a))return ob[a]=!0;nb[a]=!0;return!1}function qb(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction rb(a,b,c,d){if(null===b||\"undefined\"===typeof b||qb(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var D={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1)});\n\t[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1)});var sb=/[\\-:]([a-z])/g;function tb(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(sb,\n\ttb);D[b]=new B(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1)});\n\tD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0)});function ub(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}\n\tfunction vb(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(rb(b,c,e,d)&&(c=null),d||null===e?pb(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tfunction wb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction xb(a){var b=wb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function yb(a){a._valueTracker||(a._valueTracker=xb(a))}function zb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=wb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Ab(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\n\tfunction Bb(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=ub(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cb(a,b){b=b.checked;null!=b&&vb(a,\"checked\",b,!1)}\n\tfunction Eb(a,b){Cb(a,b);var c=ub(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Fb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Fb(a,b.type,ub(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Gb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction Fb(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function Hb(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Ib(a,b){a=n({children:void 0},b);if(b=Hb(b.children))a.children=b;return a}\n\tfunction Jb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+ub(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction Kb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Lb(a,b){var c=b.value;if(null==c){c=b.defaultValue;b=b.children;if(null!=b){if(null!=c)throw Error(u(92));if(Array.isArray(b)){if(!(1>=b.length))throw Error(u(93));b=b[0]}c=b}null==c&&(c=\"\")}a._wrapperState={initialValue:ub(c)}}\n\tfunction Mb(a,b){var c=ub(b.value),d=ub(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Nb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var Ob={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction Pb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Qb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Pb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar Rb,Sb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ob.svg||\"innerHTML\"in a)a.innerHTML=b;else{Rb=Rb||document.createElement(\"div\");Rb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Rb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction Tb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Ub(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Vb={animationend:Ub(\"Animation\",\"AnimationEnd\"),animationiteration:Ub(\"Animation\",\"AnimationIteration\"),animationstart:Ub(\"Animation\",\"AnimationStart\"),transitionend:Ub(\"Transition\",\"TransitionEnd\")},Wb={},Xb={};\n\tYa&&(Xb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Vb.animationend.animation,delete Vb.animationiteration.animation,delete Vb.animationstart.animation),\"TransitionEvent\"in window||delete Vb.transitionend.transition);function Yb(a){if(Wb[a])return Wb[a];if(!Vb[a])return a;var b=Vb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Xb)return Wb[a]=b[c];return a}var Zb=Yb(\"animationend\"),$b=Yb(\"animationiteration\"),ac=Yb(\"animationstart\"),bc=Yb(\"transitionend\"),dc=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \");\n\tfunction ec(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function fc(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function gc(a){if(ec(a)!==a)throw Error(u(188));}\n\tfunction hc(a){var b=a.alternate;if(!b){b=ec(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return gc(e),a;if(f===d)return gc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\n\tc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function ic(a){a=hc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tvar jc,kc,lc,mc=!1,nc=[],oc=null,pc=null,qc=null,rc=new Map,sc=new Map,tc=[],uc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit\".split(\" \"),vc=\"focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture\".split(\" \");\n\tfunction wc(a){var b=xc(a);uc.forEach(function(c){yc(c,a,b)});vc.forEach(function(c){yc(c,a,b)})}function zc(a,b,c,d){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:d}}function Ac(a,b){switch(a){case \"focus\":case \"blur\":oc=null;break;case \"dragenter\":case \"dragleave\":pc=null;break;case \"mouseover\":case \"mouseout\":qc=null;break;case \"pointerover\":case \"pointerout\":rc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":sc.delete(b.pointerId)}}\n\tfunction Bc(a,b,c,d,e){if(null===a||a.nativeEvent!==e)return a=zc(b,c,d,e),null!==b&&(b=Cc(b),null!==b&&kc(b)),a;a.eventSystemFlags|=d;return a}function Dc(a,b,c,d){switch(b){case \"focus\":return oc=Bc(oc,a,b,c,d),!0;case \"dragenter\":return pc=Bc(pc,a,b,c,d),!0;case \"mouseover\":return qc=Bc(qc,a,b,c,d),!0;case \"pointerover\":var e=d.pointerId;rc.set(e,Bc(rc.get(e)||null,a,b,c,d));return!0;case \"gotpointercapture\":return e=d.pointerId,sc.set(e,Bc(sc.get(e)||null,a,b,c,d)),!0}return!1}\n\tfunction Ec(a){var b=Fc(a.target);if(null!==b){var c=ec(b);if(null!==c)if(b=c.tag,13===b){if(b=fc(c),null!==b){a.blockedOn=b;q.unstable_runWithPriority(a.priority,function(){lc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Gc(a){if(null!==a.blockedOn)return!1;var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);if(null!==b){var c=Cc(b);null!==c&&kc(c);a.blockedOn=b;return!1}return!0}\n\tfunction Ic(a,b,c){Gc(a)&&c.delete(b)}function Jc(){for(mc=!1;0<nc.length;){var a=nc[0];if(null!==a.blockedOn){a=Cc(a.blockedOn);null!==a&&jc(a);break}var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);null!==b?a.blockedOn=b:nc.shift()}null!==oc&&Gc(oc)&&(oc=null);null!==pc&&Gc(pc)&&(pc=null);null!==qc&&Gc(qc)&&(qc=null);rc.forEach(Ic);sc.forEach(Ic)}function Kc(a,b){a.blockedOn===b&&(a.blockedOn=null,mc||(mc=!0,q.unstable_scheduleCallback(q.unstable_NormalPriority,Jc)))}\n\tfunction Lc(a){function b(b){return Kc(b,a)}if(0<nc.length){Kc(nc[0],a);for(var c=1;c<nc.length;c++){var d=nc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==oc&&Kc(oc,a);null!==pc&&Kc(pc,a);null!==qc&&Kc(qc,a);rc.forEach(b);sc.forEach(b);for(c=0;c<tc.length;c++)d=tc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<tc.length&&(c=tc[0],null===c.blockedOn);)Ec(c),null===c.blockedOn&&tc.shift()}\n\tfunction Mc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Nc(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Oc(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\n\tfunction Pc(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Nc(b);for(b=c.length;0<b--;)Oc(c[b],\"captured\",a);for(b=0;b<c.length;b++)Oc(c[b],\"bubbled\",a)}}function Qc(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Rc(a){a&&a.dispatchConfig.registrationName&&Qc(a._targetInst,null,a)}\n\tfunction Sc(a){ya(a,Pc)}function Tc(){return!0}function Uc(){return!1}function E(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?Tc:Uc;this.isPropagationStopped=Uc;return this}\n\tn(E.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=Tc)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=Tc)},persist:function(){this.isPersistent=Tc},isPersistent:Uc,destructor:function(){var a=this.constructor.Interface,\n\tb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=Uc;this._dispatchInstances=this._dispatchListeners=null}});E.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\tE.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;Vc(c);return c};Vc(E);function Wc(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\n\tfunction Xc(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Vc(a){a.eventPool=[];a.getPooled=Wc;a.release=Xc}var Yc=E.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zc=E.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),$c=E.extend({view:null,detail:null}),ad=$c.extend({relatedTarget:null});\n\tfunction bd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\n\tvar cd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},ed={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},fd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function gd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=fd[a])?!!b[a]:!1}function hd(){return gd}\n\tvar id=$c.extend({key:function(a){if(a.key){var b=cd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=bd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?ed[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:hd,charCode:function(a){return\"keypress\"===a.type?bd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\n\ta.type?bd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),jd=0,kd=0,ld=!1,md=!1,nd=$c.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:hd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=jd;jd=a.screenX;return ld?\"mousemove\"===a.type?a.screenX-\n\tb:0:(ld=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;var b=kd;kd=a.screenY;return md?\"mousemove\"===a.type?a.screenY-b:0:(md=!0,0)}}),od=nd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),pd=nd.extend({dataTransfer:null}),qd=$c.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:hd}),rd=E.extend({propertyName:null,\n\telapsedTime:null,pseudoElement:null}),sd=nd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"blur\",\"blur\",0],[\"cancel\",\"cancel\",0],[\"click\",\"click\",0],[\"close\",\"close\",0],[\"contextmenu\",\"contextMenu\",0],[\"copy\",\"copy\",0],[\"cut\",\"cut\",0],[\"auxclick\",\"auxClick\",0],[\"dblclick\",\"doubleClick\",0],[\"dragend\",\"dragEnd\",\n\t0],[\"dragstart\",\"dragStart\",0],[\"drop\",\"drop\",0],[\"focus\",\"focus\",0],[\"input\",\"input\",0],[\"invalid\",\"invalid\",0],[\"keydown\",\"keyDown\",0],[\"keypress\",\"keyPress\",0],[\"keyup\",\"keyUp\",0],[\"mousedown\",\"mouseDown\",0],[\"mouseup\",\"mouseUp\",0],[\"paste\",\"paste\",0],[\"pause\",\"pause\",0],[\"play\",\"play\",0],[\"pointercancel\",\"pointerCancel\",0],[\"pointerdown\",\"pointerDown\",0],[\"pointerup\",\"pointerUp\",0],[\"ratechange\",\"rateChange\",0],[\"reset\",\"reset\",0],[\"seeked\",\"seeked\",0],[\"submit\",\"submit\",0],[\"touchcancel\",\"touchCancel\",\n\t0],[\"touchend\",\"touchEnd\",0],[\"touchstart\",\"touchStart\",0],[\"volumechange\",\"volumeChange\",0],[\"drag\",\"drag\",1],[\"dragenter\",\"dragEnter\",1],[\"dragexit\",\"dragExit\",1],[\"dragleave\",\"dragLeave\",1],[\"dragover\",\"dragOver\",1],[\"mousemove\",\"mouseMove\",1],[\"mouseout\",\"mouseOut\",1],[\"mouseover\",\"mouseOver\",1],[\"pointermove\",\"pointerMove\",1],[\"pointerout\",\"pointerOut\",1],[\"pointerover\",\"pointerOver\",1],[\"scroll\",\"scroll\",1],[\"toggle\",\"toggle\",1],[\"touchmove\",\"touchMove\",1],[\"wheel\",\"wheel\",1],[\"abort\",\"abort\",\n\t2],[Zb,\"animationEnd\",2],[$b,\"animationIteration\",2],[ac,\"animationStart\",2],[\"canplay\",\"canPlay\",2],[\"canplaythrough\",\"canPlayThrough\",2],[\"durationchange\",\"durationChange\",2],[\"emptied\",\"emptied\",2],[\"encrypted\",\"encrypted\",2],[\"ended\",\"ended\",2],[\"error\",\"error\",2],[\"gotpointercapture\",\"gotPointerCapture\",2],[\"load\",\"load\",2],[\"loadeddata\",\"loadedData\",2],[\"loadedmetadata\",\"loadedMetadata\",2],[\"loadstart\",\"loadStart\",2],[\"lostpointercapture\",\"lostPointerCapture\",2],[\"playing\",\"playing\",2],[\"progress\",\n\t\"progress\",2],[\"seeking\",\"seeking\",2],[\"stalled\",\"stalled\",2],[\"suspend\",\"suspend\",2],[\"timeupdate\",\"timeUpdate\",2],[bc,\"transitionEnd\",2],[\"waiting\",\"waiting\",2]],ud={},vd={},xd=0;for(;xd<td.length;xd++){var yd=td[xd],zd=yd[0],Ad=yd[1],Bd=yd[2],Cd=\"on\"+(Ad[0].toUpperCase()+Ad.slice(1)),Dd={phasedRegistrationNames:{bubbled:Cd,captured:Cd+\"Capture\"},dependencies:[zd],eventPriority:Bd};ud[Ad]=Dd;vd[zd]=Dd}\n\tvar Ed={eventTypes:ud,getEventPriority:function(a){a=vd[a];return void 0!==a?a.eventPriority:2},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===bd(c))return null;case \"keydown\":case \"keyup\":a=id;break;case \"blur\":case \"focus\":a=ad;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=nd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\n\tpd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Zb:case $b:case ac:a=Yc;break;case bc:a=rd;break;case \"scroll\":a=$c;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=Zc;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=od;break;default:a=E}b=a.getPooled(e,b,c,d);Sc(b);return b}},Fd=q.unstable_UserBlockingPriority,\n\tGd=q.unstable_runWithPriority,Hd=Ed.getEventPriority,Id=10,Jd=[];\n\tfunction Kd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=Fc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Mc(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=a.eventSystemFlags,h=null,k=0;k<ea.length;k++){var l=ea[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=xa(h,l))}Ba(h)}}\n\tvar Ld=!0;function F(a,b){Md(b,a,!1)}function Md(a,b,c){switch(Hd(b)){case 0:var d=Nd.bind(null,b,1);break;case 1:d=Od.bind(null,b,1);break;default:d=Pd.bind(null,b,1)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function Nd(a,b,c){ib||gb();var d=Pd,e=ib;ib=!0;try{fb(d,a,b,c)}finally{(ib=e)||kb()}}function Od(a,b,c){Gd(Fd,Pd.bind(null,a,b,c))}\n\tfunction Qd(a,b,c,d){if(Jd.length){var e=Jd.pop();e.topLevelType=a;e.eventSystemFlags=b;e.nativeEvent=c;e.targetInst=d;a=e}else a={topLevelType:a,eventSystemFlags:b,nativeEvent:c,targetInst:d,ancestors:[]};try{if(b=Kd,c=a,jb)b(c,void 0);else{jb=!0;try{hb(b,c,void 0)}finally{jb=!1,kb()}}}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,Jd.length<Id&&Jd.push(a)}}\n\tfunction Pd(a,b,c){if(Ld)if(0<nc.length&&-1<uc.indexOf(a))a=zc(null,a,b,c),nc.push(a);else{var d=Hc(a,b,c);null===d?Ac(a,c):-1<uc.indexOf(a)?(a=zc(d,a,b,c),nc.push(a)):Dc(d,a,b,c)||(Ac(a,c),Qd(a,b,c,null))}}function Hc(a,b,c){var d=Mc(c);d=Fc(d);if(null!==d){var e=ec(d);if(null===e)d=null;else{var f=e.tag;if(13===f){d=fc(e);if(null!==d)return d;d=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;d=null}else e!==d&&(d=null)}}Qd(a,b,c,d);return null}\n\tfunction Rd(a){if(!Ya)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}var Sd=new (\"function\"===typeof WeakMap?WeakMap:Map);function xc(a){var b=Sd.get(a);void 0===b&&(b=new Set,Sd.set(a,b));return b}\n\tfunction yc(a,b,c){if(!c.has(a)){switch(a){case \"scroll\":Md(b,\"scroll\",!0);break;case \"focus\":case \"blur\":Md(b,\"focus\",!0);Md(b,\"blur\",!0);c.add(\"blur\");c.add(\"focus\");break;case \"cancel\":case \"close\":Rd(a)&&Md(b,a,!0);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===dc.indexOf(a)&&F(a,b)}c.add(a)}}\n\tvar Td={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ud=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Td).forEach(function(a){Ud.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Td[b]=Td[a]})});function Vd(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||Td.hasOwnProperty(a)&&Td[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction Wd(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=Vd(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Xd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction Yd(a,b){if(b){if(Xd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,\"\"));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(u(62,\"\"));}}\n\tfunction Zd(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function $d(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=xc(a);b=ja[b];for(var d=0;d<b.length;d++)yc(b[d],a,c)}function ae(){}\n\tfunction be(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ce(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function de(a,b){var c=ce(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ce(c)}}\n\tfunction ee(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?ee(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function fe(){for(var a=window,b=be();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=be(a.document)}return b}\n\tfunction ge(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}var he=\"$\",ie=\"/$\",je=\"$?\",ke=\"$!\",le=null,me=null;function ne(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\n\tfunction oe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var pe=\"function\"===typeof setTimeout?setTimeout:void 0,qe=\"function\"===typeof clearTimeout?clearTimeout:void 0;function re(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\n\tfunction se(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===he||c===ke||c===je){if(0===b)return a;b--}else c===ie&&b++}a=a.previousSibling}return null}var te=Math.random().toString(36).slice(2),ue=\"__reactInternalInstance$\"+te,ve=\"__reactEventHandlers$\"+te,we=\"__reactContainere$\"+te;\n\tfunction Fc(a){var b=a[ue];if(b)return b;for(var c=a.parentNode;c;){if(b=c[we]||c[ue]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=se(a);null!==a;){if(c=a[ue])return c;a=se(a)}return b}a=c;c=a.parentNode}return null}function Cc(a){a=a[ue]||a[we];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function xe(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function ye(a){return a[ve]||null}var ze=null,Ae=null,Be=null;\n\tfunction Ce(){if(Be)return Be;var a,b=Ae,c=b.length,d,e=\"value\"in ze?ze.value:ze.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return Be=e.slice(a,1<d?1-d:void 0)}var De=E.extend({data:null}),Ee=E.extend({data:null}),Fe=[9,13,27,32],Ge=Ya&&\"CompositionEvent\"in window,He=null;Ya&&\"documentMode\"in document&&(He=document.documentMode);\n\tvar Ie=Ya&&\"TextEvent\"in window&&!He,Je=Ya&&(!Ge||He&&8<He&&11>=He),Ke=String.fromCharCode(32),Le={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Me=!1;\n\tfunction Ne(a,b){switch(a){case \"keyup\":return-1!==Fe.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Oe(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Pe=!1;function Qe(a,b){switch(a){case \"compositionend\":return Oe(b);case \"keypress\":if(32!==b.which)return null;Me=!0;return Ke;case \"textInput\":return a=b.data,a===Ke&&Me?null:a;default:return null}}\n\tfunction Re(a,b){if(Pe)return\"compositionend\"===a||!Ge&&Ne(a,b)?(a=Ce(),Be=Ae=ze=null,Pe=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return Je&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar Se={eventTypes:Le,extractEvents:function(a,b,c,d){var e;if(Ge)b:{switch(a){case \"compositionstart\":var f=Le.compositionStart;break b;case \"compositionend\":f=Le.compositionEnd;break b;case \"compositionupdate\":f=Le.compositionUpdate;break b}f=void 0}else Pe?Ne(a,c)&&(f=Le.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(f=Le.compositionStart);f?(Je&&\"ko\"!==c.locale&&(Pe||f!==Le.compositionStart?f===Le.compositionEnd&&Pe&&(e=Ce()):(ze=d,Ae=\"value\"in ze?ze.value:ze.textContent,Pe=!0)),f=De.getPooled(f,\n\tb,c,d),e?f.data=e:(e=Oe(c),null!==e&&(f.data=e)),Sc(f),e=f):e=null;(a=Ie?Qe(a,c):Re(a,c))?(b=Ee.getPooled(Le.beforeInput,b,c,d),b.data=a,Sc(b)):b=null;return null===e?b:null===b?e:[e,b]}},Te={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Te[a.type]:\"textarea\"===b?!0:!1}\n\tvar Ve={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function We(a,b,c){a=E.getPooled(Ve.change,a,b,c);a.type=\"change\";cb(c);Sc(a);return a}var Xe=null,Ye=null;function Ze(a){Ba(a)}function $e(a){var b=xe(a);if(zb(b))return a}function af(a,b){if(\"change\"===a)return b}var bf=!1;Ya&&(bf=Rd(\"input\")&&(!document.documentMode||9<document.documentMode));\n\tfunction cf(){Xe&&(Xe.detachEvent(\"onpropertychange\",df),Ye=Xe=null)}function df(a){if(\"value\"===a.propertyName&&$e(Ye))if(a=We(Ye,a,Mc(a)),ib)Ba(a);else{ib=!0;try{eb(Ze,a)}finally{ib=!1,kb()}}}function ef(a,b,c){\"focus\"===a?(cf(),Xe=b,Ye=c,Xe.attachEvent(\"onpropertychange\",df)):\"blur\"===a&&cf()}function ff(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return $e(Ye)}function gf(a,b){if(\"click\"===a)return $e(b)}function hf(a,b){if(\"input\"===a||\"change\"===a)return $e(b)}\n\tvar jf={eventTypes:Ve,_isInputEventSupported:bf,extractEvents:function(a,b,c,d){var e=b?xe(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=af;else if(Ue(e))if(bf)g=hf;else{g=ff;var h=ef}else(f=e.nodeName)&&\"input\"===f.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(g=gf);if(g&&(g=g(a,b)))return We(g,c,d);h&&h(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Fb(e,\"number\",e.value)}},kf={mouseEnter:{registrationName:\"onMouseEnter\",\n\tdependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},lf,mf={eventTypes:kf,extractEvents:function(a,b,c,d,e){var f=\"mouseover\"===a||\"pointerover\"===a,g=\"mouseout\"===a||\"pointerout\"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;\n\te=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?Fc(b):null,null!==b&&(f=ec(b),b!==f||5!==b.tag&&6!==b.tag))b=null}else g=null;if(g===b)return null;if(\"mouseout\"===a||\"mouseover\"===a){var h=nd;var k=kf.mouseLeave;var l=kf.mouseEnter;var m=\"mouse\"}else if(\"pointerout\"===a||\"pointerover\"===a)h=od,k=kf.pointerLeave,l=kf.pointerEnter,m=\"pointer\";a=null==g?e:xe(g);e=null==b?e:xe(b);k=h.getPooled(k,g,c,d);k.type=m+\"leave\";k.target=\n\ta;k.relatedTarget=e;d=h.getPooled(l,b,c,d);d.type=m+\"enter\";d.target=e;d.relatedTarget=a;h=g;m=b;if(h&&m)a:{l=h;a=m;g=0;for(b=l;b;b=Nc(b))g++;b=0;for(e=a;e;e=Nc(e))b++;for(;0<g-b;)l=Nc(l),g--;for(;0<b-g;)a=Nc(a),b--;for(;g--;){if(l===a||l===a.alternate)break a;l=Nc(l);a=Nc(a)}l=null}else l=null;a=l;for(l=[];h&&h!==a;){g=h.alternate;if(null!==g&&g===a)break;l.push(h);h=Nc(h)}for(h=[];m&&m!==a;){g=m.alternate;if(null!==g&&g===a)break;h.push(m);m=Nc(m)}for(m=0;m<l.length;m++)Qc(l[m],\"bubbled\",k);for(m=\n\th.length;0<m--;)Qc(h[m],\"captured\",d);if(c===lf)return lf=null,[k];lf=c;return[k,d]}};function nf(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var of=\"function\"===typeof Object.is?Object.is:nf,pf=Object.prototype.hasOwnProperty;function qf(a,b){if(of(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!pf.call(b,c[d])||!of(a[c[d]],b[c[d]]))return!1;return!0}\n\tvar rf=Ya&&\"documentMode\"in document&&11>=document.documentMode,sf={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},tf=null,uf=null,vf=null,wf=!1;\n\tfunction xf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(wf||null==tf||tf!==be(c))return null;c=tf;\"selectionStart\"in c&&ge(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return vf&&qf(vf,c)?null:(vf=c,a=E.getPooled(sf.select,uf,a,b),a.type=\"select\",a.target=tf,Sc(a),a)}\n\tvar yf={eventTypes:sf,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=xc(e);f=ja.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?xe(b):window;switch(a){case \"focus\":if(Ue(e)||\"true\"===e.contentEditable)tf=e,uf=b,vf=null;break;case \"blur\":vf=uf=tf=null;break;case \"mousedown\":wf=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return wf=!1,xf(c,d);case \"selectionchange\":if(rf)break;\n\tcase \"keydown\":case \"keyup\":return xf(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));var zf=Cc;sa=ye;ua=zf;va=xe;Ca.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:mf,ChangeEventPlugin:jf,SelectEventPlugin:yf,BeforeInputEventPlugin:Se});new Set;var Af=[],Bf=-1;function G(a){0>Bf||(a.current=Af[Bf],Af[Bf]=null,Bf--)}\n\tfunction I(a,b){Bf++;Af[Bf]=a.current;a.current=b}var Cf={},J={current:Cf},K={current:!1},Df=Cf;function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\n\tfunction Ff(a){G(K,a);G(J,a)}function Gf(a){G(K,a);G(J,a)}function Hf(a,b,c){if(J.current!==Cf)throw Error(u(168));I(J,b,a);I(K,c,a)}function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,Wa(b)||\"Unknown\",e));return n({},c,{},d)}function Jf(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Cf;Df=J.current;I(J,b,a);I(K,K.current,a);return!0}\n\tfunction Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(b=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=b,G(K,a),G(J,a),I(J,b,a)):G(K,a);I(K,c,a)}\n\tvar Lf=q.unstable_runWithPriority,Mf=q.unstable_scheduleCallback,Nf=q.unstable_cancelCallback,Of=q.unstable_shouldYield,Pf=q.unstable_requestPaint,Qf=q.unstable_now,Rf=q.unstable_getCurrentPriorityLevel,Sf=q.unstable_ImmediatePriority,Tf=q.unstable_UserBlockingPriority,Uf=q.unstable_NormalPriority,Vf=q.unstable_LowPriority,Wf=q.unstable_IdlePriority,Xf={},Yf=void 0!==Pf?Pf:function(){},Zf=null,$f=null,ag=!1,bg=Qf(),cg=1E4>bg?Qf:function(){return Qf()-bg};\n\tfunction dg(){switch(Rf()){case Sf:return 99;case Tf:return 98;case Uf:return 97;case Vf:return 96;case Wf:return 95;default:throw Error(u(332));}}function eg(a){switch(a){case 99:return Sf;case 98:return Tf;case 97:return Uf;case 96:return Vf;case 95:return Wf;default:throw Error(u(332));}}function fg(a,b){a=eg(a);return Lf(a,b)}function gg(a,b,c){a=eg(a);return Mf(a,b,c)}function hg(a){null===Zf?(Zf=[a],$f=Mf(Sf,ig)):Zf.push(a);return Xf}function jg(){if(null!==$f){var a=$f;$f=null;Nf(a)}ig()}\n\tfunction ig(){if(!ag&&null!==Zf){ag=!0;var a=0;try{var b=Zf;fg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Zf=null}catch(c){throw null!==Zf&&(Zf=Zf.slice(a+1)),Mf(Sf,jg),c;}finally{ag=!1}}}var kg=3;function lg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function mg(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var ng={current:null},og=null,pg=null,qg=null;function rg(){qg=pg=og=null}\n\tfunction sg(a,b){var c=a.type._context;I(ng,c._currentValue,a);c._currentValue=b}function tg(a){var b=ng.current;G(ng,a);a.type._context._currentValue=b}function ug(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}\n\tfunction vg(a,b){og=a;qg=pg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(wg=!0),a.firstContext=null)}function xg(a,b){if(qg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)qg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===pg){if(null===og)throw Error(u(308));pg=b;og.dependencies={expirationTime:0,firstContext:b,responders:null}}else pg=pg.next=b}return a._currentValue}var yg=!1;\n\tfunction zg(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ag(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\n\tfunction Bg(a,b){return{expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Cg(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\n\tfunction Dg(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=zg(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=zg(a.memoizedState),e=c.updateQueue=zg(c.memoizedState)):d=a.updateQueue=Ag(e):null===e&&(e=c.updateQueue=Ag(d));null===e||d===e?Cg(d,b):null===d.lastUpdate||null===e.lastUpdate?(Cg(d,b),Cg(e,b)):(Cg(d,b),e.lastUpdate=b)}\n\tfunction Eg(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=zg(a.memoizedState):Fg(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function Fg(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Ag(b));return b}\n\tfunction Gg(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-4097|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:yg=!0}return d}\n\tfunction Hg(a,b,c,d,e){yg=!1;b=Fg(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(Ig(m,k.suspenseConfig),l=Gg(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var C=k.expirationTime;C<e?(null===m&&(m=k,null===g&&(f=l)),h<C&&(h=C)):(l=Gg(a,b,k,l,c,d),null!==\n\tk.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;Jg(h);a.expirationTime=h;a.memoizedState=l}\n\tfunction Kg(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);Lg(b.firstEffect,c);b.firstEffect=b.lastEffect=null;Lg(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function Lg(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;if(\"function\"!==typeof c)throw Error(u(191,c));c.call(d)}a=a.nextEffect}}\n\tvar Mg=Ea.ReactCurrentBatchConfig,Ng=(new aa.Component).refs;function Og(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\n\tvar Sg={isMounted:function(a){return(a=a._reactInternalFiber)?ec(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Pg(),d=Mg.suspense;\n\tc=Qg(c,a,d);d=Bg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);Dg(a,d);Rg(a,c)}};function Tg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!qf(c,d)||!qf(e,f):!0}\n\tfunction Ug(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=xg(f):(e=L(b)?Df:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Sg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction Vg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Sg.enqueueReplaceState(b,b.state,null)}\n\tfunction Wg(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Ng;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=xg(f):(f=L(b)?Df:J.current,e.context=Ef(a,f));f=a.updateQueue;null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Og(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\n\ttypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Sg.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Xg=Array.isArray;\n\tfunction Yg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ng&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\n\tfunction Zg(a,b){if(\"textarea\"!==a.type)throw Error(u(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\"));}\n\tfunction $g(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ah(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=bh(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Yg(a,b,c),d.return=a,d;d=ch(c.type,c.key,c.props,null,a.mode,d);d.ref=Yg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\n\tc.implementation)return b=dh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=eh(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function C(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=bh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Ga:return c=ch(b.type,b.key,b.props,null,a.mode,c),c.ref=Yg(a,null,b),c.return=a,c;case Ha:return b=dh(b,a.mode,c),b.return=a,b}if(Xg(b)||\n\tUa(b))return b=eh(b,a.mode,c,null),b.return=a,b;Zg(a,b)}return null}function y(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Ga:return c.key===e?c.type===Ia?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case Ha:return c.key===e?l(a,b,c,d):null}if(Xg(c)||Ua(c))return null!==e?null:m(a,b,c,d,null);Zg(a,c)}return null}function H(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\n\ta.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Ga:return a=a.get(null===d.key?c:d.key)||null,d.type===Ia?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case Ha:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Xg(d)||Ua(d))return a=a.get(c)||null,m(b,a,d,e,null);Zg(b,d)}return null}function z(e,g,h,k){for(var l=null,m=null,r=g,x=g=0,A=null;null!==r&&x<h.length;x++){r.index>x?(A=r,r=null):A=r.sibling;var p=y(e,r,h[x],k);if(null===p){null===r&&(r=A);break}a&&\n\tr&&null===p.alternate&&b(e,r);g=f(p,g,x);null===m?l=p:m.sibling=p;m=p;r=A}if(x===h.length)return c(e,r),l;if(null===r){for(;x<h.length;x++)r=C(e,h[x],k),null!==r&&(g=f(r,g,x),null===m?l=r:m.sibling=r,m=r);return l}for(r=d(e,r);x<h.length;x++)A=H(r,e,x,h[x],k),null!==A&&(a&&null!==A.alternate&&r.delete(null===A.key?x:A.key),g=f(A,g,x),null===m?l=A:m.sibling=A,m=A);a&&r.forEach(function(a){return b(e,a)});return l}function ta(e,g,h,k){var l=Ua(h);if(\"function\"!==typeof l)throw Error(u(150));h=l.call(h);\n\tif(null==h)throw Error(u(151));for(var m=l=null,r=g,x=g=0,A=null,p=h.next();null!==r&&!p.done;x++,p=h.next()){r.index>x?(A=r,r=null):A=r.sibling;var z=y(e,r,p.value,k);if(null===z){null===r&&(r=A);break}a&&r&&null===z.alternate&&b(e,r);g=f(z,g,x);null===m?l=z:m.sibling=z;m=z;r=A}if(p.done)return c(e,r),l;if(null===r){for(;!p.done;x++,p=h.next())p=C(e,p.value,k),null!==p&&(g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);return l}for(r=d(e,r);!p.done;x++,p=h.next())p=H(r,e,x,p.value,k),null!==p&&(a&&null!==\n\tp.alternate&&r.delete(null===p.key?x:p.key),g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);a&&r.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Ia&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Ga:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Ia:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Ia?f.props.children:f.props,h);d.ref=Yg(a,k,f);d.return=a;a=d;break a}else{c(a,\n\tk);break}else b(a,k);k=k.sibling}f.type===Ia?(d=eh(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=ch(f.type,f.key,f.props,null,a.mode,h),h.ref=Yg(a,d,f),h.return=a,a=h)}return g(a);case Ha:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=dh(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===\n\ttypeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=bh(f,a.mode,h),d.return=a,a=d),g(a);if(Xg(f))return z(a,d,f,h);if(Ua(f))return ta(a,d,f,h);l&&Zg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||\"Component\"));}return c(a,d)}}var fh=$g(!0),gh=$g(!1),hh={},ih={current:hh},jh={current:hh},kh={current:hh};function lh(a){if(a===hh)throw Error(u(174));return a}\n\tfunction mh(a,b){I(kh,b,a);I(jh,a,a);I(ih,hh,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Qb(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Qb(b,c)}G(ih,a);I(ih,b,a)}function nh(a){G(ih,a);G(jh,a);G(kh,a)}function oh(a){lh(kh.current);var b=lh(ih.current);var c=Qb(b,a.type);b!==c&&(I(jh,a,a),I(ih,c,a))}function ph(a){jh.current===a&&(G(ih,a),G(jh,a))}var M={current:0};\n\tfunction qh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===je||c.data===ke))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function rh(a,b){return{responder:a,props:b}}\n\tvar sh=Ea.ReactCurrentDispatcher,N=Ea.ReactCurrentBatchConfig,th=0,uh=null,O=null,vh=null,wh=null,P=null,xh=null,yh=0,zh=null,Ah=0,Bh=!1,Ch=null,Gh=0;function Q(){throw Error(u(321));}function Hh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!of(a[c],b[c]))return!1;return!0}\n\tfunction Ih(a,b,c,d,e,f){th=f;uh=b;vh=null!==a?a.memoizedState:null;sh.current=null===vh?Jh:Kh;b=c(d,e);if(Bh){do Bh=!1,Gh+=1,vh=null!==a?a.memoizedState:null,xh=wh,zh=P=O=null,sh.current=Kh,b=c(d,e);while(Bh);Ch=null;Gh=0}sh.current=Lh;a=uh;a.memoizedState=wh;a.expirationTime=yh;a.updateQueue=zh;a.effectTag|=Ah;a=null!==O&&null!==O.next;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;if(a)throw Error(u(300));return b}\n\tfunction Mh(){sh.current=Lh;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;Bh=!1;Ch=null;Gh=0}function Nh(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===P?wh=P=a:P=P.next=a;return P}function Oh(){if(null!==xh)P=xh,xh=P.next,O=vh,vh=null!==O?O.next:null;else{if(null===vh)throw Error(u(310));O=vh;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};P=null===P?wh=a:P.next=a;vh=O.next}return P}\n\tfunction Ph(a,b){return\"function\"===typeof b?b(a):b}\n\tfunction Qh(a){var b=Oh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;if(0<Gh){var d=c.dispatch;if(null!==Ch){var e=Ch.get(c);if(void 0!==e){Ch.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\n\td){var h=e=null,k=d,l=!1;do{var m=k.expirationTime;m<th?(l||(l=!0,h=g,e=f),m>yh&&(yh=m,Jg(yh))):(Ig(m,k.suspenseConfig),f=k.eagerReducer===a?k.eagerState:a(f,k.action));g=k;k=k.next}while(null!==k&&k!==d);l||(h=g,e=f);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\n\tfunction Rh(a){var b=Nh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,lastRenderedReducer:Ph,lastRenderedState:a};a=a.dispatch=Sh.bind(null,uh,a);return[b.memoizedState,a]}function Th(a){return Qh(Ph,a)}function Uh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===zh?(zh={lastEffect:null},zh.lastEffect=a.next=a):(b=zh.lastEffect,null===b?zh.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,zh.lastEffect=a));return a}\n\tfunction Vh(a,b,c,d){var e=Nh();Ah|=a;e.memoizedState=Uh(b,c,void 0,void 0===d?null:d)}function Wh(a,b,c,d){var e=Oh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Hh(d,g.deps)){Uh(0,c,f,d);return}}Ah|=a;e.memoizedState=Uh(b,c,f,d)}function Xh(a,b){return Vh(516,192,a,b)}function Yh(a,b){return Wh(516,192,a,b)}\n\tfunction Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function $h(){}function ai(a,b){Nh().memoizedState=[a,void 0===b?null:b];return a}function bi(a,b){var c=Oh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\n\tfunction Sh(a,b,c){if(!(25>Gh))throw Error(u(301));var d=a.alternate;if(a===uh||null!==d&&d===uh)if(Bh=!0,a={expirationTime:th,suspenseConfig:null,action:c,eagerReducer:null,eagerState:null,next:null},null===Ch&&(Ch=new Map),c=Ch.get(b),void 0===c)Ch.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{var e=Pg(),f=Mg.suspense;e=Qg(e,a,f);f={expirationTime:e,suspenseConfig:f,action:c,eagerReducer:null,eagerState:null,next:null};var g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&\n\t(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===d||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var k=b.lastRenderedState,l=d(k,c);f.eagerReducer=d;f.eagerState=l;if(of(l,k))return}catch(m){}finally{}Rg(a,e)}}\n\tvar Lh={readContext:xg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},Jh={readContext:xg,useCallback:ai,useContext:xg,useEffect:Xh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Vh(4,36,a,b)},useMemo:function(a,b){var c=Nh();b=void 0===b?null:b;a=a();c.memoizedState=\n\t[a,b];return a},useReducer:function(a,b,c){var d=Nh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Sh.bind(null,uh,a);return[d.memoizedState,a]},useRef:function(a){var b=Nh();a={current:a};return b.memoizedState=a},useState:Rh,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Rh(a),d=c[0],e=c[1];Xh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=\n\tc}})},[a,b]);return d},useTransition:function(a){var b=Rh(!1),c=b[0],d=b[1];return[ai(function(b){d(!0);q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},Kh={readContext:xg,useCallback:bi,useContext:xg,useEffect:Yh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Wh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Wh(4,36,a,b)},useMemo:function(a,b){var c=Oh();b=void 0===b?\n\tnull:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:Qh,useRef:function(){return Oh().memoizedState},useState:Th,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Th(a),d=c[0],e=c[1];Yh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=c}})},[a,b]);return d},useTransition:function(a){var b=Th(!1),c=b[0],d=b[1];return[bi(function(b){d(!0);q.unstable_next(function(){var c=\n\tN.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},ci=null,di=null,ei=!1;function fi(a,b){var c=gi(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\n\tfunction hi(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\n\tfunction ii(a){if(ei){var b=di;if(b){var c=b;if(!hi(a,b)){b=re(c.nextSibling);if(!b||!hi(a,b)){a.effectTag=a.effectTag&-1025|2;ei=!1;ci=a;return}fi(ci,c)}ci=a;di=re(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,ei=!1,ci=a}}function ji(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;ci=a}\n\tfunction ki(a){if(a!==ci)return!1;if(!ei)return ji(a),ei=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!oe(b,a.memoizedProps))for(b=di;b;)fi(a,b),b=re(b.nextSibling);ji(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===ie){if(0===b){di=re(a.nextSibling);break a}b--}else c!==he&&c!==ke&&c!==je||b++}a=a.nextSibling}di=null}}else di=ci?re(a.stateNode.nextSibling):null;return!0}\n\tfunction li(){di=ci=null;ei=!1}var mi=Ea.ReactCurrentOwner,wg=!1;function R(a,b,c,d){b.child=null===a?gh(b,null,c,d):fh(b,a.child,c,d)}function ni(a,b,c,d,e){c=c.render;var f=b.ref;vg(b,e);d=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\n\tfunction pi(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!qi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ri(a,b,g,d,e,f);a=ch(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:qf,c(e,d)&&a.ref===b.ref))return oi(a,b,f);b.effectTag|=1;a=ah(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction ri(a,b,c,d,e,f){return null!==a&&qf(a.memoizedProps,d)&&a.ref===b.ref&&(wg=!1,e<f)?oi(a,b,f):si(a,b,c,d,f)}function ti(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function si(a,b,c,d,e){var f=L(c)?Df:J.current;f=Ef(b,f);vg(b,e);c=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\n\tfunction ui(a,b,c,d,e){if(L(c)){var f=!0;Jf(b)}else f=!1;vg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Ug(b,c,d,e),Wg(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l));var m=c.getDerivedStateFromProps,C=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;C||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l);yg=!1;var y=b.memoizedState;k=g.state=y;var H=b.updateQueue;null!==H&&(Hg(b,H,d,g,e),k=b.memoizedState);h!==d||y!==k||K.current||yg?(\"function\"===typeof m&&(Og(b,c,m,d),k=b.memoizedState),(h=yg||Tg(b,c,h,d,y,k,l))?(C||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\n\tg.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:mg(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l)),m=c.getDerivedStateFromProps,(C=\n\t\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l),yg=!1,k=b.memoizedState,y=g.state=k,H=b.updateQueue,null!==H&&(Hg(b,H,d,g,e),y=b.memoizedState),h!==d||k!==y||K.current||yg?(\"function\"===typeof m&&(Og(b,c,m,d),y=b.memoizedState),(m=yg||Tg(b,c,h,d,k,y,l))?(C||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n\t(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,y,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,y,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\n\td,b.memoizedState=y),g.props=d,g.state=y,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return vi(a,b,c,d,f,e)}\n\tfunction vi(a,b,c,d,e,f){ti(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Kf(b,c,!1),oi(a,b,f);d=b.stateNode;mi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=fh(b,a.child,null,f),b.child=fh(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function wi(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);mh(a,b.containerInfo)}\n\tvar xi={dehydrated:null,retryTime:0};\n\tfunction yi(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1,b);if(null===a){void 0!==e.fallback&&ii(b);if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=\n\tb;e.sibling=c;b.memoizedState=xi;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=gh(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=ah(a,a.pendingProps,0);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=ah(d,e,d.expirationTime);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=xi;b.child=c;return d}c=fh(b,a.child,e.children,c);b.memoizedState=\n\tnull;return b.child=c}a=a.child;if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=xi;b.child=e;return c}b.memoizedState=null;return b.child=fh(b,a,e.children,c)}\n\tfunction zi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);ug(a.return,b)}function Ai(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\n\tfunction Bi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&zi(a,c);else if(19===a.tag)zi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d,b);if(0===(b.mode&2))b.memoizedState=\n\tnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===qh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Ai(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===qh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}Ai(b,!0,c,null,f,b.lastEffect);break;case \"together\":Ai(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\n\tfunction oi(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Jg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=ah(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ah(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}function Ci(a){a.effectTag|=4}var Hi,Ii,Ji,Ki;\n\tHi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ii=function(){};\n\tJi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;lh(ih.current);a=null;switch(c){case \"input\":f=Ab(g,f);d=Ab(g,d);a=[];break;case \"option\":f=Ib(g,f);d=Ib(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=Kb(g,f);d=Kb(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ae)}Yd(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if(\"style\"===\n\th)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]=\"\");else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ia.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if(\"style\"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]=\"\");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\n\tc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,\"\"+l)):\"children\"===h?g===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(ia.hasOwnProperty(h)?(null!=l&&$d(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push(\"style\",c);e=a;(b.updateQueue=e)&&Ci(b)}};Ki=function(a,b,c,d){c!==d&&Ci(b)};\n\tfunction Li(a,b){switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\n\tfunction Mi(a){switch(a.tag){case 1:L(a.type)&&Ff(a);var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:nh(a);Gf(a);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return ph(a),null;case 13:return G(M,a),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return G(M,a),null;case 4:return nh(a),null;case 10:return tg(a),null;default:return null}}function Ni(a,b){return{value:a,source:b,stack:Xa(b)}}\n\tvar Oi=\"function\"===typeof WeakSet?WeakSet:Set;function Pi(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=Xa(c));null!==c&&Wa(c.type);b=b.value;null!==a&&1===a.tag&&Wa(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Qi(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ri(a,c)}}function Si(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Ri(a,c)}else b.current=null}\n\tfunction Ti(a,b){switch(b.tag){case 0:case 11:case 15:Ui(2,0,b);break;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:mg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(u(163));}}\n\tfunction Ui(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if(0!==(d.tag&a)){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}0!==(d.tag&b)&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\n\tfunction Vi(a,b,c){\"function\"===typeof Wi&&Wi(b);switch(b.tag){case 0:case 11:case 14:case 15:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;fg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ri(g,h)}}a=a.next}while(a!==d)})}break;case 1:Si(b);c=b.stateNode;\"function\"===typeof c.componentWillUnmount&&Qi(b,c);break;case 5:Si(b);break;case 4:Xi(a,b,c)}}\n\tfunction Yi(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;null!==b&&Yi(b)}function Zi(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction $i(a){a:{for(var b=a.return;null!==b;){if(Zi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Tb(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Zi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\n\tif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){var f=5===e.tag||6===e.tag;if(f){var g=f?e.stateNode:e.stateNode.instance;if(c)if(d){f=b;var h=g;g=c;8===f.nodeType?f.parentNode.insertBefore(h,g):f.insertBefore(h,g)}else b.insertBefore(g,c);else d?(h=b,8===h.nodeType?(f=h.parentNode,f.insertBefore(g,h)):(f=h,f.appendChild(g)),h=h._reactRootContainer,null!==h&&void 0!==h||null!==f.onclick||(f.onclick=ae)):b.appendChild(g)}else if(4!==\n\te.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\n\tfunction Xi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Vi(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\n\tf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Vi(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\n\tfunction aj(a,b){switch(b.tag){case 0:case 11:case 14:case 15:Ui(4,8,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[ve]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cb(c,d);Zd(a,e);b=Zd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?Wd(c,h):\"dangerouslySetInnerHTML\"===g?Sb(c,h):\"children\"===g?Tb(c,h):vb(c,g,h,b)}switch(a){case \"input\":Eb(c,d);break;case \"textarea\":Mb(c,\n\td);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Jb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Jb(c,!!d.multiple,d.defaultValue,!0):Jb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;break;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Lc(b.containerInfo));break;case 12:break;case 13:c=b;null===b.memoizedState?d=!1:(d=!0,c=b.child,bj=cg());\n\tif(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null,f.style.display=Vd(\"display\",e));else if(6===a.tag)a.stateNode.nodeValue=d?\"\":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=f;continue}else if(null!==a.child){a.child.return=\n\ta;a=a.child;continue}if(a===c)break a;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}cj(b);break;case 19:cj(b);break;case 17:break;case 20:break;case 21:break;default:throw Error(u(163));}}function cj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Oi);b.forEach(function(b){var d=dj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}var ej=\"function\"===typeof WeakMap?WeakMap:Map;\n\tfunction fj(a,b,c){c=Bg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gj||(gj=!0,hj=d);Pi(a,b)};return c}\n\tfunction ij(a,b,c){c=Bg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Pi(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===jj?jj=new Set([this]):jj.add(this),Pi(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\n\tvar kj=Math.ceil,lj=Ea.ReactCurrentDispatcher,mj=Ea.ReactCurrentOwner,S=0,nj=8,oj=16,pj=32,qj=0,rj=1,sj=2,tj=3,uj=4,vj=5,T=S,U=null,V=null,W=0,X=qj,wj=null,xj=1073741823,yj=1073741823,zj=null,Aj=0,Bj=!1,bj=0,Cj=500,Y=null,gj=!1,hj=null,jj=null,Dj=!1,Ej=null,Fj=90,Gj=null,Hj=0,Ij=null,Jj=0;function Pg(){return(T&(oj|pj))!==S?1073741821-(cg()/10|0):0!==Jj?Jj:Jj=1073741821-(cg()/10|0)}\n\tfunction Qg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=dg();if(0===(b&4))return 99===d?1073741823:1073741822;if((T&oj)!==S)return W;if(null!==c)a=lg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=lg(a,150,100);break;case 97:case 96:a=lg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==U&&a===W&&--a;return a}\n\tfunction Rg(a,b){if(50<Hj)throw Hj=0,Ij=null,Error(u(185));a=Kj(a,b);if(null!==a){var c=dg();1073741823===b?(T&nj)!==S&&(T&(oj|pj))===S?Lj(a):(Z(a),T===S&&jg()):Z(a);(T&4)===S||98!==c&&99!==c||(null===Gj?Gj=new Map([[a,b]]):(c=Gj.get(a),(void 0===c||c>b)&&Gj.set(a,b)))}}\n\tfunction Kj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(U===e&&(Jg(b),X===uj&&Mj(e,W)),Nj(e,b));return e}\n\tfunction Oj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Pj(a,b))return b;b=a.lastPingedTime;a=a.nextKnownPendingLevel;return b>a?b:a}\n\tfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=hg(Lj.bind(null,a));else{var b=Oj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Pg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Xf&&Nf(c)}a.callbackExpirationTime=\n\tb;a.callbackPriority=d;b=1073741823===b?hg(Lj.bind(null,a)):gg(d,Qj.bind(null,a),{timeout:10*(1073741821-b)-cg()});a.callbackNode=b}}}\n\tfunction Qj(a,b){Jj=0;if(b)return b=Pg(),Rj(a,b),Z(a),null;var c=Oj(a);if(0!==c){b=a.callbackNode;if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&c===W||Tj(a,c);if(null!==V){var d=T;T|=oj;var e=Uj(a);do try{Vj();break}catch(h){Wj(a,h)}while(1);rg();T=d;lj.current=e;if(X===rj)throw b=wj,Tj(a,c),Mj(a,c),Z(a),b;if(null===V)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=X,U=null,d){case qj:case rj:throw Error(u(345));case sj:Rj(a,2<c?2:c);break;case tj:Mj(a,c);d=a.lastSuspendedTime;\n\tc===d&&(a.nextKnownPendingLevel=Xj(e));if(1073741823===xj&&(e=bj+Cj-cg(),10<e)){if(Bj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Tj(a,c);break}}f=Oj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=pe(Yj.bind(null,a),e);break}Yj(a);break;case uj:Mj(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Xj(e));if(Bj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Tj(a,c);break}e=Oj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\n\td;break}1073741823!==yj?d=10*(1073741821-yj)-cg():1073741823===xj?d=0:(d=10*(1073741821-xj)-5E3,e=cg(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*kj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=pe(Yj.bind(null,a),d);break}Yj(a);break;case vj:if(1073741823!==xj&&null!==zj){f=xj;var g=zj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=cg()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){Mj(a,c);a.timeoutHandle=\n\tpe(Yj.bind(null,a),d);break}}Yj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Qj.bind(null,a)}}return null}\n\tfunction Lj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if(a.finishedExpirationTime===b)Yj(a);else{if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&b===W||Tj(a,b);if(null!==V){var c=T;T|=oj;var d=Uj(a);do try{Zj();break}catch(e){Wj(a,e)}while(1);rg();T=c;lj.current=d;if(X===rj)throw c=wj,Tj(a,b),Mj(a,b),Z(a),c;if(null!==V)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;U=null;Yj(a);Z(a)}}return null}\n\tfunction ak(){if(null!==Gj){var a=Gj;Gj=null;a.forEach(function(a,c){Rj(c,a);Z(c)});jg()}}function bk(a,b){var c=T;T|=1;try{return a(b)}finally{T=c,T===S&&jg()}}function ck(a,b){var c=T;T&=-2;T|=nj;try{return a(b)}finally{T=c,T===S&&jg()}}\n\tfunction Tj(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,qe(c));if(null!==V)for(c=V.return;null!==c;){var d=c;switch(d.tag){case 1:var e=d.type.childContextTypes;null!==e&&void 0!==e&&Ff(d);break;case 3:nh(d);Gf(d);break;case 5:ph(d);break;case 4:nh(d);break;case 13:G(M,d);break;case 19:G(M,d);break;case 10:tg(d)}c=c.return}U=a;V=ah(a.current,null,b);W=b;X=qj;wj=null;yj=xj=1073741823;zj=null;Aj=0;Bj=!1}\n\tfunction Wj(a,b){do{try{rg();Mh();if(null===V||null===V.return)return X=rj,wj=b,null;a:{var c=a,d=V.return,e=V,f=b;b=W;e.effectTag|=2048;e.firstEffect=e.lastEffect=null;if(null!==f&&\"object\"===typeof f&&\"function\"===typeof f.then){var g=f,h=0!==(M.current&1),k=d;do{var l;if(l=13===k.tag){var m=k.memoizedState;if(null!==m)l=null!==m.dehydrated?!0:!1;else{var C=k.memoizedProps;l=void 0===C.fallback?!1:!0!==C.unstable_avoidThisFallback?!0:h?!1:!0}}if(l){var y=k.updateQueue;if(null===y){var H=new Set;\n\tH.add(g);k.updateQueue=H}else y.add(g);if(0===(k.mode&2)){k.effectTag|=64;e.effectTag&=-2981;if(1===e.tag)if(null===e.alternate)e.tag=17;else{var z=Bg(1073741823,null);z.tag=2;Dg(e,z)}e.expirationTime=1073741823;break a}f=void 0;e=b;var ta=c.pingCache;null===ta?(ta=c.pingCache=new ej,f=new Set,ta.set(g,f)):(f=ta.get(g),void 0===f&&(f=new Set,ta.set(g,f)));if(!f.has(e)){f.add(e);var r=dk.bind(null,c,g,e);g.then(r,r)}k.effectTag|=4096;k.expirationTime=b;break a}k=k.return}while(null!==k);f=Error((Wa(e.type)||\n\t\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+Xa(e))}X!==vj&&(X=sj);f=Ni(f,e);k=d;do{switch(k.tag){case 3:g=f;k.effectTag|=4096;k.expirationTime=b;var x=fj(k,g,b);Eg(k,x);break a;case 1:g=f;var A=k.type,p=k.stateNode;if(0===(k.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==p&&\"function\"===typeof p.componentDidCatch&&\n\t(null===jj||!jj.has(p)))){k.effectTag|=4096;k.expirationTime=b;var t=ij(k,g,b);Eg(k,t);break a}}k=k.return}while(null!==k)}V=ek(V)}catch(v){b=v;continue}break}while(1)}function Uj(){var a=lj.current;lj.current=Lh;return null===a?Lh:a}function Ig(a,b){a<xj&&2<a&&(xj=a);null!==b&&a<yj&&2<a&&(yj=a,zj=b)}function Jg(a){a>Aj&&(Aj=a)}function Zj(){for(;null!==V;)V=fk(V)}function Vj(){for(;null!==V&&!Of();)V=fk(V)}\n\tfunction fk(a){var b=gk(a.alternate,a,W);a.memoizedProps=a.pendingProps;null===b&&(b=ek(a));mj.current=null;return b}\n\tfunction ek(a){V=a;do{var b=V.alternate;a=V.return;if(0===(V.effectTag&2048)){a:{var c=b;b=V;var d=W;var e=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:L(b.type)&&Ff(b);break;case 3:nh(b);Gf(b);e=b.stateNode;e.pendingContext&&(e.context=e.pendingContext,e.pendingContext=null);(null===c||null===c.child)&&ki(b)&&Ci(b);Ii(b);break;case 5:ph(b);d=lh(kh.current);var f=b.type;if(null!==c&&null!=b.stateNode)Ji(c,b,f,e,d),c.ref!==b.ref&&(b.effectTag|=128);else if(e){var g=\n\tlh(ih.current);if(ki(b)){e=b;var h=e.stateNode;c=e.type;var k=e.memoizedProps,l=d;h[ue]=e;h[ve]=k;f=void 0;d=h;switch(c){case \"iframe\":case \"object\":case \"embed\":F(\"load\",d);break;case \"video\":case \"audio\":for(h=0;h<dc.length;h++)F(dc[h],d);break;case \"source\":F(\"error\",d);break;case \"img\":case \"image\":case \"link\":F(\"error\",d);F(\"load\",d);break;case \"form\":F(\"reset\",d);F(\"submit\",d);break;case \"details\":F(\"toggle\",d);break;case \"input\":Bb(d,k);F(\"invalid\",d);$d(l,\"onChange\");break;case \"select\":d._wrapperState=\n\t{wasMultiple:!!k.multiple};F(\"invalid\",d);$d(l,\"onChange\");break;case \"textarea\":Lb(d,k),F(\"invalid\",d),$d(l,\"onChange\")}Yd(c,k);h=null;for(f in k)k.hasOwnProperty(f)&&(g=k[f],\"children\"===f?\"string\"===typeof g?d.textContent!==g&&(h=[\"children\",g]):\"number\"===typeof g&&d.textContent!==\"\"+g&&(h=[\"children\",\"\"+g]):ia.hasOwnProperty(f)&&null!=g&&$d(l,f));switch(c){case \"input\":yb(d);Gb(d,k,!0);break;case \"textarea\":yb(d);Nb(d,k);break;case \"select\":case \"option\":break;default:\"function\"===typeof k.onClick&&\n\t(d.onclick=ae)}f=h;e.updateQueue=f;e=null!==f?!0:!1;e&&Ci(b)}else{c=b;l=f;k=e;h=9===d.nodeType?d:d.ownerDocument;g===Ob.html&&(g=Pb(l));g===Ob.html?\"script\"===l?(k=h.createElement(\"div\"),k.innerHTML=\"<script>\\x3c/script>\",h=k.removeChild(k.firstChild)):\"string\"===typeof k.is?h=h.createElement(l,{is:k.is}):(h=h.createElement(l),\"select\"===l&&(l=h,k.multiple?l.multiple=!0:k.size&&(l.size=k.size))):h=h.createElementNS(g,l);k=h;k[ue]=c;k[ve]=e;Hi(k,b,!1,!1);b.stateNode=k;l=f;c=e;var m=d,C=Zd(l,c);switch(l){case \"iframe\":case \"object\":case \"embed\":F(\"load\",\n\tk);d=c;break;case \"video\":case \"audio\":for(d=0;d<dc.length;d++)F(dc[d],k);d=c;break;case \"source\":F(\"error\",k);d=c;break;case \"img\":case \"image\":case \"link\":F(\"error\",k);F(\"load\",k);d=c;break;case \"form\":F(\"reset\",k);F(\"submit\",k);d=c;break;case \"details\":F(\"toggle\",k);d=c;break;case \"input\":Bb(k,c);d=Ab(k,c);F(\"invalid\",k);$d(m,\"onChange\");break;case \"option\":d=Ib(k,c);break;case \"select\":k._wrapperState={wasMultiple:!!c.multiple};d=n({},c,{value:void 0});F(\"invalid\",k);$d(m,\"onChange\");break;case \"textarea\":Lb(k,\n\tc);d=Kb(k,c);F(\"invalid\",k);$d(m,\"onChange\");break;default:d=c}Yd(l,d);h=void 0;g=l;var y=k,H=d;for(h in H)if(H.hasOwnProperty(h)){var z=H[h];\"style\"===h?Wd(y,z):\"dangerouslySetInnerHTML\"===h?(z=z?z.__html:void 0,null!=z&&Sb(y,z)):\"children\"===h?\"string\"===typeof z?(\"textarea\"!==g||\"\"!==z)&&Tb(y,z):\"number\"===typeof z&&Tb(y,\"\"+z):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ia.hasOwnProperty(h)?null!=z&&$d(m,h):null!=z&&vb(y,h,z,C))}switch(l){case \"input\":yb(k);\n\tGb(k,c,!1);break;case \"textarea\":yb(k);Nb(k,c);break;case \"option\":null!=c.value&&k.setAttribute(\"value\",\"\"+ub(c.value));break;case \"select\":d=k;d.multiple=!!c.multiple;k=c.value;null!=k?Jb(d,!!c.multiple,k,!1):null!=c.defaultValue&&Jb(d,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof d.onClick&&(k.onclick=ae)}(e=ne(f,e))&&Ci(b)}null!==b.ref&&(b.effectTag|=128)}else if(null===b.stateNode)throw Error(u(166));break;case 6:if(c&&null!=b.stateNode)Ki(c,b,c.memoizedProps,e);else{if(\"string\"!==\n\ttypeof e&&null===b.stateNode)throw Error(u(166));d=lh(kh.current);lh(ih.current);ki(b)?(e=b,f=e.stateNode,d=e.memoizedProps,f[ue]=e,(e=f.nodeValue!==d)&&Ci(b)):(f=b,e=(9===d.nodeType?d:d.ownerDocument).createTextNode(e),e[ue]=f,b.stateNode=e)}break;case 11:break;case 13:G(M,b);e=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=d;break a}e=null!==e;f=!1;null===c?void 0!==b.memoizedProps.fallback&&ki(b):(d=c.memoizedState,f=null!==d,e||null===d||(d=c.child.sibling,null!==d&&(k=b.firstEffect,\n\tnull!==k?(b.firstEffect=d,d.nextEffect=k):(b.firstEffect=b.lastEffect=d,d.nextEffect=null),d.effectTag=8)));if(e&&!f&&0!==(b.mode&2))if(null===c&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))X===qj&&(X=tj);else{if(X===qj||X===tj)X=uj;0!==Aj&&null!==U&&(Mj(U,W),Nj(U,Aj))}if(e||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:nh(b);Ii(b);break;case 10:tg(b);break;case 9:break;case 14:break;case 17:L(b.type)&&Ff(b);break;case 19:G(M,b);e=b.memoizedState;if(null===\n\te)break;f=0!==(b.effectTag&64);k=e.rendering;if(null===k)if(f)Li(e,!1);else{if(X!==qj||null!==c&&0!==(c.effectTag&64))for(c=b.child;null!==c;){k=qh(c);if(null!==k){b.effectTag|=64;Li(e,!1);f=k.updateQueue;null!==f&&(b.updateQueue=f,b.effectTag|=4);null===e.lastEffect&&(b.firstEffect=null);b.lastEffect=e.lastEffect;e=d;for(f=b.child;null!==f;)d=f,c=e,d.effectTag&=2,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null,k=d.alternate,null===k?(d.childExpirationTime=0,d.expirationTime=c,d.child=null,\n\td.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null):(d.childExpirationTime=k.childExpirationTime,d.expirationTime=k.expirationTime,d.child=k.child,d.memoizedProps=k.memoizedProps,d.memoizedState=k.memoizedState,d.updateQueue=k.updateQueue,c=k.dependencies,d.dependencies=null===c?null:{expirationTime:c.expirationTime,firstContext:c.firstContext,responders:c.responders}),f=f.sibling;I(M,M.current&1|2,b);b=b.child;break a}c=c.sibling}}else{if(!f)if(c=qh(k),null!==c){if(b.effectTag|=\n\t64,f=!0,d=c.updateQueue,null!==d&&(b.updateQueue=d,b.effectTag|=4),Li(e,!0),null===e.tail&&\"hidden\"===e.tailMode){b=b.lastEffect=e.lastEffect;null!==b&&(b.nextEffect=null);break}}else cg()>e.tailExpiration&&1<d&&(b.effectTag|=64,f=!0,Li(e,!1),b.expirationTime=b.childExpirationTime=d-1);e.isBackwards?(k.sibling=b.child,b.child=k):(d=e.last,null!==d?d.sibling=k:b.child=k,e.last=k)}if(null!==e.tail){0===e.tailExpiration&&(e.tailExpiration=cg()+500);d=e.tail;e.rendering=d;e.tail=d.sibling;e.lastEffect=\n\tb.lastEffect;d.sibling=null;e=M.current;e=f?e&1|2:e&1;I(M,e,b);b=d;break a}break;case 20:break;case 21:break;default:throw Error(u(156,b.tag));}b=null}e=V;if(1===W||1!==e.childExpirationTime){f=0;for(d=e.child;null!==d;)c=d.expirationTime,k=d.childExpirationTime,c>f&&(f=c),k>f&&(f=k),d=d.sibling;e.childExpirationTime=f}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=V.firstEffect),null!==V.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=V.firstEffect),\n\ta.lastEffect=V.lastEffect),1<V.effectTag&&(null!==a.lastEffect?a.lastEffect.nextEffect=V:a.firstEffect=V,a.lastEffect=V))}else{b=Mi(V,W);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=V.sibling;if(null!==b)return b;V=a}while(null!==V);X===qj&&(X=vj);return null}function Xj(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Yj(a){var b=dg();fg(99,ik.bind(null,a,b));return null}\n\tfunction ik(a,b){Sj();if((T&(oj|pj))!==S)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Xj(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=d-1);d<=a.lastPingedTime&&\n\t(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===U&&(V=U=null,W=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=T;T|=pj;mj.current=null;le=Ld;var g=fe();if(ge(g)){if(\"selectionStart\"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,m=k.focusNode;k=k.focusOffset;\n\ttry{h.nodeType,m.nodeType}catch(Db){h=null;break a}var C=0,y=-1,H=-1,z=0,ta=0,r=g,x=null;b:for(;;){for(var A;;){r!==h||0!==l&&3!==r.nodeType||(y=C+l);r!==m||0!==k&&3!==r.nodeType||(H=C+k);3===r.nodeType&&(C+=r.nodeValue.length);if(null===(A=r.firstChild))break;x=r;r=A}for(;;){if(r===g)break b;x===h&&++z===l&&(y=C);x===m&&++ta===k&&(H=C);if(null!==(A=r.nextSibling))break;r=x;x=r.parentNode}r=A}h=-1===y||-1===H?null:{start:y,end:H}}else h=null}h=h||{start:0,end:0}}else h=null;me={focusedElem:g,selectionRange:h};\n\tLd=!1;Y=e;do try{jk()}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var p=Y.effectTag;p&16&&Tb(Y.stateNode,\"\");if(p&128){var t=Y.alternate;if(null!==t){var v=t.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(p&1038){case 2:$i(Y);Y.effectTag&=-3;break;case 6:$i(Y);Y.effectTag&=-3;aj(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=-1025;aj(Y.alternate,Y);break;case 4:aj(Y.alternate,\n\tY);break;case 8:l=Y,Xi(g,l,h),Yi(l)}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);v=me;t=fe();p=v.focusedElem;h=v.selectionRange;if(t!==p&&p&&p.ownerDocument&&ee(p.ownerDocument.documentElement,p)){null!==h&&ge(p)&&(t=h.start,v=h.end,void 0===v&&(v=t),\"selectionStart\"in p?(p.selectionStart=t,p.selectionEnd=Math.min(v,p.value.length)):(v=(t=p.ownerDocument||document)&&t.defaultView||window,v.getSelection&&(v=v.getSelection(),l=p.textContent.length,\n\tg=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!v.extend&&g>h&&(l=h,h=g,g=l),l=de(p,g),m=de(p,h),l&&m&&(1!==v.rangeCount||v.anchorNode!==l.node||v.anchorOffset!==l.offset||v.focusNode!==m.node||v.focusOffset!==m.offset)&&(t=t.createRange(),t.setStart(l.node,l.offset),v.removeAllRanges(),g>h?(v.addRange(t),v.extend(m.node,m.offset)):(t.setEnd(m.node,m.offset),v.addRange(t))))));t=[];for(v=p;v=v.parentNode;)1===v.nodeType&&t.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===\n\ttypeof p.focus&&p.focus();for(p=0;p<t.length;p++)v=t[p],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}me=null;Ld=!!le;le=null;a.current=c;Y=e;do try{for(p=d;null!==Y;){var Dh=Y.effectTag;if(Dh&36){var cc=Y.alternate;t=Y;v=p;switch(t.tag){case 0:case 11:case 15:Ui(16,32,t);break;case 1:var dd=t.stateNode;if(t.effectTag&4)if(null===cc)dd.componentDidMount();else{var hk=t.elementType===t.type?cc.memoizedProps:mg(t.type,cc.memoizedProps);dd.componentDidUpdate(hk,cc.memoizedState,dd.__reactInternalSnapshotBeforeUpdate)}var Eh=\n\tt.updateQueue;null!==Eh&&Kg(t,Eh,dd,v);break;case 3:var Fh=t.updateQueue;if(null!==Fh){g=null;if(null!==t.child)switch(t.child.tag){case 5:g=t.child.stateNode;break;case 1:g=t.child.stateNode}Kg(t,Fh,g,v)}break;case 5:var xk=t.stateNode;null===cc&&t.effectTag&4&&ne(t.type,t.memoizedProps)&&xk.focus();break;case 6:break;case 4:break;case 12:break;case 13:if(null===t.memoizedState){var Di=t.alternate;if(null!==Di){var Ei=Di.memoizedState;if(null!==Ei){var Fi=Ei.dehydrated;null!==Fi&&Lc(Fi)}}}break;\n\tcase 19:case 17:case 20:case 21:break;default:throw Error(u(163));}}if(Dh&128){t=void 0;var wd=Y.ref;if(null!==wd){var Gi=Y.stateNode;switch(Y.tag){case 5:t=Gi;break;default:t=Gi}\"function\"===typeof wd?wd(t):wd.current=t}}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=null;Yf();T=f}else a.current=c;if(Dj)Dj=!1,Ej=a,Fj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(jj=null);1073741823===b?a===Ij?Hj++:(Hj=\n\t0,Ij=a):Hj=0;\"function\"===typeof kk&&kk(c.stateNode,d);Z(a);if(gj)throw gj=!1,a=hj,hj=null,a;if((T&nj)!==S)return null;jg();return null}function jk(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Ti(Y.alternate,Y);0===(a&512)||Dj||(Dj=!0,gg(97,function(){Sj();return null}));Y=Y.nextEffect}}function Sj(){if(90!==Fj){var a=97<Fj?97:Fj;Fj=90;return fg(a,lk)}}\n\tfunction lk(){if(null===Ej)return!1;var a=Ej;Ej=null;if((T&(oj|pj))!==S)throw Error(u(331));var b=T;T|=pj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:Ui(128,0,c),Ui(0,64,c)}}catch(d){if(null===a)throw Error(u(330));Ri(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}T=b;jg();return!0}function mk(a,b,c){b=Ni(c,b);b=fj(a,b,1073741823);Dg(a,b);a=Kj(a,1073741823);null!==a&&Z(a)}\n\tfunction Ri(a,b){if(3===a.tag)mk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){mk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===jj||!jj.has(d))){a=Ni(b,a);a=ij(c,a,1073741823);Dg(c,a);c=Kj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\n\tfunction dk(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);U===a&&W===c?X===uj||X===tj&&1073741823===xj&&cg()-bj<Cj?Tj(a,W):Bj=!0:Pj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,a.finishedExpirationTime===c&&(a.finishedExpirationTime=0,a.finishedWork=null),Z(a)))}function dj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Pg(),b=Qg(b,a,null));a=Kj(a,b);null!==a&&Z(a)}var gk;\n\tgk=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)wg=!0;else{if(d<c){wg=!1;switch(b.tag){case 3:wi(b);li();break;case 5:oh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Jf(b);break;case 4:mh(b,b.stateNode.containerInfo);break;case 10:sg(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return yi(a,b,c);I(M,M.current&\n\t1,b);b=oi(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1,b);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return Bi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current,b);if(!d)return null}return oi(a,b,c)}wg=!1}}else wg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Ef(b,J.current);vg(b,c);e=Ih(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===\n\ttypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;Mh();if(L(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Og(b,d,g,a);e.updater=Sg;b.stateNode=e;e._reactInternalFiber=b;Wg(b,d,a,c);b=vi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;Va(e);if(1!==e._status)throw e._result;\n\te=e._result;b.type=e;f=b.tag=nk(e);a=mg(e,a);switch(f){case 0:b=si(null,b,e,a,c);break;case 1:b=ui(null,b,e,a,c);break;case 11:b=ni(null,b,e,a,c);break;case 14:b=pi(null,b,e,mg(e.type,a),d,c);break;default:throw Error(u(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),si(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ui(a,b,d,e,c);case 3:wi(b);d=b.updateQueue;if(null===d)throw Error(u(282));e=b.memoizedState;e=null!==e?e.element:\n\tnull;Hg(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)li(),b=oi(a,b,c);else{if(e=b.stateNode.hydrate)di=re(b.stateNode.containerInfo.firstChild),ci=b,e=ei=!0;if(e)for(c=gh(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),li();b=b.child}return b;case 5:return oh(b),null===a&&ii(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,oe(d,e)?g=null:null!==f&&oe(d,f)&&(b.effectTag|=16),ti(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=\n\tb.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&ii(b),null;case 13:return yi(a,b,c);case 4:return mh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=fh(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ni(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;\n\te=b.pendingProps;g=b.memoizedProps;f=e.value;sg(b,f);if(null!==g){var h=g.value;f=of(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!K.current){b=oi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=Bg(c,null),l.tag=2,Dg(h,l));h.expirationTime<c&&(h.expirationTime=\n\tc);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);ug(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,vg(b,c),e=xg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;\n\tcase 14:return e=b.type,f=mg(e,b.pendingProps),f=mg(e.type,f),pi(a,b,e,f,d,c);case 15:return ri(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Jf(b)):a=!1,vg(b,c),Ug(b,d,e,c),Wg(b,d,e,c),vi(null,b,d,!0,a,c);case 19:return Bi(a,b,c)}throw Error(u(156,b.tag));};var kk=null,Wi=null;\n\tfunction ok(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);kk=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Wi=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\n\tfunction pk(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function gi(a,b,c,d){return new pk(a,b,c,d)}\n\tfunction qi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function nk(a){if(\"function\"===typeof a)return qi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Oa)return 11;if(a===Ra)return 14}return 2}\n\tfunction ah(a,b){var c=a.alternate;null===c?(c=gi(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\n\tfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\n\tfunction ch(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)qi(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Ia:return eh(c.children,e,f,b);case Na:g=8;e|=7;break;case Ja:g=8;e|=1;break;case Ka:return a=gi(12,c,b,e|8),a.elementType=Ka,a.type=Ka,a.expirationTime=f,a;case Pa:return a=gi(13,c,b,e),a.type=Pa,a.elementType=Pa,a.expirationTime=f,a;case Qa:return a=gi(19,c,b,e),a.elementType=Qa,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case La:g=\n\t10;break a;case Ma:g=9;break a;case Oa:g=11;break a;case Ra:g=14;break a;case Sa:g=16;d=null;break a}throw Error(u(130,null==a?a:typeof a,\"\"));}b=gi(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function eh(a,b,c,d){a=gi(7,a,d,b);a.expirationTime=c;return a}function bh(a,b,c){a=gi(6,a,null,b);a.expirationTime=c;return a}\n\tfunction dh(a,b,c){b=gi(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\n\tfunction qk(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\n\tfunction Pj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function Mj(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\n\tfunction Nj(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Rj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\n\tfunction rk(a,b,c,d){var e=b.current,f=Pg(),g=Mg.suspense;f=Qg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(ec(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=Bg(f,g);b.payload={element:a};d=void 0===\n\td?null:d;null!==d&&(b.callback=d);Dg(e,b);Rg(e,f);return f}function sk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function tk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function uk(a,b){tk(a,b);(a=a.alternate)&&tk(a,b)}\n\tfunction vk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ha,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}jc=function(a){if(13===a.tag){var b=lg(Pg(),150,100);Rg(a,b);uk(a,b)}};kc=function(a){if(13===a.tag){Pg();var b=kg++;Rg(a,b);uk(a,b)}};lc=function(a){if(13===a.tag){var b=Pg();b=Qg(b,a,null);Rg(a,b);uk(a,b)}};\n\tZa=function(a,b,c){switch(b){case \"input\":Eb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=ye(d);if(!e)throw Error(u(90));zb(d);Eb(d,e)}}}break;case \"textarea\":Mb(a,c);break;case \"select\":b=c.value,null!=b&&Jb(a,!!c.multiple,b,!1)}};\n\tfunction wk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new qk(a,b,c),e=gi(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;a[we]=d.current;c&&0!==b&&wc(9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}wk.prototype.render=function(a,b){var c=this._internalRoot;rk(a,c,null,void 0===b?null:b)};wk.prototype.unmount=function(a){var b=this._internalRoot;rk(null,b,null,void 0===a?null:a)};\n\tfunction yk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}eb=bk;fb=function(a,b,c,d){var e=T;T|=4;try{return fg(98,a.bind(null,b,c,d))}finally{T=e,T===S&&jg()}};gb=function(){(T&(1|oj|pj))===S&&(ak(),Sj())};hb=function(a,b){var c=T;T|=2;try{return a(b)}finally{T=c,T===S&&jg()}};\n\tfunction zk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new wk(a,0,b?{hydrate:!0}:void 0)}\n\tfunction Ak(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=sk(g);h.call(a)}}rk(b,g,a,e)}else{f=c._reactRootContainer=zk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=sk(g);k.call(a)}}ck(function(){rk(b,g,a,e)})}return sk(g)}function Bk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!yk(b))throw Error(u(200));return vk(a,b,null,c)}\n\tvar Ck={createPortal:Bk,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if(\"function\"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=ic(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){if(!yk(b))throw Error(u(200));return Ak(null,a,b,!0,c)},render:function(a,b,c){if(!yk(b))throw Error(u(200));return Ak(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){if(!yk(c))throw Error(u(200));\n\tif(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return Ak(a,b,c,!1,d)},unmountComponentAtNode:function(a){if(!yk(a))throw Error(u(40));return a._reactRootContainer?(ck(function(){Ak(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Bk.apply(void 0,arguments)},unstable_batchedUpdates:bk,flushSync:function(a,b){if((T&(oj|pj))!==S)throw Error(u(187));var c=T;T|=1;try{return fg(99,a.bind(null,b))}finally{T=c,jg()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Cc,\n\txe,ye,Ca.injectEventPluginsByName,fa,Sc,function(a){ya(a,Rc)},cb,db,Pd,Ba,Sj,{current:!1}]}};\n\t(function(a){var b=a.findFiberByHostInstance;return ok(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ea.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=ic(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:Fc,bundleType:0,version:\"16.11.0\",\n\trendererPackageName:\"react-dom\"});var Dk={default:Ck},Ek=Dk&&Ck||Dk;module.exports=Ek.default||Ek;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(65);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.11.0\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var h=__webpack_require__(18),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113;n&&Symbol.for(\"react.suspense_list\");\n\tvar z=n?Symbol.for(\"react.memo\"):60115,aa=n?Symbol.for(\"react.lazy\"):60116;n&&Symbol.for(\"react.fundamental\");n&&Symbol.for(\"react.responder\");n&&Symbol.for(\"react.scope\");var A=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction B(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\n\tfunction E(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(B(85));this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}var H=G.prototype=new F;\n\tH.constructor=G;h(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction M(a,b,c){var e,d={},g=null,l=null;if(null!=b)for(e in void 0!==b.ref&&(l=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var k=Array(f),m=0;m<f;m++)k[m]=arguments[m+2];d.children=k}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:l,props:d,_owner:J.current}}\n\tfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,c,e){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\n\tfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\n\tfunction S(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var l=0;l<a.length;l++){d=a[l];var f=b+T(d,l);g+=S(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),l=\n\t0;!(d=a.next()).done;)d=d.value,f=b+T(d,l++),g+=S(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(B(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function U(a,b,c){return null==a?0:S(a,\"\",b,c)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction da(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,e,c,function(a){return a}):null!=a&&(N(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+c)),e.push(a))}function V(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(O,\"$&/\")+\"/\");b=Q(b,g,e,d);U(a,da,b);R(b)}function W(){var a=I.current;if(null===a)throw Error(B(321));return a}\n\tvar X={Children:{map:function(a,b,c){if(null==a)return a;var e=[];V(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=Q(null,null,b,c);U(a,ca,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){if(!N(a))throw Error(B(143));return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n\t_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:x,render:a}},lazy:function(a){return{$$typeof:aa,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\n\tb,c){return W().useImperativeHandle(a,b,c)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,c){return W().useReducer(a,b,c)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,Profiler:u,StrictMode:t,Suspense:y,createElement:M,cloneElement:function(a,b,c){if(null===a||void 0===a)throw Error(B(267,a));var e=h({},a.props),d=a.key,g=a.ref,l=a._owner;\n\tif(null!=b){void 0!==b.ref&&(g=b.ref,l=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(k in b)K.call(b,k)&&!L.hasOwnProperty(k)&&(e[k]=void 0===b[k]&&void 0!==f?f[k]:b[k])}var k=arguments.length-2;if(1===k)e.children=c;else if(1<k){f=Array(k);for(var m=0;m<k;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,key:d,ref:g,props:e,_owner:l}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.11.0\",\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:h}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n\t/** @license React v0.17.0\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var f,g,h,k,l;\n\tif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\n\ty=window.setTimeout,z=window.clearTimeout,A=window.requestAnimationFrame,B=window.cancelAnimationFrame;\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));if(\"object\"===typeof w&&\n\t\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var C=x.now();exports.unstable_now=function(){return x.now()-C}}var D=!1,E=null,F=-1,G=5,H=0;k=function(){return exports.unstable_now()>=H};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):G=0<a?Math.floor(1E3/a):33.33};var I=new MessageChannel,J=I.port2;I.port1.onmessage=\n\tfunction(){if(null!==E){var a=exports.unstable_now();H=a+G;try{E(!0,a)?J.postMessage(null):(D=!1,E=null)}catch(b){throw J.postMessage(null),b;}}else D=!1};f=function(a){E=a;D||(D=!0,J.postMessage(null))};g=function(a,b){F=y(function(){a(exports.unstable_now())},b)};h=function(){z(F);F=-1}}function K(a,b){var c=a.length;a.push(b);a:for(;;){var d=Math.floor((c-1)/2),e=a[d];if(void 0!==e&&0<L(e,b))a[d]=b,a[c]=e,c=d;else break a}}function M(a){a=a[0];return void 0===a?null:a}\n\tfunction N(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>L(n,c))void 0!==r&&0>L(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>L(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function L(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var O=[],P=[],Q=1,R=null,S=3,T=!1,U=!1,V=!1;\n\tfunction W(a){for(var b=M(P);null!==b;){if(null===b.callback)N(P);else if(b.startTime<=a)N(P),b.sortIndex=b.expirationTime,K(O,b);else break;b=M(P)}}function X(a){V=!1;W(a);if(!U)if(null!==M(O))U=!0,f(Y);else{var b=M(P);null!==b&&g(X,b.startTime-a)}}\n\tfunction Y(a,b){U=!1;V&&(V=!1,h());T=!0;var c=S;try{W(b);for(R=M(O);null!==R&&(!(R.expirationTime>b)||a&&!k());){var d=R.callback;if(null!==d){R.callback=null;S=R.priorityLevel;var e=d(R.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?R.callback=e:R===M(O)&&N(O);W(b)}else N(O);R=M(O)}if(null!==R)var m=!0;else{var n=M(P);null!==n&&g(X,n.startTime-b);m=!1}return m}finally{R=null,S=c,T=!1}}\n\tfunction Z(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var aa=l;exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=S;S=a;try{return b()}finally{S=c}};\n\texports.unstable_next=function(a){switch(S){case 1:case 2:case 3:var b=3;break;default:b=S}var c=S;S=b;try{return a()}finally{S=c}};\n\texports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Z(a)}else c=Z(a),e=d;c=e+c;a={id:Q++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,K(P,a),null===M(O)&&a===M(P)&&(V?h():V=!0,g(X,e-d))):(a.sortIndex=c,K(O,a),U||T||(U=!0,f(Y)));return a};exports.unstable_cancelCallback=function(a){a.callback=null};\n\texports.unstable_wrapCallback=function(a){var b=S;return function(){var c=S;S=b;try{return a.apply(this,arguments)}finally{S=c}}};exports.unstable_getCurrentPriorityLevel=function(){return S};exports.unstable_shouldYield=function(){var a=exports.unstable_now();W(a);var b=M(O);return b!==R&&null!==R&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<R.expirationTime||k()};exports.unstable_requestPaint=aa;exports.unstable_continueExecution=function(){U||T||(U=!0,f(Y))};\n\texports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return M(O)};exports.unstable_Profiling=null;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(68);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(54);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../css-loader/index.js!../../postcss-loader/index.js!./font-awesome.min.css\", function() {\n\t\t\t\tvar newContent = require(\"!!../../css-loader/index.js!../../postcss-loader/index.js!./font-awesome.min.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(55);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../css-loader/index.js!../postcss-loader/index.js!./normalize.css\", function() {\n\t\t\t\tvar newContent = require(\"!!../css-loader/index.js!../postcss-loader/index.js!./normalize.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(56);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./About.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./About.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(57);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./App.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./App.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(58);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Articles.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Articles.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(59);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Footer.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Footer.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(60);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Work.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Work.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(61);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Works.scss\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Works.scss\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.THREE = global.THREE || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t\t// Polyfills\n\t\n\t\tif ( Number.EPSILON === undefined ) {\n\t\n\t\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\t\n\t\t}\n\t\n\t\tif ( Number.isInteger === undefined ) {\n\t\n\t\t\t// Missing in IE\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\t\n\t\t\tNumber.isInteger = function ( value ) {\n\t\n\t\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tif ( Math.sign === undefined ) {\n\t\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\t\n\t\t\tMath.sign = function ( x ) {\n\t\n\t\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tif ( Function.prototype.name === undefined ) {\n\t\n\t\t\t// Missing in IE\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\t\n\t\t\tObject.defineProperty( Function.prototype, 'name', {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t}\n\t\n\t\tif ( Object.assign === undefined ) {\n\t\n\t\t\t// Missing in IE\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t\n\t\t\t( function () {\n\t\n\t\t\t\tObject.assign = function ( target ) {\n\t\n\t\t\t\t\t'use strict';\n\t\n\t\t\t\t\tif ( target === undefined || target === null ) {\n\t\n\t\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar output = Object( target );\n\t\n\t\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\t\n\t\t\t\t\t\tvar source = arguments[ index ];\n\t\n\t\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\t\n\t\t\t\t\t\t\tfor ( var nextKey in source ) {\n\t\n\t\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\t\n\t\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn output;\n\t\n\t\t\t\t};\n\t\n\t\t\t} )();\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * https://github.com/mrdoob/eventdispatcher.js/\n\t\t */\n\t\n\t\tfunction EventDispatcher() {}\n\t\n\t\tObject.assign( EventDispatcher.prototype, {\n\t\n\t\t\taddEventListener: function ( type, listener ) {\n\t\n\t\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\t\n\t\t\t\tvar listeners = this._listeners;\n\t\n\t\t\t\tif ( listeners[ type ] === undefined ) {\n\t\n\t\t\t\t\tlisteners[ type ] = [];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\t\n\t\t\t\t\tlisteners[ type ].push( listener );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\thasEventListener: function ( type, listener ) {\n\t\n\t\t\t\tif ( this._listeners === undefined ) return false;\n\t\n\t\t\t\tvar listeners = this._listeners;\n\t\n\t\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\t\n\t\t\t},\n\t\n\t\t\tremoveEventListener: function ( type, listener ) {\n\t\n\t\t\t\tif ( this._listeners === undefined ) return;\n\t\n\t\t\t\tvar listeners = this._listeners;\n\t\t\t\tvar listenerArray = listeners[ type ];\n\t\n\t\t\t\tif ( listenerArray !== undefined ) {\n\t\n\t\t\t\t\tvar index = listenerArray.indexOf( listener );\n\t\n\t\t\t\t\tif ( index !== - 1 ) {\n\t\n\t\t\t\t\t\tlistenerArray.splice( index, 1 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdispatchEvent: function ( event ) {\n\t\n\t\t\t\tif ( this._listeners === undefined ) return;\n\t\n\t\t\t\tvar listeners = this._listeners;\n\t\t\t\tvar listenerArray = listeners[ event.type ];\n\t\n\t\t\t\tif ( listenerArray !== undefined ) {\n\t\n\t\t\t\t\tevent.target = this;\n\t\n\t\t\t\t\tvar array = listenerArray.slice( 0 );\n\t\n\t\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tarray[ i ].call( this, event );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tvar REVISION = '87';\n\t\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\tvar CullFaceNone = 0;\n\t\tvar CullFaceBack = 1;\n\t\tvar CullFaceFront = 2;\n\t\tvar CullFaceFrontBack = 3;\n\t\tvar FrontFaceDirectionCW = 0;\n\t\tvar FrontFaceDirectionCCW = 1;\n\t\tvar BasicShadowMap = 0;\n\t\tvar PCFShadowMap = 1;\n\t\tvar PCFSoftShadowMap = 2;\n\t\tvar FrontSide = 0;\n\t\tvar BackSide = 1;\n\t\tvar DoubleSide = 2;\n\t\tvar FlatShading = 1;\n\t\tvar SmoothShading = 2;\n\t\tvar NoColors = 0;\n\t\tvar FaceColors = 1;\n\t\tvar VertexColors = 2;\n\t\tvar NoBlending = 0;\n\t\tvar NormalBlending = 1;\n\t\tvar AdditiveBlending = 2;\n\t\tvar SubtractiveBlending = 3;\n\t\tvar MultiplyBlending = 4;\n\t\tvar CustomBlending = 5;\n\t\tvar AddEquation = 100;\n\t\tvar SubtractEquation = 101;\n\t\tvar ReverseSubtractEquation = 102;\n\t\tvar MinEquation = 103;\n\t\tvar MaxEquation = 104;\n\t\tvar ZeroFactor = 200;\n\t\tvar OneFactor = 201;\n\t\tvar SrcColorFactor = 202;\n\t\tvar OneMinusSrcColorFactor = 203;\n\t\tvar SrcAlphaFactor = 204;\n\t\tvar OneMinusSrcAlphaFactor = 205;\n\t\tvar DstAlphaFactor = 206;\n\t\tvar OneMinusDstAlphaFactor = 207;\n\t\tvar DstColorFactor = 208;\n\t\tvar OneMinusDstColorFactor = 209;\n\t\tvar SrcAlphaSaturateFactor = 210;\n\t\tvar NeverDepth = 0;\n\t\tvar AlwaysDepth = 1;\n\t\tvar LessDepth = 2;\n\t\tvar LessEqualDepth = 3;\n\t\tvar EqualDepth = 4;\n\t\tvar GreaterEqualDepth = 5;\n\t\tvar GreaterDepth = 6;\n\t\tvar NotEqualDepth = 7;\n\t\tvar MultiplyOperation = 0;\n\t\tvar MixOperation = 1;\n\t\tvar AddOperation = 2;\n\t\tvar NoToneMapping = 0;\n\t\tvar LinearToneMapping = 1;\n\t\tvar ReinhardToneMapping = 2;\n\t\tvar Uncharted2ToneMapping = 3;\n\t\tvar CineonToneMapping = 4;\n\t\tvar UVMapping = 300;\n\t\tvar CubeReflectionMapping = 301;\n\t\tvar CubeRefractionMapping = 302;\n\t\tvar EquirectangularReflectionMapping = 303;\n\t\tvar EquirectangularRefractionMapping = 304;\n\t\tvar SphericalReflectionMapping = 305;\n\t\tvar CubeUVReflectionMapping = 306;\n\t\tvar CubeUVRefractionMapping = 307;\n\t\tvar RepeatWrapping = 1000;\n\t\tvar ClampToEdgeWrapping = 1001;\n\t\tvar MirroredRepeatWrapping = 1002;\n\t\tvar NearestFilter = 1003;\n\t\tvar NearestMipMapNearestFilter = 1004;\n\t\tvar NearestMipMapLinearFilter = 1005;\n\t\tvar LinearFilter = 1006;\n\t\tvar LinearMipMapNearestFilter = 1007;\n\t\tvar LinearMipMapLinearFilter = 1008;\n\t\tvar UnsignedByteType = 1009;\n\t\tvar ByteType = 1010;\n\t\tvar ShortType = 1011;\n\t\tvar UnsignedShortType = 1012;\n\t\tvar IntType = 1013;\n\t\tvar UnsignedIntType = 1014;\n\t\tvar FloatType = 1015;\n\t\tvar HalfFloatType = 1016;\n\t\tvar UnsignedShort4444Type = 1017;\n\t\tvar UnsignedShort5551Type = 1018;\n\t\tvar UnsignedShort565Type = 1019;\n\t\tvar UnsignedInt248Type = 1020;\n\t\tvar AlphaFormat = 1021;\n\t\tvar RGBFormat = 1022;\n\t\tvar RGBAFormat = 1023;\n\t\tvar LuminanceFormat = 1024;\n\t\tvar LuminanceAlphaFormat = 1025;\n\t\tvar RGBEFormat = RGBAFormat;\n\t\tvar DepthFormat = 1026;\n\t\tvar DepthStencilFormat = 1027;\n\t\tvar RGB_S3TC_DXT1_Format = 2001;\n\t\tvar RGBA_S3TC_DXT1_Format = 2002;\n\t\tvar RGBA_S3TC_DXT3_Format = 2003;\n\t\tvar RGBA_S3TC_DXT5_Format = 2004;\n\t\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\t\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\t\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\t\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\t\tvar RGB_ETC1_Format = 2151;\n\t\tvar LoopOnce = 2200;\n\t\tvar LoopRepeat = 2201;\n\t\tvar LoopPingPong = 2202;\n\t\tvar InterpolateDiscrete = 2300;\n\t\tvar InterpolateLinear = 2301;\n\t\tvar InterpolateSmooth = 2302;\n\t\tvar ZeroCurvatureEnding = 2400;\n\t\tvar ZeroSlopeEnding = 2401;\n\t\tvar WrapAroundEnding = 2402;\n\t\tvar TrianglesDrawMode = 0;\n\t\tvar TriangleStripDrawMode = 1;\n\t\tvar TriangleFanDrawMode = 2;\n\t\tvar LinearEncoding = 3000;\n\t\tvar sRGBEncoding = 3001;\n\t\tvar GammaEncoding = 3007;\n\t\tvar RGBEEncoding = 3002;\n\t\tvar LogLuvEncoding = 3003;\n\t\tvar RGBM7Encoding = 3004;\n\t\tvar RGBM16Encoding = 3005;\n\t\tvar RGBDEncoding = 3006;\n\t\tvar BasicDepthPacking = 3200;\n\t\tvar RGBADepthPacking = 3201;\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tvar _Math = {\n\t\n\t\t\tDEG2RAD: Math.PI / 180,\n\t\t\tRAD2DEG: 180 / Math.PI,\n\t\n\t\t\tgenerateUUID: function () {\n\t\n\t\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\t\n\t\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\t\tvar uuid = new Array( 36 );\n\t\t\t\tvar rnd = 0, r;\n\t\n\t\t\t\treturn function generateUUID() {\n\t\n\t\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\t\n\t\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\t\n\t\t\t\t\t\t\tuuid[ i ] = '-';\n\t\n\t\t\t\t\t\t} else if ( i === 14 ) {\n\t\n\t\t\t\t\t\t\tuuid[ i ] = '4';\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn uuid.join( '' );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclamp: function ( value, min, max ) {\n\t\n\t\t\t\treturn Math.max( min, Math.min( max, value ) );\n\t\n\t\t\t},\n\t\n\t\t\t// compute euclidian modulo of m % n\n\t\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\t\n\t\t\teuclideanModulo: function ( n, m ) {\n\t\n\t\t\t\treturn ( ( n % m ) + m ) % m;\n\t\n\t\t\t},\n\t\n\t\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\t\n\t\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\t\n\t\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\t\n\t\t\t},\n\t\n\t\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\t\n\t\t\tlerp: function ( x, y, t ) {\n\t\n\t\t\t\treturn ( 1 - t ) * x + t * y;\n\t\n\t\t\t},\n\t\n\t\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\t\n\t\t\tsmoothstep: function ( x, min, max ) {\n\t\n\t\t\t\tif ( x <= min ) return 0;\n\t\t\t\tif ( x >= max ) return 1;\n\t\n\t\t\t\tx = ( x - min ) / ( max - min );\n\t\n\t\t\t\treturn x * x * ( 3 - 2 * x );\n\t\n\t\t\t},\n\t\n\t\t\tsmootherstep: function ( x, min, max ) {\n\t\n\t\t\t\tif ( x <= min ) return 0;\n\t\t\t\tif ( x >= max ) return 1;\n\t\n\t\t\t\tx = ( x - min ) / ( max - min );\n\t\n\t\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\t\n\t\t\t},\n\t\n\t\t\t// Random integer from <low, high> interval\n\t\n\t\t\trandInt: function ( low, high ) {\n\t\n\t\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\t\n\t\t\t},\n\t\n\t\t\t// Random float from <low, high> interval\n\t\n\t\t\trandFloat: function ( low, high ) {\n\t\n\t\t\t\treturn low + Math.random() * ( high - low );\n\t\n\t\t\t},\n\t\n\t\t\t// Random float from <-range/2, range/2> interval\n\t\n\t\t\trandFloatSpread: function ( range ) {\n\t\n\t\t\t\treturn range * ( 0.5 - Math.random() );\n\t\n\t\t\t},\n\t\n\t\t\tdegToRad: function ( degrees ) {\n\t\n\t\t\t\treturn degrees * _Math.DEG2RAD;\n\t\n\t\t\t},\n\t\n\t\t\tradToDeg: function ( radians ) {\n\t\n\t\t\t\treturn radians * _Math.RAD2DEG;\n\t\n\t\t\t},\n\t\n\t\t\tisPowerOfTwo: function ( value ) {\n\t\n\t\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\t\n\t\t\t},\n\t\n\t\t\tnearestPowerOfTwo: function ( value ) {\n\t\n\t\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\t\n\t\t\t},\n\t\n\t\t\tnextPowerOfTwo: function ( value ) {\n\t\n\t\t\t\tvalue --;\n\t\t\t\tvalue |= value >> 1;\n\t\t\t\tvalue |= value >> 2;\n\t\t\t\tvalue |= value >> 4;\n\t\t\t\tvalue |= value >> 8;\n\t\t\t\tvalue |= value >> 16;\n\t\t\t\tvalue ++;\n\t\n\t\t\t\treturn value;\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author philogb / http://blog.thejit.org/\n\t\t * @author egraether / http://egraether.com/\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t */\n\t\n\t\tfunction Vector2( x, y ) {\n\t\n\t\t\tthis.x = x || 0;\n\t\t\tthis.y = y || 0;\n\t\n\t\t}\n\t\n\t\tObject.defineProperties( Vector2.prototype, {\n\t\n\t\t\t\"width\" : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.x;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.x = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t\"height\" : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.y;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.y = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Vector2.prototype, {\n\t\n\t\t\tisVector2: true,\n\t\n\t\t\tset: function ( x, y ) {\n\t\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.x = scalar;\n\t\t\t\tthis.y = scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetX: function ( x ) {\n\t\n\t\t\t\tthis.x = x;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetY: function ( y ) {\n\t\n\t\t\t\tthis.y = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetComponent: function ( index, value ) {\n\t\n\t\t\t\tswitch ( index ) {\n\t\n\t\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetComponent: function ( index ) {\n\t\n\t\t\t\tswitch ( index ) {\n\t\n\t\t\t\t\tcase 0: return this.x;\n\t\t\t\t\tcase 1: return this.y;\n\t\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.x, this.y );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( v ) {\n\t\n\t\t\t\tthis.x = v.x;\n\t\t\t\tthis.y = v.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tadd: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.addVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x += v.x;\n\t\t\t\tthis.y += v.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScalar: function ( s ) {\n\t\n\t\t\t\tthis.x += s;\n\t\t\t\tthis.y += s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x + b.x;\n\t\t\t\tthis.y = a.y + b.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScaledVector: function ( v, s ) {\n\t\n\t\t\t\tthis.x += v.x * s;\n\t\t\t\tthis.y += v.y * s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsub: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.subVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x -= v.x;\n\t\t\t\tthis.y -= v.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsubScalar: function ( s ) {\n\t\n\t\t\t\tthis.x -= s;\n\t\t\t\tthis.y -= s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsubVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x - b.x;\n\t\t\t\tthis.y = a.y - b.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiply: function ( v ) {\n\t\n\t\t\t\tthis.x *= v.x;\n\t\t\t\tthis.y *= v.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdivide: function ( v ) {\n\t\n\t\t\t\tthis.x /= v.x;\n\t\t\t\tthis.y /= v.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdivideScalar: function ( scalar ) {\n\t\n\t\t\t\treturn this.multiplyScalar( 1 / scalar );\n\t\n\t\t\t},\n\t\n\t\t\tmin: function ( v ) {\n\t\n\t\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\t\tthis.y = Math.min( this.y, v.y );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmax: function ( v ) {\n\t\n\t\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\t\tthis.y = Math.max( this.y, v.y );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclamp: function ( min, max ) {\n\t\n\t\t\t\t// assumes min < max, componentwise\n\t\n\t\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclampScalar: function () {\n\t\n\t\t\t\tvar min = new Vector2();\n\t\t\t\tvar max = new Vector2();\n\t\n\t\t\t\treturn function clampScalar( minVal, maxVal ) {\n\t\n\t\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\t\tmax.set( maxVal, maxVal );\n\t\n\t\t\t\t\treturn this.clamp( min, max );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclampLength: function ( min, max ) {\n\t\n\t\t\t\tvar length = this.length();\n\t\n\t\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\t\n\t\t\t},\n\t\n\t\t\tfloor: function () {\n\t\n\t\t\t\tthis.x = Math.floor( this.x );\n\t\t\t\tthis.y = Math.floor( this.y );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tceil: function () {\n\t\n\t\t\t\tthis.x = Math.ceil( this.x );\n\t\t\t\tthis.y = Math.ceil( this.y );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tround: function () {\n\t\n\t\t\t\tthis.x = Math.round( this.x );\n\t\t\t\tthis.y = Math.round( this.y );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\troundToZero: function () {\n\t\n\t\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tnegate: function () {\n\t\n\t\t\t\tthis.x = - this.x;\n\t\t\t\tthis.y = - this.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdot: function ( v ) {\n\t\n\t\t\t\treturn this.x * v.x + this.y * v.y;\n\t\n\t\t\t},\n\t\n\t\t\tlengthSq: function () {\n\t\n\t\t\t\treturn this.x * this.x + this.y * this.y;\n\t\n\t\t\t},\n\t\n\t\t\tlength: function () {\n\t\n\t\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\t\n\t\t\t},\n\t\n\t\t\tlengthManhattan: function() {\n\t\n\t\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\t\n\t\t\t},\n\t\n\t\t\tnormalize: function () {\n\t\n\t\t\t\treturn this.divideScalar( this.length() || 1 );\n\t\n\t\t\t},\n\t\n\t\t\tangle: function () {\n\t\n\t\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\n\t\t\t\tvar angle = Math.atan2( this.y, this.x );\n\t\n\t\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\t\n\t\t\t\treturn angle;\n\t\n\t\t\t},\n\t\n\t\t\tdistanceTo: function ( v ) {\n\t\n\t\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToSquared: function ( v ) {\n\t\n\t\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\t\treturn dx * dx + dy * dy;\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToManhattan: function ( v ) {\n\t\n\t\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\t\n\t\t\t},\n\t\n\t\t\tsetLength: function ( length ) {\n\t\n\t\t\t\treturn this.normalize().multiplyScalar( length );\n\t\n\t\t\t},\n\t\n\t\t\tlerp: function ( v, alpha ) {\n\t\n\t\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tlerpVectors: function ( v1, v2, alpha ) {\n\t\n\t\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( v ) {\n\t\n\t\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis.x = array[ offset ];\n\t\t\t\tthis.y = array[ offset + 1 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tarray[ offset ] = this.x;\n\t\t\t\tarray[ offset + 1 ] = this.y;\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\t\n\t\t\t\tif ( offset !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x = attribute.getX( index );\n\t\t\t\tthis.y = attribute.getY( index );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\trotateAround: function ( center, angle ) {\n\t\n\t\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\t\n\t\t\t\tvar x = this.x - center.x;\n\t\t\t\tvar y = this.y - center.y;\n\t\n\t\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\t\tthis.y = x * s + y * c + center.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author szimek / https://github.com/szimek/\n\t\t */\n\t\n\t\tvar textureId = 0;\n\t\n\t\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\t\n\t\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.name = '';\n\t\n\t\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\t\tthis.mipmaps = [];\n\t\n\t\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\t\n\t\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\t\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\t\n\t\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\t\n\t\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\t\n\t\t\tthis.offset = new Vector2( 0, 0 );\n\t\t\tthis.repeat = new Vector2( 1, 1 );\n\t\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\t\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\n\t\t}\n\t\n\t\tTexture.DEFAULT_IMAGE = undefined;\n\t\tTexture.DEFAULT_MAPPING = UVMapping;\n\t\n\t\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\t\n\t\t\tset: function ( value ) {\n\t\n\t\t\t\tif ( value === true ) this.version ++;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\t\n\t\t\tconstructor: Texture,\n\t\n\t\t\tisTexture: true,\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.name = source.name;\n\t\n\t\t\t\tthis.image = source.image;\n\t\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\t\n\t\t\t\tthis.mapping = source.mapping;\n\t\n\t\t\t\tthis.wrapS = source.wrapS;\n\t\t\t\tthis.wrapT = source.wrapT;\n\t\n\t\t\t\tthis.magFilter = source.magFilter;\n\t\t\t\tthis.minFilter = source.minFilter;\n\t\n\t\t\t\tthis.anisotropy = source.anisotropy;\n\t\n\t\t\t\tthis.format = source.format;\n\t\t\t\tthis.type = source.type;\n\t\n\t\t\t\tthis.offset.copy( source.offset );\n\t\t\t\tthis.repeat.copy( source.repeat );\n\t\n\t\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\t\tthis.flipY = source.flipY;\n\t\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\t\tthis.encoding = source.encoding;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\t\n\t\t\t\t\treturn meta.textures[ this.uuid ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction getDataURL( image ) {\n\t\n\t\t\t\t\tvar canvas;\n\t\n\t\t\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\t\n\t\t\t\t\t\tcanvas = image;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\t\tcanvas.height = image.height;\n\t\n\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\n\t\t\t\t\t\tif ( image instanceof ImageData ) {\n\t\n\t\t\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\t\n\t\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar output = {\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tversion: 4.5,\n\t\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t\t},\n\t\n\t\t\t\t\tuuid: this.uuid,\n\t\t\t\t\tname: this.name,\n\t\n\t\t\t\t\tmapping: this.mapping,\n\t\n\t\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\t\n\t\t\t\t\tminFilter: this.minFilter,\n\t\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\t\tanisotropy: this.anisotropy,\n\t\n\t\t\t\t\tflipY: this.flipY\n\t\t\t\t};\n\t\n\t\t\t\tif ( this.image !== undefined ) {\n\t\n\t\t\t\t\t// TODO: Move to THREE.Image\n\t\n\t\t\t\t\tvar image = this.image;\n\t\n\t\t\t\t\tif ( image.uuid === undefined ) {\n\t\n\t\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\t\n\t\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\toutput.image = image.uuid;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\t\n\t\t\t\treturn output;\n\t\n\t\t\t},\n\t\n\t\t\tdispose: function () {\n\t\n\t\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\t\n\t\t\t},\n\t\n\t\t\ttransformUv: function ( uv ) {\n\t\n\t\t\t\tif ( this.mapping !== UVMapping ) return;\n\t\n\t\t\t\tuv.multiply( this.repeat );\n\t\t\t\tuv.add( this.offset );\n\t\n\t\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\t\n\t\t\t\t\tswitch ( this.wrapS ) {\n\t\n\t\t\t\t\t\tcase RepeatWrapping:\n\t\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\n\t\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\n\t\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\t\n\t\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\t\n\t\t\t\t\tswitch ( this.wrapT ) {\n\t\n\t\t\t\t\t\tcase RepeatWrapping:\n\t\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\n\t\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\n\t\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\t\n\t\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.flipY ) {\n\t\n\t\t\t\t\tuv.y = 1 - uv.y;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t\t * @author philogb / http://blog.thejit.org/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author egraether / http://egraether.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction Vector4( x, y, z, w ) {\n\t\n\t\t\tthis.x = x || 0;\n\t\t\tthis.y = y || 0;\n\t\t\tthis.z = z || 0;\n\t\t\tthis.w = ( w !== undefined ) ? w : 1;\n\t\n\t\t}\n\t\n\t\tObject.assign( Vector4.prototype, {\n\t\n\t\t\tisVector4: true,\n\t\n\t\t\tset: function ( x, y, z, w ) {\n\t\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\t\t\tthis.w = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.x = scalar;\n\t\t\t\tthis.y = scalar;\n\t\t\t\tthis.z = scalar;\n\t\t\t\tthis.w = scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetX: function ( x ) {\n\t\n\t\t\t\tthis.x = x;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetY: function ( y ) {\n\t\n\t\t\t\tthis.y = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetZ: function ( z ) {\n\t\n\t\t\t\tthis.z = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetW: function ( w ) {\n\t\n\t\t\t\tthis.w = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetComponent: function ( index, value ) {\n\t\n\t\t\t\tswitch ( index ) {\n\t\n\t\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetComponent: function ( index ) {\n\t\n\t\t\t\tswitch ( index ) {\n\t\n\t\t\t\t\tcase 0: return this.x;\n\t\t\t\t\tcase 1: return this.y;\n\t\t\t\t\tcase 2: return this.z;\n\t\t\t\t\tcase 3: return this.w;\n\t\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( v ) {\n\t\n\t\t\t\tthis.x = v.x;\n\t\t\t\tthis.y = v.y;\n\t\t\t\tthis.z = v.z;\n\t\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tadd: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.addVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x += v.x;\n\t\t\t\tthis.y += v.y;\n\t\t\t\tthis.z += v.z;\n\t\t\t\tthis.w += v.w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScalar: function ( s ) {\n\t\n\t\t\t\tthis.x += s;\n\t\t\t\tthis.y += s;\n\t\t\t\tthis.z += s;\n\t\t\t\tthis.w += s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x + b.x;\n\t\t\t\tthis.y = a.y + b.y;\n\t\t\t\tthis.z = a.z + b.z;\n\t\t\t\tthis.w = a.w + b.w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScaledVector: function ( v, s ) {\n\t\n\t\t\t\tthis.x += v.x * s;\n\t\t\t\tthis.y += v.y * s;\n\t\t\t\tthis.z += v.z * s;\n\t\t\t\tthis.w += v.w * s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsub: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.subVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x -= v.x;\n\t\t\t\tthis.y -= v.y;\n\t\t\t\tthis.z -= v.z;\n\t\t\t\tthis.w -= v.w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsubScalar: function ( s ) {\n\t\n\t\t\t\tthis.x -= s;\n\t\t\t\tthis.y -= s;\n\t\t\t\tthis.z -= s;\n\t\t\t\tthis.w -= s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsubVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x - b.x;\n\t\t\t\tthis.y = a.y - b.y;\n\t\t\t\tthis.z = a.z - b.z;\n\t\t\t\tthis.w = a.w - b.w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\t\t\tthis.w *= scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix4: function ( m ) {\n\t\n\t\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\t\tvar e = m.elements;\n\t\n\t\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdivideScalar: function ( scalar ) {\n\t\n\t\t\t\treturn this.multiplyScalar( 1 / scalar );\n\t\n\t\t\t},\n\t\n\t\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\t\n\t\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\n\t\t\t\t// q is assumed to be normalized\n\t\n\t\t\t\tthis.w = 2 * Math.acos( q.w );\n\t\n\t\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\t\n\t\t\t\tif ( s < 0.0001 ) {\n\t\n\t\t\t\t\t this.x = 1;\n\t\t\t\t\t this.y = 0;\n\t\t\t\t\t this.z = 0;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t this.x = q.x / s;\n\t\t\t\t\t this.y = q.y / s;\n\t\t\t\t\t this.z = q.z / s;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\t\n\t\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\n\t\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\n\t\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\t\n\t\t\t\t\tte = m.elements,\n\t\n\t\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\t\n\t\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\t\n\t\t\t\t\t// singularity found\n\t\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t\t// in leading diagonal and zero in other terms\n\t\n\t\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\t\n\t\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\n\t\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\t\n\t\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// otherwise this singularity is angle = 180\n\t\n\t\t\t\t\tangle = Math.PI;\n\t\n\t\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\t\n\t\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\t\n\t\t\t\t\t\t// m11 is the largest diagonal term\n\t\n\t\t\t\t\t\tif ( xx < epsilon ) {\n\t\n\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\t\tz = 0.707106781;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\t\tz = xz / x;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( yy > zz ) {\n\t\n\t\t\t\t\t\t// m22 is the largest diagonal term\n\t\n\t\t\t\t\t\tif ( yy < epsilon ) {\n\t\n\t\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\t\tz = 0.707106781;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\t\tz = yz / y;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\n\t\t\t\t\t\tif ( zz < epsilon ) {\n\t\n\t\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\t\tz = 0;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\t\ty = yz / z;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.set( x, y, z, angle );\n\t\n\t\t\t\t\treturn this; // return 180 deg rotation\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// as we have reached here there are no singularities so we can handle normally\n\t\n\t\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\t\n\t\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\t\n\t\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t\t// caught by singularity test above, but I've left it in just in case\n\t\n\t\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmin: function ( v ) {\n\t\n\t\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\t\tthis.w = Math.min( this.w, v.w );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmax: function ( v ) {\n\t\n\t\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\t\tthis.w = Math.max( this.w, v.w );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclamp: function ( min, max ) {\n\t\n\t\t\t\t// assumes min < max, componentwise\n\t\n\t\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclampScalar: function () {\n\t\n\t\t\t\tvar min, max;\n\t\n\t\t\t\treturn function clampScalar( minVal, maxVal ) {\n\t\n\t\t\t\t\tif ( min === undefined ) {\n\t\n\t\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\t\tmax = new Vector4();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\t\n\t\t\t\t\treturn this.clamp( min, max );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclampLength: function ( min, max ) {\n\t\n\t\t\t\tvar length = this.length();\n\t\n\t\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\t\n\t\t\t},\n\t\n\t\t\tfloor: function () {\n\t\n\t\t\t\tthis.x = Math.floor( this.x );\n\t\t\t\tthis.y = Math.floor( this.y );\n\t\t\t\tthis.z = Math.floor( this.z );\n\t\t\t\tthis.w = Math.floor( this.w );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tceil: function () {\n\t\n\t\t\t\tthis.x = Math.ceil( this.x );\n\t\t\t\tthis.y = Math.ceil( this.y );\n\t\t\t\tthis.z = Math.ceil( this.z );\n\t\t\t\tthis.w = Math.ceil( this.w );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tround: function () {\n\t\n\t\t\t\tthis.x = Math.round( this.x );\n\t\t\t\tthis.y = Math.round( this.y );\n\t\t\t\tthis.z = Math.round( this.z );\n\t\t\t\tthis.w = Math.round( this.w );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\troundToZero: function () {\n\t\n\t\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tnegate: function () {\n\t\n\t\t\t\tthis.x = - this.x;\n\t\t\t\tthis.y = - this.y;\n\t\t\t\tthis.z = - this.z;\n\t\t\t\tthis.w = - this.w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdot: function ( v ) {\n\t\n\t\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\n\t\t\t},\n\t\n\t\t\tlengthSq: function () {\n\t\n\t\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\n\t\t\t},\n\t\n\t\t\tlength: function () {\n\t\n\t\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\t\n\t\t\t},\n\t\n\t\t\tlengthManhattan: function () {\n\t\n\t\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\t\n\t\t\t},\n\t\n\t\t\tnormalize: function () {\n\t\n\t\t\t\treturn this.divideScalar( this.length() || 1 );\n\t\n\t\t\t},\n\t\n\t\t\tsetLength: function ( length ) {\n\t\n\t\t\t\treturn this.normalize().multiplyScalar( length );\n\t\n\t\t\t},\n\t\n\t\t\tlerp: function ( v, alpha ) {\n\t\n\t\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tlerpVectors: function ( v1, v2, alpha ) {\n\t\n\t\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( v ) {\n\t\n\t\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis.x = array[ offset ];\n\t\t\t\tthis.y = array[ offset + 1 ];\n\t\t\t\tthis.z = array[ offset + 2 ];\n\t\t\t\tthis.w = array[ offset + 3 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tarray[ offset ] = this.x;\n\t\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\t\tarray[ offset + 3 ] = this.w;\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\t\n\t\t\t\tif ( offset !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x = attribute.getX( index );\n\t\t\t\tthis.y = attribute.getY( index );\n\t\t\t\tthis.z = attribute.getZ( index );\n\t\t\t\tthis.w = attribute.getW( index );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author szimek / https://github.com/szimek/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author Marius Kintel / https://github.com/kintel\n\t\t */\n\t\n\t\t/*\n\t\t In options, we can specify:\n\t\t * Texture parameters for an auto-generated target texture\n\t\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t\t*/\n\t\tfunction WebGLRenderTarget( width, height, options ) {\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\n\t\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\t\tthis.scissorTest = false;\n\t\n\t\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\t\n\t\t\toptions = options || {};\n\t\n\t\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\t\n\t\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\n\t\t}\n\t\n\t\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\t\n\t\t\tisWebGLRenderTarget: true,\n\t\n\t\t\tsetSize: function ( width, height ) {\n\t\n\t\t\t\tif ( this.width !== width || this.height !== height ) {\n\t\n\t\t\t\t\tthis.width = width;\n\t\t\t\t\tthis.height = height;\n\t\n\t\t\t\t\tthis.dispose();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\t\tthis.scissor.set( 0, 0, width, height );\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.width = source.width;\n\t\t\t\tthis.height = source.height;\n\t\n\t\t\t\tthis.viewport.copy( source.viewport );\n\t\n\t\t\t\tthis.texture = source.texture.clone();\n\t\n\t\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\t\tthis.depthTexture = source.depthTexture;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdispose: function () {\n\t\n\t\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com\n\t\t */\n\t\n\t\tfunction WebGLRenderTargetCube( width, height, options ) {\n\t\n\t\t\tWebGLRenderTarget.call( this, width, height, options );\n\t\n\t\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\t\tthis.activeMipMapLevel = 0;\n\t\n\t\t}\n\t\n\t\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\t\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\t\n\t\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Quaternion( x, y, z, w ) {\n\t\n\t\t\tthis._x = x || 0;\n\t\t\tthis._y = y || 0;\n\t\t\tthis._z = z || 0;\n\t\t\tthis._w = ( w !== undefined ) ? w : 1;\n\t\n\t\t}\n\t\n\t\tObject.assign( Quaternion, {\n\t\n\t\t\tslerp: function ( qa, qb, qm, t ) {\n\t\n\t\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\t\n\t\t\t},\n\t\n\t\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\t\n\t\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\n\t\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\t\n\t\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\t\n\t\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\t\n\t\t\t\t\tvar s = 1 - t,\n\t\n\t\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\n\t\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\t\tsqrSin = 1 - cos * cos;\n\t\n\t\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\t\n\t\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\t\n\t\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar tDir = t * dir;\n\t\n\t\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\t\tw0 = w0 * s + w1 * tDir;\n\t\n\t\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\t\tif ( s === 1 - t ) {\n\t\n\t\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\t\n\t\t\t\t\t\tx0 *= f;\n\t\t\t\t\t\ty0 *= f;\n\t\t\t\t\t\tz0 *= f;\n\t\t\t\t\t\tw0 *= f;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tdst[ dstOffset ] = x0;\n\t\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( Quaternion.prototype, {\n\t\n\t\t\tx: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._x;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._x = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ty: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._y;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._y = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tz: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._z;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._z = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tw: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._w;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._w = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Quaternion.prototype, {\n\t\n\t\t\tset: function ( x, y, z, w ) {\n\t\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\tthis._w = w;\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( quaternion ) {\n\t\n\t\t\t\tthis._x = quaternion.x;\n\t\t\t\tthis._y = quaternion.y;\n\t\t\t\tthis._z = quaternion.z;\n\t\t\t\tthis._w = quaternion.w;\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromEuler: function ( euler, update ) {\n\t\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\t\n\t\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\t\n\t\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t\t//\tcontent/SpinCalc.m\n\t\n\t\t\t\tvar cos = Math.cos;\n\t\t\t\tvar sin = Math.sin;\n\t\n\t\t\t\tvar c1 = cos( x / 2 );\n\t\t\t\tvar c2 = cos( y / 2 );\n\t\t\t\tvar c3 = cos( z / 2 );\n\t\n\t\t\t\tvar s1 = sin( x / 2 );\n\t\t\t\tvar s2 = sin( y / 2 );\n\t\t\t\tvar s3 = sin( z / 2 );\n\t\n\t\t\t\tif ( order === 'XYZ' ) {\n\t\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\n\t\t\t\t} else if ( order === 'YXZ' ) {\n\t\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\n\t\t\t\t} else if ( order === 'ZXY' ) {\n\t\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\n\t\t\t\t} else if ( order === 'ZYX' ) {\n\t\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\n\t\t\t\t} else if ( order === 'YZX' ) {\n\t\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\n\t\t\t\t} else if ( order === 'XZY' ) {\n\t\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( update !== false ) this.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromAxisAngle: function ( axis, angle ) {\n\t\n\t\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\n\t\t\t\t// assumes axis is normalized\n\t\n\t\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\t\n\t\t\t\tthis._x = axis.x * s;\n\t\t\t\tthis._y = axis.y * s;\n\t\t\t\tthis._z = axis.z * s;\n\t\t\t\tthis._w = Math.cos( halfAngle );\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromRotationMatrix: function ( m ) {\n\t\n\t\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\n\t\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\n\t\t\t\tvar te = m.elements,\n\t\n\t\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\t\n\t\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\t\ts;\n\t\n\t\t\t\tif ( trace > 0 ) {\n\t\n\t\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\t\n\t\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\t\n\t\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\t\n\t\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\t\n\t\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\t\n\t\t\t\t} else if ( m22 > m33 ) {\n\t\n\t\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\t\n\t\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\t\n\t\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\t\tthis._z = 0.25 * s;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromUnitVectors: function () {\n\t\n\t\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\t\t\tvar r;\n\t\n\t\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\t\n\t\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\n\t\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\t\n\t\t\t\t\tif ( r < EPS ) {\n\t\n\t\t\t\t\t\tr = 0;\n\t\n\t\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\t\n\t\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis._x = v1.x;\n\t\t\t\t\tthis._y = v1.y;\n\t\t\t\t\tthis._z = v1.z;\n\t\t\t\t\tthis._w = r;\n\t\n\t\t\t\t\treturn this.normalize();\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tinverse: function () {\n\t\n\t\t\t\treturn this.conjugate().normalize();\n\t\n\t\t\t},\n\t\n\t\t\tconjugate: function () {\n\t\n\t\t\t\tthis._x *= - 1;\n\t\t\t\tthis._y *= - 1;\n\t\t\t\tthis._z *= - 1;\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdot: function ( v ) {\n\t\n\t\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\n\t\t\t},\n\t\n\t\t\tlengthSq: function () {\n\t\n\t\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\n\t\t\t},\n\t\n\t\t\tlength: function () {\n\t\n\t\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\t\n\t\t\t},\n\t\n\t\t\tnormalize: function () {\n\t\n\t\t\t\tvar l = this.length();\n\t\n\t\t\t\tif ( l === 0 ) {\n\t\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = 1;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tl = 1 / l;\n\t\n\t\t\t\t\tthis._x = this._x * l;\n\t\t\t\t\tthis._y = this._y * l;\n\t\t\t\t\tthis._z = this._z * l;\n\t\t\t\t\tthis._w = this._w * l;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiply: function ( q, p ) {\n\t\n\t\t\t\tif ( p !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\t\treturn this.multiplyQuaternions( q, p );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this.multiplyQuaternions( this, q );\n\t\n\t\t\t},\n\t\n\t\t\tpremultiply: function ( q ) {\n\t\n\t\t\t\treturn this.multiplyQuaternions( q, this );\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyQuaternions: function ( a, b ) {\n\t\n\t\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\n\t\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\t\n\t\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tslerp: function ( qb, t ) {\n\t\n\t\t\t\tif ( t === 0 ) return this;\n\t\t\t\tif ( t === 1 ) return this.copy( qb );\n\t\n\t\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\t\n\t\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\t\n\t\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\t\n\t\t\t\tif ( cosHalfTheta < 0 ) {\n\t\n\t\t\t\t\tthis._w = - qb._w;\n\t\t\t\t\tthis._x = - qb._x;\n\t\t\t\t\tthis._y = - qb._y;\n\t\t\t\t\tthis._z = - qb._z;\n\t\n\t\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.copy( qb );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\t\n\t\t\t\t\tthis._w = w;\n\t\t\t\t\tthis._x = x;\n\t\t\t\t\tthis._y = y;\n\t\t\t\t\tthis._z = z;\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\t\n\t\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\t\n\t\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\t\n\t\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( quaternion ) {\n\t\n\t\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis._x = array[ offset ];\n\t\t\t\tthis._y = array[ offset + 1 ];\n\t\t\t\tthis._z = array[ offset + 2 ];\n\t\t\t\tthis._w = array[ offset + 3 ];\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tarray[ offset ] = this._x;\n\t\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\t\tarray[ offset + 3 ] = this._w;\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\tonChange: function ( callback ) {\n\t\n\t\t\t\tthis.onChangeCallback = callback;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tonChangeCallback: function () {}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author kile / http://kile.stravaganza.org/\n\t\t * @author philogb / http://blog.thejit.org/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author egraether / http://egraether.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction Vector3( x, y, z ) {\n\t\n\t\t\tthis.x = x || 0;\n\t\t\tthis.y = y || 0;\n\t\t\tthis.z = z || 0;\n\t\n\t\t}\n\t\n\t\tObject.assign( Vector3.prototype, {\n\t\n\t\t\tisVector3: true,\n\t\n\t\t\tset: function ( x, y, z ) {\n\t\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.x = scalar;\n\t\t\t\tthis.y = scalar;\n\t\t\t\tthis.z = scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetX: function ( x ) {\n\t\n\t\t\t\tthis.x = x;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetY: function ( y ) {\n\t\n\t\t\t\tthis.y = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetZ: function ( z ) {\n\t\n\t\t\t\tthis.z = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetComponent: function ( index, value ) {\n\t\n\t\t\t\tswitch ( index ) {\n\t\n\t\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetComponent: function ( index ) {\n\t\n\t\t\t\tswitch ( index ) {\n\t\n\t\t\t\t\tcase 0: return this.x;\n\t\t\t\t\tcase 1: return this.y;\n\t\t\t\t\tcase 2: return this.z;\n\t\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( v ) {\n\t\n\t\t\t\tthis.x = v.x;\n\t\t\t\tthis.y = v.y;\n\t\t\t\tthis.z = v.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tadd: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.addVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x += v.x;\n\t\t\t\tthis.y += v.y;\n\t\t\t\tthis.z += v.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScalar: function ( s ) {\n\t\n\t\t\t\tthis.x += s;\n\t\t\t\tthis.y += s;\n\t\t\t\tthis.z += s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x + b.x;\n\t\t\t\tthis.y = a.y + b.y;\n\t\t\t\tthis.z = a.z + b.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScaledVector: function ( v, s ) {\n\t\n\t\t\t\tthis.x += v.x * s;\n\t\t\t\tthis.y += v.y * s;\n\t\t\t\tthis.z += v.z * s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsub: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.subVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x -= v.x;\n\t\t\t\tthis.y -= v.y;\n\t\t\t\tthis.z -= v.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsubScalar: function ( s ) {\n\t\n\t\t\t\tthis.x -= s;\n\t\t\t\tthis.y -= s;\n\t\t\t\tthis.z -= s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsubVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x - b.x;\n\t\t\t\tthis.y = a.y - b.y;\n\t\t\t\tthis.z = a.z - b.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiply: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.multiplyVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x *= v.x;\n\t\t\t\tthis.y *= v.y;\n\t\t\t\tthis.z *= v.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyVectors: function ( a, b ) {\n\t\n\t\t\t\tthis.x = a.x * b.x;\n\t\t\t\tthis.y = a.y * b.y;\n\t\t\t\tthis.z = a.z * b.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyEuler: function () {\n\t\n\t\t\t\tvar quaternion = new Quaternion();\n\t\n\t\t\t\treturn function applyEuler( euler ) {\n\t\n\t\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\t\n\t\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tapplyAxisAngle: function () {\n\t\n\t\t\t\tvar quaternion = new Quaternion();\n\t\n\t\t\t\treturn function applyAxisAngle( axis, angle ) {\n\t\n\t\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tapplyMatrix3: function ( m ) {\n\t\n\t\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\t\tvar e = m.elements;\n\t\n\t\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix4: function ( m ) {\n\t\n\t\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\t\tvar e = m.elements;\n\t\n\t\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\t\n\t\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyQuaternion: function ( q ) {\n\t\n\t\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\t\n\t\t\t\t// calculate quat * vector\n\t\n\t\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\t\n\t\t\t\t// calculate result * inverse quat\n\t\n\t\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tproject: function () {\n\t\n\t\t\t\tvar matrix = new Matrix4();\n\t\n\t\t\t\treturn function project( camera ) {\n\t\n\t\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\t\treturn this.applyMatrix4( matrix );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tunproject: function () {\n\t\n\t\t\t\tvar matrix = new Matrix4();\n\t\n\t\t\t\treturn function unproject( camera ) {\n\t\n\t\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\t\treturn this.applyMatrix4( matrix );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttransformDirection: function ( m ) {\n\t\n\t\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t\t// vector interpreted as a direction\n\t\n\t\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\t\tvar e = m.elements;\n\t\n\t\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\t\n\t\t\t\treturn this.normalize();\n\t\n\t\t\t},\n\t\n\t\t\tdivide: function ( v ) {\n\t\n\t\t\t\tthis.x /= v.x;\n\t\t\t\tthis.y /= v.y;\n\t\t\t\tthis.z /= v.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdivideScalar: function ( scalar ) {\n\t\n\t\t\t\treturn this.multiplyScalar( 1 / scalar );\n\t\n\t\t\t},\n\t\n\t\t\tmin: function ( v ) {\n\t\n\t\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\t\tthis.z = Math.min( this.z, v.z );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmax: function ( v ) {\n\t\n\t\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\t\tthis.z = Math.max( this.z, v.z );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclamp: function ( min, max ) {\n\t\n\t\t\t\t// assumes min < max, componentwise\n\t\n\t\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclampScalar: function () {\n\t\n\t\t\t\tvar min = new Vector3();\n\t\t\t\tvar max = new Vector3();\n\t\n\t\t\t\treturn function clampScalar( minVal, maxVal ) {\n\t\n\t\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\t\n\t\t\t\t\treturn this.clamp( min, max );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclampLength: function ( min, max ) {\n\t\n\t\t\t\tvar length = this.length();\n\t\n\t\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\t\n\t\t\t},\n\t\n\t\t\tfloor: function () {\n\t\n\t\t\t\tthis.x = Math.floor( this.x );\n\t\t\t\tthis.y = Math.floor( this.y );\n\t\t\t\tthis.z = Math.floor( this.z );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tceil: function () {\n\t\n\t\t\t\tthis.x = Math.ceil( this.x );\n\t\t\t\tthis.y = Math.ceil( this.y );\n\t\t\t\tthis.z = Math.ceil( this.z );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tround: function () {\n\t\n\t\t\t\tthis.x = Math.round( this.x );\n\t\t\t\tthis.y = Math.round( this.y );\n\t\t\t\tthis.z = Math.round( this.z );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\troundToZero: function () {\n\t\n\t\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tnegate: function () {\n\t\n\t\t\t\tthis.x = - this.x;\n\t\t\t\tthis.y = - this.y;\n\t\t\t\tthis.z = - this.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdot: function ( v ) {\n\t\n\t\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\n\t\t\t},\n\t\n\t\t\t// TODO lengthSquared?\n\t\n\t\t\tlengthSq: function () {\n\t\n\t\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\n\t\t\t},\n\t\n\t\t\tlength: function () {\n\t\n\t\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\t\n\t\t\t},\n\t\n\t\t\tlengthManhattan: function () {\n\t\n\t\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\t\n\t\t\t},\n\t\n\t\t\tnormalize: function () {\n\t\n\t\t\t\treturn this.divideScalar( this.length() || 1 );\n\t\n\t\t\t},\n\t\n\t\t\tsetLength: function ( length ) {\n\t\n\t\t\t\treturn this.normalize().multiplyScalar( length );\n\t\n\t\t\t},\n\t\n\t\t\tlerp: function ( v, alpha ) {\n\t\n\t\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tlerpVectors: function ( v1, v2, alpha ) {\n\t\n\t\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\t\n\t\t\t},\n\t\n\t\t\tcross: function ( v, w ) {\n\t\n\t\t\t\tif ( w !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\t\treturn this.crossVectors( v, w );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\n\t\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\t\tthis.z = x * v.y - y * v.x;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcrossVectors: function ( a, b ) {\n\t\n\t\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\t\n\t\t\t\tthis.x = ay * bz - az * by;\n\t\t\t\tthis.y = az * bx - ax * bz;\n\t\t\t\tthis.z = ax * by - ay * bx;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tprojectOnVector: function ( vector ) {\n\t\n\t\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\t\n\t\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\t\n\t\t\t},\n\t\n\t\t\tprojectOnPlane: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function projectOnPlane( planeNormal ) {\n\t\n\t\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\t\n\t\t\t\t\treturn this.sub( v1 );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\treflect: function () {\n\t\n\t\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t\t// normal is assumed to have unit length\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function reflect( normal ) {\n\t\n\t\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tangleTo: function ( v ) {\n\t\n\t\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\t\n\t\t\t\t// clamp, to handle numerical problems\n\t\n\t\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceTo: function ( v ) {\n\t\n\t\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToSquared: function ( v ) {\n\t\n\t\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\t\n\t\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToManhattan: function ( v ) {\n\t\n\t\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\t\n\t\t\t},\n\t\n\t\t\tsetFromSpherical: function ( s ) {\n\t\n\t\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\t\n\t\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromCylindrical: function ( c ) {\n\t\n\t\t\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\t\t\tthis.y = c.y;\n\t\t\t\tthis.z = c.radius * Math.cos( c.theta );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromMatrixPosition: function ( m ) {\n\t\n\t\t\t\tvar e = m.elements;\n\t\n\t\t\t\tthis.x = e[ 12 ];\n\t\t\t\tthis.y = e[ 13 ];\n\t\t\t\tthis.z = e[ 14 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromMatrixScale: function ( m ) {\n\t\n\t\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\t\n\t\t\t\tthis.x = sx;\n\t\t\t\tthis.y = sy;\n\t\t\t\tthis.z = sz;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromMatrixColumn: function ( m, index ) {\n\t\n\t\t\t\treturn this.fromArray( m.elements, index * 4 );\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( v ) {\n\t\n\t\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis.x = array[ offset ];\n\t\t\t\tthis.y = array[ offset + 1 ];\n\t\t\t\tthis.z = array[ offset + 2 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tarray[ offset ] = this.x;\n\t\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\t\tarray[ offset + 2 ] = this.z;\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\t\n\t\t\t\tif ( offset !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.x = attribute.getX( index );\n\t\t\t\tthis.y = attribute.getY( index );\n\t\t\t\tthis.z = attribute.getZ( index );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t\t * @author philogb / http://blog.thejit.org/\n\t\t * @author jordi_ros / http://plattsoft.com\n\t\t * @author D1plo1d / http://github.com/D1plo1d\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author timknip / http://www.floorplanner.com/\n\t\t * @author bhouston / http://clara.io\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction Matrix4() {\n\t\n\t\t\tthis.elements = [\n\t\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\t\n\t\t\t];\n\t\n\t\t\tif ( arguments.length > 0 ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tObject.assign( Matrix4.prototype, {\n\t\n\t\t\tisMatrix4: true,\n\t\n\t\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tidentity: function () {\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\t1, 0, 0, 0,\n\t\t\t\t\t0, 1, 0, 0,\n\t\t\t\t\t0, 0, 1, 0,\n\t\t\t\t\t0, 0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new Matrix4().fromArray( this.elements );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( m ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\t\n\t\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyPosition: function ( m ) {\n\t\n\t\t\t\tvar te = this.elements, me = m.elements;\n\t\n\t\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\t\tte[ 14 ] = me[ 14 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\t\n\t\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\t\n\t\t\t\tthis.set(\n\t\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t\t0,       0,       0,       1\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\textractRotation: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function extractRotation( m ) {\n\t\n\t\t\t\t\tvar te = this.elements;\n\t\t\t\t\tvar me = m.elements;\n\t\n\t\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\t\n\t\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\n\t\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\n\t\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tmakeRotationFromEuler: function ( euler ) {\n\t\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\t\n\t\t\t\tif ( euler.order === 'XYZ' ) {\n\t\n\t\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\t\n\t\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\t\tte[ 8 ] = d;\n\t\n\t\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\t\tte[ 9 ] = - b * c;\n\t\n\t\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\t\tte[ 10 ] = a * c;\n\t\n\t\t\t\t} else if ( euler.order === 'YXZ' ) {\n\t\n\t\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\t\n\t\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\t\tte[ 8 ] = a * d;\n\t\n\t\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\t\tte[ 9 ] = - b;\n\t\n\t\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\t\tte[ 10 ] = a * c;\n\t\n\t\t\t\t} else if ( euler.order === 'ZXY' ) {\n\t\n\t\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\t\n\t\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\t\tte[ 8 ] = de + cf * b;\n\t\n\t\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\t\tte[ 9 ] = df - ce * b;\n\t\n\t\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\t\tte[ 6 ] = b;\n\t\t\t\t\tte[ 10 ] = a * c;\n\t\n\t\t\t\t} else if ( euler.order === 'ZYX' ) {\n\t\n\t\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\t\n\t\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\t\tte[ 8 ] = ae * d + bf;\n\t\n\t\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\t\tte[ 9 ] = af * d - be;\n\t\n\t\t\t\t\tte[ 2 ] = - d;\n\t\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\t\tte[ 10 ] = a * c;\n\t\n\t\t\t\t} else if ( euler.order === 'YZX' ) {\n\t\n\t\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\t\n\t\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\t\tte[ 8 ] = bc * f + ad;\n\t\n\t\t\t\t\tte[ 1 ] = f;\n\t\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\t\tte[ 9 ] = - b * e;\n\t\n\t\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\t\tte[ 10 ] = ac - bd * f;\n\t\n\t\t\t\t} else if ( euler.order === 'XZY' ) {\n\t\n\t\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\t\n\t\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\t\tte[ 4 ] = - f;\n\t\t\t\t\tte[ 8 ] = d * e;\n\t\n\t\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\t\tte[ 9 ] = ad * f - bc;\n\t\n\t\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\t\tte[ 10 ] = bd * f + ac;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// last column\n\t\t\t\tte[ 3 ] = 0;\n\t\t\t\tte[ 7 ] = 0;\n\t\t\t\tte[ 11 ] = 0;\n\t\n\t\t\t\t// bottom row\n\t\t\t\tte[ 12 ] = 0;\n\t\t\t\tte[ 13 ] = 0;\n\t\t\t\tte[ 14 ] = 0;\n\t\t\t\tte[ 15 ] = 1;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeRotationFromQuaternion: function ( q ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\t\n\t\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\t\tte[ 4 ] = xy - wz;\n\t\t\t\tte[ 8 ] = xz + wy;\n\t\n\t\t\t\tte[ 1 ] = xy + wz;\n\t\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\t\tte[ 9 ] = yz - wx;\n\t\n\t\t\t\tte[ 2 ] = xz - wy;\n\t\t\t\tte[ 6 ] = yz + wx;\n\t\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\t\n\t\t\t\t// last column\n\t\t\t\tte[ 3 ] = 0;\n\t\t\t\tte[ 7 ] = 0;\n\t\t\t\tte[ 11 ] = 0;\n\t\n\t\t\t\t// bottom row\n\t\t\t\tte[ 12 ] = 0;\n\t\t\t\tte[ 13 ] = 0;\n\t\t\t\tte[ 14 ] = 0;\n\t\t\t\tte[ 15 ] = 1;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tlookAt: function () {\n\t\n\t\t\t\tvar x = new Vector3();\n\t\t\t\tvar y = new Vector3();\n\t\t\t\tvar z = new Vector3();\n\t\n\t\t\t\treturn function lookAt( eye, target, up ) {\n\t\n\t\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\t\tz.subVectors( eye, target );\n\t\n\t\t\t\t\tif ( z.lengthSq() === 0 ) {\n\t\n\t\t\t\t\t\t// eye and target are in the same position\n\t\n\t\t\t\t\t\tz.z = 1;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tz.normalize();\n\t\t\t\t\tx.crossVectors( up, z );\n\t\n\t\t\t\t\tif ( x.lengthSq() === 0 ) {\n\t\n\t\t\t\t\t\t// up and z are parallel\n\t\n\t\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\t\n\t\t\t\t\t\t\tz.x += 0.0001;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tz.z += 0.0001;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tz.normalize();\n\t\t\t\t\t\tx.crossVectors( up, z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx.normalize();\n\t\t\t\t\ty.crossVectors( z, x );\n\t\n\t\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tmultiply: function ( m, n ) {\n\t\n\t\t\t\tif ( n !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\t\treturn this.multiplyMatrices( m, n );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this.multiplyMatrices( this, m );\n\t\n\t\t\t},\n\t\n\t\t\tpremultiply: function ( m ) {\n\t\n\t\t\t\treturn this.multiplyMatrices( m, this );\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyMatrices: function ( a, b ) {\n\t\n\t\t\t\tvar ae = a.elements;\n\t\t\t\tvar be = b.elements;\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\t\n\t\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\t\n\t\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\n\t\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\n\t\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\n\t\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyScalar: function ( s ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyToBufferAttribute: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function applyToBufferAttribute( attribute ) {\n\t\n\t\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\t\tv1.z = attribute.getZ( i );\n\t\n\t\t\t\t\t\tv1.applyMatrix4( this );\n\t\n\t\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn attribute;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tdeterminant: function () {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\t\n\t\t\t\t//TODO: make this more efficient\n\t\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\t\n\t\t\t\treturn (\n\t\t\t\t\tn41 * (\n\t\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t\t) +\n\t\t\t\t\tn42 * (\n\t\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t\t) +\n\t\t\t\t\tn43 * (\n\t\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t\t) +\n\t\t\t\t\tn44 * (\n\t\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t\t)\n\t\n\t\t\t\t);\n\t\n\t\t\t},\n\t\n\t\t\ttranspose: function () {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar tmp;\n\t\n\t\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\t\n\t\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetPosition: function ( v ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tte[ 12 ] = v.x;\n\t\t\t\tte[ 13 ] = v.y;\n\t\t\t\tte[ 14 ] = v.z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\t\n\t\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\t\tvar te = this.elements,\n\t\t\t\t\tme = m.elements,\n\t\n\t\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\t\n\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\n\t\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\n\t\t\t\tif ( det === 0 ) {\n\t\n\t\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\t\n\t\t\t\t\tif ( throwOnDegenerate === true ) {\n\t\n\t\t\t\t\t\tthrow new Error( msg );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tconsole.warn( msg );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn this.identity();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar detInv = 1 / det;\n\t\n\t\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\t\n\t\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\t\n\t\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\t\n\t\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tscale: function ( v ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar x = v.x, y = v.y, z = v.z;\n\t\n\t\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetMaxScaleOnAxis: function () {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\t\n\t\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\t\n\t\t\t},\n\t\n\t\t\tmakeTranslation: function ( x, y, z ) {\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\t1, 0, 0, x,\n\t\t\t\t\t0, 1, 0, y,\n\t\t\t\t\t0, 0, 1, z,\n\t\t\t\t\t0, 0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeRotationX: function ( theta ) {\n\t\n\t\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\t1, 0,  0, 0,\n\t\t\t\t\t0, c, - s, 0,\n\t\t\t\t\t0, s,  c, 0,\n\t\t\t\t\t0, 0,  0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeRotationY: function ( theta ) {\n\t\n\t\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\t c, 0, s, 0,\n\t\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t\t- s, 0, c, 0,\n\t\t\t\t\t 0, 0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeRotationZ: function ( theta ) {\n\t\n\t\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\tc, - s, 0, 0,\n\t\t\t\t\ts,  c, 0, 0,\n\t\t\t\t\t0,  0, 1, 0,\n\t\t\t\t\t0,  0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeRotationAxis: function ( axis, angle ) {\n\t\n\t\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\n\t\t\t\tvar c = Math.cos( angle );\n\t\t\t\tvar s = Math.sin( angle );\n\t\t\t\tvar t = 1 - c;\n\t\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\t\tvar tx = t * x, ty = t * y;\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t\t0, 0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\t return this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeScale: function ( x, y, z ) {\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\tx, 0, 0, 0,\n\t\t\t\t\t0, y, 0, 0,\n\t\t\t\t\t0, 0, z, 0,\n\t\t\t\t\t0, 0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeShear: function ( x, y, z ) {\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\t1, y, z, 0,\n\t\t\t\t\tx, 1, z, 0,\n\t\t\t\t\tx, y, 1, 0,\n\t\t\t\t\t0, 0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcompose: function ( position, quaternion, scale ) {\n\t\n\t\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\t\tthis.scale( scale );\n\t\t\t\tthis.setPosition( position );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdecompose: function () {\n\t\n\t\t\t\tvar vector = new Vector3();\n\t\t\t\tvar matrix = new Matrix4();\n\t\n\t\t\t\treturn function decompose( position, quaternion, scale ) {\n\t\n\t\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\t\n\t\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\t\tvar det = this.determinant();\n\t\t\t\t\tif ( det < 0 ) sx = - sx;\n\t\n\t\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\t\tposition.z = te[ 14 ];\n\t\n\t\t\t\t\t// scale the rotation part\n\t\t\t\t\tmatrix.copy( this );\n\t\n\t\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\t\tvar invSZ = 1 / sz;\n\t\n\t\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\t\n\t\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\t\n\t\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\t\n\t\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\t\n\t\t\t\t\tscale.x = sx;\n\t\t\t\t\tscale.y = sy;\n\t\t\t\t\tscale.z = sz;\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\t\n\t\t\t\tif ( far === undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar x = 2 * near / ( right - left );\n\t\t\t\tvar y = 2 * near / ( top - bottom );\n\t\n\t\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\t\tvar d = - 2 * far * near / ( far - near );\n\t\n\t\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar w = 1.0 / ( right - left );\n\t\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\t\tvar p = 1.0 / ( far - near );\n\t\n\t\t\t\tvar x = ( right + left ) * w;\n\t\t\t\tvar y = ( top + bottom ) * h;\n\t\t\t\tvar z = ( far + near ) * p;\n\t\n\t\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( matrix ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = matrix.elements;\n\t\n\t\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\t\n\t\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn true;\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\t\n\t\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\n\t\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\n\t\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\t\n\t\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\t\n\t\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\t\n\t\t\tthis.image = { data: data, width: width, height: height };\n\t\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\n\t\t}\n\t\n\t\tDataTexture.prototype = Object.create( Texture.prototype );\n\t\tDataTexture.prototype.constructor = DataTexture;\n\t\n\t\tDataTexture.prototype.isDataTexture = true;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\t\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\n\t\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\t\n\t\t\tthis.flipY = false;\n\t\n\t\t}\n\t\n\t\tCubeTexture.prototype = Object.create( Texture.prototype );\n\t\tCubeTexture.prototype.constructor = CubeTexture;\n\t\n\t\tCubeTexture.prototype.isCubeTexture = true;\n\t\n\t\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\t\n\t\t\tget: function () {\n\t\n\t\t\t\treturn this.image;\n\t\n\t\t\t},\n\t\n\t\t\tset: function ( value ) {\n\t\n\t\t\t\tthis.image = value;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author tschw\n\t\t *\n\t\t * Uniforms of a program.\n\t\t * Those form a tree structure with a special top-level container for the root,\n\t\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t\t *\n\t\t *\n\t\t * Properties of inner nodes including the top-level container:\n\t\t *\n\t\t * .seq - array of nested uniforms\n\t\t * .map - nested uniforms by name\n\t\t *\n\t\t *\n\t\t * Methods of all nodes except the top-level container:\n\t\t *\n\t\t * .setValue( gl, value, [renderer] )\n\t\t *\n\t\t * \t\tuploads a uniform value(s)\n\t\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t\t *\n\t\t *\n\t\t * Static methods of the top-level container (renderer factorizations):\n\t\t *\n\t\t * .upload( gl, seq, values, renderer )\n\t\t *\n\t\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t\t *\n\t\t * .seqWithValue( seq, values ) : filteredSeq\n\t\t *\n\t\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t\t *\n\t\t *\n\t\t * Methods of the top-level container (renderer factorizations):\n\t\t *\n\t\t * .setValue( gl, name, value )\n\t\t *\n\t\t * \t\tsets uniform with  name 'name' to 'value'\n\t\t *\n\t\t * .set( gl, obj, prop )\n\t\t *\n\t\t * \t\tsets uniform from object and property with same name than uniform\n\t\t *\n\t\t * .setOptional( gl, obj, prop )\n\t\t *\n\t\t * \t\tlike .set for an optional property of the object\n\t\t *\n\t\t */\n\t\n\t\tvar emptyTexture = new Texture();\n\t\tvar emptyCubeTexture = new CubeTexture();\n\t\n\t\t// --- Base for inner nodes (including the root) ---\n\t\n\t\tfunction UniformContainer() {\n\t\n\t\t\tthis.seq = [];\n\t\t\tthis.map = {};\n\t\n\t\t}\n\t\n\t\t// --- Utilities ---\n\t\n\t\t// Array Caches (provide typed arrays for temporary by size)\n\t\n\t\tvar arrayCacheF32 = [];\n\t\tvar arrayCacheI32 = [];\n\t\n\t\t// Float32Array caches used for uploading Matrix uniforms\n\t\n\t\tvar mat4array = new Float32Array( 16 );\n\t\tvar mat3array = new Float32Array( 9 );\n\t\n\t\t// Flattening for arrays of vectors and matrices\n\t\n\t\tfunction flatten( array, nBlocks, blockSize ) {\n\t\n\t\t\tvar firstElem = array[ 0 ];\n\t\n\t\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t\t// unoptimized: ! isNaN( firstElem )\n\t\t\t// see http://jacksondunstan.com/articles/983\n\t\n\t\t\tvar n = nBlocks * blockSize,\n\t\t\t\tr = arrayCacheF32[ n ];\n\t\n\t\t\tif ( r === undefined ) {\n\t\n\t\t\t\tr = new Float32Array( n );\n\t\t\t\tarrayCacheF32[ n ] = r;\n\t\n\t\t\t}\n\t\n\t\t\tif ( nBlocks !== 0 ) {\n\t\n\t\t\t\tfirstElem.toArray( r, 0 );\n\t\n\t\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\t\n\t\t\t\t\toffset += blockSize;\n\t\t\t\t\tarray[ i ].toArray( r, offset );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\treturn r;\n\t\n\t\t}\n\t\n\t\t// Texture unit allocation\n\t\n\t\tfunction allocTexUnits( renderer, n ) {\n\t\n\t\t\tvar r = arrayCacheI32[ n ];\n\t\n\t\t\tif ( r === undefined ) {\n\t\n\t\t\t\tr = new Int32Array( n );\n\t\t\t\tarrayCacheI32[ n ] = r;\n\t\n\t\t\t}\n\t\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tr[ i ] = renderer.allocTextureUnit();\n\t\n\t\t\treturn r;\n\t\n\t\t}\n\t\n\t\t// --- Setters ---\n\t\n\t\t// Note: Defining these methods externally, because they come in a bunch\n\t\t// and this way their names minify.\n\t\n\t\t// Single scalar\n\t\n\t\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\t\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\t\n\t\t// Single float vector (from flat array or THREE.VectorN)\n\t\n\t\tfunction setValue2fv( gl, v ) {\n\t\n\t\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\t\n\t\t}\n\t\n\t\tfunction setValue3fv( gl, v ) {\n\t\n\t\t\tif ( v.x !== undefined )\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\t\telse if ( v.r !== undefined )\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\t\telse\n\t\t\t\tgl.uniform3fv( this.addr, v );\n\t\n\t\t}\n\t\n\t\tfunction setValue4fv( gl, v ) {\n\t\n\t\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\t\n\t\t}\n\t\n\t\t// Single matrix (from flat array or MatrixN)\n\t\n\t\tfunction setValue2fm( gl, v ) {\n\t\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\t\n\t\t}\n\t\n\t\tfunction setValue3fm( gl, v ) {\n\t\n\t\t\tif ( v.elements === undefined ) {\n\t\n\t\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tmat3array.set( v.elements );\n\t\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setValue4fm( gl, v ) {\n\t\n\t\t\tif ( v.elements === undefined ) {\n\t\n\t\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tmat4array.set( v.elements );\n\t\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t// Single texture (2D / Cube)\n\t\n\t\tfunction setValueT1( gl, v, renderer ) {\n\t\n\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\t\n\t\t}\n\t\n\t\tfunction setValueT6( gl, v, renderer ) {\n\t\n\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\t\n\t\t}\n\t\n\t\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\t\n\t\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\t\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\t\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\t\n\t\t// Helper to pick the right setter for the singular case\n\t\n\t\tfunction getSingularSetter( type ) {\n\t\n\t\t\tswitch ( type ) {\n\t\n\t\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\t\n\t\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\t\n\t\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t// Array of scalars\n\t\n\t\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\t\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\t\n\t\t// Array of vectors (flat or from THREE classes)\n\t\n\t\tfunction setValueV2a( gl, v ) {\n\t\n\t\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\t\n\t\t}\n\t\n\t\tfunction setValueV3a( gl, v ) {\n\t\n\t\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\t\n\t\t}\n\t\n\t\tfunction setValueV4a( gl, v ) {\n\t\n\t\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\t\n\t\t}\n\t\n\t\t// Array of matrices (flat or from THREE clases)\n\t\n\t\tfunction setValueM2a( gl, v ) {\n\t\n\t\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\t\n\t\t}\n\t\n\t\tfunction setValueM3a( gl, v ) {\n\t\n\t\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\t\n\t\t}\n\t\n\t\tfunction setValueM4a( gl, v ) {\n\t\n\t\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\t\n\t\t}\n\t\n\t\t// Array of textures (2D / Cube)\n\t\n\t\tfunction setValueT1a( gl, v, renderer ) {\n\t\n\t\t\tvar n = v.length,\n\t\t\t\tunits = allocTexUnits( renderer, n );\n\t\n\t\t\tgl.uniform1iv( this.addr, units );\n\t\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\t\n\t\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setValueT6a( gl, v, renderer ) {\n\t\n\t\t\tvar n = v.length,\n\t\t\t\tunits = allocTexUnits( renderer, n );\n\t\n\t\t\tgl.uniform1iv( this.addr, units );\n\t\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\t\n\t\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t// Helper to pick the right setter for a pure (bottom-level) array\n\t\n\t\tfunction getPureArraySetter( type ) {\n\t\n\t\t\tswitch ( type ) {\n\t\n\t\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\t\n\t\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\t\n\t\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\t\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t// --- Uniform Classes ---\n\t\n\t\tfunction SingleUniform( id, activeInfo, addr ) {\n\t\n\t\t\tthis.id = id;\n\t\t\tthis.addr = addr;\n\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\t\n\t\t\t// this.path = activeInfo.name; // DEBUG\n\t\n\t\t}\n\t\n\t\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\t\n\t\t\tthis.id = id;\n\t\t\tthis.addr = addr;\n\t\t\tthis.size = activeInfo.size;\n\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\t\n\t\t\t// this.path = activeInfo.name; // DEBUG\n\t\n\t\t}\n\t\n\t\tfunction StructuredUniform( id ) {\n\t\n\t\t\tthis.id = id;\n\t\n\t\t\tUniformContainer.call( this ); // mix-in\n\t\n\t\t}\n\t\n\t\tStructuredUniform.prototype.setValue = function ( gl, value ) {\n\t\n\t\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t\t// are not allowed in structured uniforms.\n\t\n\t\t\tvar seq = this.seq;\n\t\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\t\n\t\t\t\tvar u = seq[ i ];\n\t\t\t\tu.setValue( gl, value[ u.id ] );\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t// --- Top-level ---\n\t\n\t\t// Parser - builds up the property tree from the path strings\n\t\n\t\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\t\n\t\t// extracts\n\t\t// \t- the identifier (member name or array index)\n\t\t//  - followed by an optional right bracket (found when array index)\n\t\t//  - followed by an optional left bracket or dot (type of subscript)\n\t\t//\n\t\t// Note: These portions can be read in a non-overlapping fashion and\n\t\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t\t// in the uniform names.\n\t\n\t\tfunction addUniform( container, uniformObject ) {\n\t\n\t\t\tcontainer.seq.push( uniformObject );\n\t\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\t\n\t\t}\n\t\n\t\tfunction parseUniform( activeInfo, addr, container ) {\n\t\n\t\t\tvar path = activeInfo.name,\n\t\t\t\tpathLength = path.length;\n\t\n\t\t\t// reset RegExp object, because of the early exit of a previous run\n\t\t\tRePathPart.lastIndex = 0;\n\t\n\t\t\tfor ( ; ; ) {\n\t\n\t\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\t\n\t\t\t\t\tid = match[ 1 ],\n\t\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\t\tsubscript = match[ 3 ];\n\t\n\t\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\t\n\t\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\t\n\t\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\n\t\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\t\n\t\t\t\t\tbreak;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\n\t\t\t\t\tvar map = container.map, next = map[ id ];\n\t\n\t\t\t\t\tif ( next === undefined ) {\n\t\n\t\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\t\taddUniform( container, next );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcontainer = next;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t// Root Container\n\t\n\t\tfunction WebGLUniforms( gl, program, renderer ) {\n\t\n\t\t\tUniformContainer.call( this );\n\t\n\t\t\tthis.renderer = renderer;\n\t\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\t\n\t\t\tfor ( var i = 0; i < n; ++ i ) {\n\t\n\t\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\t\tpath = info.name,\n\t\t\t\t\taddr = gl.getUniformLocation( program, path );\n\t\n\t\t\t\tparseUniform( info, addr, this );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\t\n\t\t\tvar u = this.map[ name ];\n\t\n\t\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\t\n\t\t};\n\t\n\t\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\t\n\t\t\tvar v = object[ name ];\n\t\n\t\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\t\n\t\t};\n\t\n\t\n\t\t// Static interface\n\t\n\t\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\t\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\t\n\t\t\t\tvar u = seq[ i ],\n\t\t\t\t\tv = values[ u.id ];\n\t\n\t\t\t\tif ( v.needsUpdate !== false ) {\n\t\n\t\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\t\tu.setValue( gl, v.value, renderer );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\t\n\t\t\tvar r = [];\n\t\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\t\n\t\t\t\tvar u = seq[ i ];\n\t\t\t\tif ( u.id in values ) r.push( u );\n\t\n\t\t\t}\n\t\n\t\t\treturn r;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\t\n\t\tfunction Color( r, g, b ) {\n\t\n\t\t\tif ( g === undefined && b === undefined ) {\n\t\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set( r );\n\t\n\t\t\t}\n\t\n\t\t\treturn this.setRGB( r, g, b );\n\t\n\t\t}\n\t\n\t\tObject.assign( Color.prototype, {\n\t\n\t\t\tisColor: true,\n\t\n\t\t\tr: 1, g: 1, b: 1,\n\t\n\t\t\tset: function ( value ) {\n\t\n\t\t\t\tif ( value && value.isColor ) {\n\t\n\t\t\t\t\tthis.copy( value );\n\t\n\t\t\t\t} else if ( typeof value === 'number' ) {\n\t\n\t\t\t\t\tthis.setHex( value );\n\t\n\t\t\t\t} else if ( typeof value === 'string' ) {\n\t\n\t\t\t\t\tthis.setStyle( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.r = scalar;\n\t\t\t\tthis.g = scalar;\n\t\t\t\tthis.b = scalar;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetHex: function ( hex ) {\n\t\n\t\t\t\thex = Math.floor( hex );\n\t\n\t\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\t\tthis.b = ( hex & 255 ) / 255;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetRGB: function ( r, g, b ) {\n\t\n\t\t\t\tthis.r = r;\n\t\t\t\tthis.g = g;\n\t\t\t\tthis.b = b;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetHSL: function () {\n\t\n\t\t\t\tfunction hue2rgb( p, q, t ) {\n\t\n\t\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\t\treturn p;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn function setHSL( h, s, l ) {\n\t\n\t\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\t\n\t\t\t\t\tif ( s === 0 ) {\n\t\n\t\t\t\t\t\tthis.r = this.g = this.b = l;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\t\tvar q = ( 2 * l ) - p;\n\t\n\t\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tsetStyle: function ( style ) {\n\t\n\t\t\t\tfunction handleAlpha( string ) {\n\t\n\t\t\t\t\tif ( string === undefined ) return;\n\t\n\t\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\tvar m;\n\t\n\t\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\t\n\t\t\t\t\t// rgb / hsl\n\t\n\t\t\t\t\tvar color;\n\t\t\t\t\tvar name = m[ 1 ];\n\t\t\t\t\tvar components = m[ 2 ];\n\t\n\t\t\t\t\tswitch ( name ) {\n\t\n\t\t\t\t\t\tcase 'rgb':\n\t\t\t\t\t\tcase 'rgba':\n\t\n\t\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\t\n\t\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\t\n\t\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\t\n\t\t\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\t\n\t\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\t\n\t\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\t\n\t\t\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'hsl':\n\t\t\t\t\t\tcase 'hsla':\n\t\n\t\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\t\n\t\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\t\n\t\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\t\n\t\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\t\n\t\t\t\t\t// hex color\n\t\n\t\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\t\tvar size = hex.length;\n\t\n\t\t\t\t\tif ( size === 3 ) {\n\t\n\t\t\t\t\t\t// #ff0\n\t\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\t\n\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t} else if ( size === 6 ) {\n\t\n\t\t\t\t\t\t// #ff0000\n\t\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\t\n\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( style && style.length > 0 ) {\n\t\n\t\t\t\t\t// color keywords\n\t\t\t\t\tvar hex = ColorKeywords[ style ];\n\t\n\t\t\t\t\tif ( hex !== undefined ) {\n\t\n\t\t\t\t\t\t// red\n\t\t\t\t\t\tthis.setHex( hex );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// unknown color\n\t\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( color ) {\n\t\n\t\t\t\tthis.r = color.r;\n\t\t\t\tthis.g = color.g;\n\t\t\t\tthis.b = color.b;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\t\n\t\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\t\n\t\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\t\n\t\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\t\n\t\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\t\n\t\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tconvertGammaToLinear: function () {\n\t\n\t\t\t\tvar r = this.r, g = this.g, b = this.b;\n\t\n\t\t\t\tthis.r = r * r;\n\t\t\t\tthis.g = g * g;\n\t\t\t\tthis.b = b * b;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tconvertLinearToGamma: function () {\n\t\n\t\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\t\tthis.b = Math.sqrt( this.b );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetHex: function () {\n\t\n\t\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\t\n\t\t\t},\n\t\n\t\t\tgetHexString: function () {\n\t\n\t\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\t\n\t\t\t},\n\t\n\t\t\tgetHSL: function ( optionalTarget ) {\n\t\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\n\t\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\t\n\t\t\t\tvar r = this.r, g = this.g, b = this.b;\n\t\n\t\t\t\tvar max = Math.max( r, g, b );\n\t\t\t\tvar min = Math.min( r, g, b );\n\t\n\t\t\t\tvar hue, saturation;\n\t\t\t\tvar lightness = ( min + max ) / 2.0;\n\t\n\t\t\t\tif ( min === max ) {\n\t\n\t\t\t\t\thue = 0;\n\t\t\t\t\tsaturation = 0;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar delta = max - min;\n\t\n\t\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\t\n\t\t\t\t\tswitch ( max ) {\n\t\n\t\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\thue /= 6;\n\t\n\t\t\t\t}\n\t\n\t\t\t\thsl.h = hue;\n\t\t\t\thsl.s = saturation;\n\t\t\t\thsl.l = lightness;\n\t\n\t\t\t\treturn hsl;\n\t\n\t\t\t},\n\t\n\t\t\tgetStyle: function () {\n\t\n\t\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\t\n\t\t\t},\n\t\n\t\t\toffsetHSL: function ( h, s, l ) {\n\t\n\t\t\t\tvar hsl = this.getHSL();\n\t\n\t\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\t\n\t\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tadd: function ( color ) {\n\t\n\t\t\t\tthis.r += color.r;\n\t\t\t\tthis.g += color.g;\n\t\t\t\tthis.b += color.b;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddColors: function ( color1, color2 ) {\n\t\n\t\t\t\tthis.r = color1.r + color2.r;\n\t\t\t\tthis.g = color1.g + color2.g;\n\t\t\t\tthis.b = color1.b + color2.b;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddScalar: function ( s ) {\n\t\n\t\t\t\tthis.r += s;\n\t\t\t\tthis.g += s;\n\t\t\t\tthis.b += s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsub: function( color ) {\n\t\n\t\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiply: function ( color ) {\n\t\n\t\t\t\tthis.r *= color.r;\n\t\t\t\tthis.g *= color.g;\n\t\t\t\tthis.b *= color.b;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyScalar: function ( s ) {\n\t\n\t\t\t\tthis.r *= s;\n\t\t\t\tthis.g *= s;\n\t\t\t\tthis.b *= s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tlerp: function ( color, alpha ) {\n\t\n\t\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( c ) {\n\t\n\t\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis.r = array[ offset ];\n\t\t\t\tthis.g = array[ offset + 1 ];\n\t\t\t\tthis.b = array[ offset + 2 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tarray[ offset ] = this.r;\n\t\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\t\tarray[ offset + 2 ] = this.b;\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function () {\n\t\n\t\t\t\treturn this.getHex();\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * Uniforms library for shared webgl shaders\n\t\t */\n\t\n\t\tvar UniformsLib = {\n\t\n\t\t\tcommon: {\n\t\n\t\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\t\topacity: { value: 1.0 },\n\t\n\t\t\t\tmap: { value: null },\n\t\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\t\n\t\t\t\talphaMap: { value: null },\n\t\n\t\t\t},\n\t\n\t\t\tspecularmap: {\n\t\n\t\t\t\tspecularMap: { value: null },\n\t\n\t\t\t},\n\t\n\t\t\tenvmap: {\n\t\n\t\t\t\tenvMap: { value: null },\n\t\t\t\tflipEnvMap: { value: - 1 },\n\t\t\t\treflectivity: { value: 1.0 },\n\t\t\t\trefractionRatio: { value: 0.98 }\n\t\n\t\t\t},\n\t\n\t\t\taomap: {\n\t\n\t\t\t\taoMap: { value: null },\n\t\t\t\taoMapIntensity: { value: 1 }\n\t\n\t\t\t},\n\t\n\t\t\tlightmap: {\n\t\n\t\t\t\tlightMap: { value: null },\n\t\t\t\tlightMapIntensity: { value: 1 }\n\t\n\t\t\t},\n\t\n\t\t\temissivemap: {\n\t\n\t\t\t\temissiveMap: { value: null }\n\t\n\t\t\t},\n\t\n\t\t\tbumpmap: {\n\t\n\t\t\t\tbumpMap: { value: null },\n\t\t\t\tbumpScale: { value: 1 }\n\t\n\t\t\t},\n\t\n\t\t\tnormalmap: {\n\t\n\t\t\t\tnormalMap: { value: null },\n\t\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\t\n\t\t\t},\n\t\n\t\t\tdisplacementmap: {\n\t\n\t\t\t\tdisplacementMap: { value: null },\n\t\t\t\tdisplacementScale: { value: 1 },\n\t\t\t\tdisplacementBias: { value: 0 }\n\t\n\t\t\t},\n\t\n\t\t\troughnessmap: {\n\t\n\t\t\t\troughnessMap: { value: null }\n\t\n\t\t\t},\n\t\n\t\t\tmetalnessmap: {\n\t\n\t\t\t\tmetalnessMap: { value: null }\n\t\n\t\t\t},\n\t\n\t\t\tgradientmap: {\n\t\n\t\t\t\tgradientMap: { value: null }\n\t\n\t\t\t},\n\t\n\t\t\tfog: {\n\t\n\t\t\t\tfogDensity: { value: 0.00025 },\n\t\t\t\tfogNear: { value: 1 },\n\t\t\t\tfogFar: { value: 2000 },\n\t\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\t\n\t\t\t},\n\t\n\t\t\tlights: {\n\t\n\t\t\t\tambientLightColor: { value: [] },\n\t\n\t\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {},\n\t\n\t\t\t\t\tshadow: {},\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t} },\n\t\n\t\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\t\tdirectionalShadowMatrix: { value: [] },\n\t\n\t\t\t\tspotLights: { value: [], properties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {},\n\t\n\t\t\t\t\tshadow: {},\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t} },\n\t\n\t\t\t\tspotShadowMap: { value: [] },\n\t\t\t\tspotShadowMatrix: { value: [] },\n\t\n\t\t\t\tpointLights: { value: [], properties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {},\n\t\n\t\t\t\t\tshadow: {},\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t} },\n\t\n\t\t\t\tpointShadowMap: { value: [] },\n\t\t\t\tpointShadowMatrix: { value: [] },\n\t\n\t\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t} },\n\t\n\t\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t} }\n\t\n\t\t\t},\n\t\n\t\t\tpoints: {\n\t\n\t\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\t\topacity: { value: 1.0 },\n\t\t\t\tsize: { value: 1.0 },\n\t\t\t\tscale: { value: 1.0 },\n\t\t\t\tmap: { value: null },\n\t\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * Uniform Utilities\n\t\t */\n\t\n\t\tvar UniformsUtils = {\n\t\n\t\t\tmerge: function ( uniforms ) {\n\t\n\t\t\t\tvar merged = {};\n\t\n\t\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\t\n\t\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\t\n\t\t\t\t\tfor ( var p in tmp ) {\n\t\n\t\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn merged;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function ( uniforms_src ) {\n\t\n\t\t\t\tvar uniforms_dst = {};\n\t\n\t\t\t\tfor ( var u in uniforms_src ) {\n\t\n\t\t\t\t\tuniforms_dst[ u ] = {};\n\t\n\t\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\t\n\t\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\t\n\t\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\t\n\t\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\t\n\t\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\t\n\t\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn uniforms_dst;\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\t\n\t\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\t\n\t\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\t\n\t\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\t\n\t\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\t\n\t\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\t\n\t\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\t\n\t\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\t\n\t\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\t\n\t\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\t\n\t\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\t\n\t\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\t\n\t\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\t\n\t\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\t\n\t\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\t\n\t\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\t\n\t\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\t\n\t\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\t\n\t\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\t\n\t\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\t\n\t\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\t\n\t\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\t\n\t\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\t\n\t\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\t\n\t\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\t\n\t\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\t\n\t\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\t\n\t\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\t\n\t\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\t\n\t\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\t\n\t\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\t\n\t\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\t\n\t\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\t\n\t\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\t\n\t\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\t\n\t\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\t\n\t\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\t\n\t\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\t\n\t\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\t\n\t\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\t\n\t\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\t\n\t\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\t\n\t\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\t\n\t\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\t\n\t\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\t\n\t\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\t\n\t\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\t\n\t\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\t\n\t\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\t\n\t\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\t\n\t\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\t\n\t\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\t\n\t\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\t\n\t\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\t\n\t\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\t\n\t\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\t\n\t\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\t\n\t\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\t\n\t\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\t\n\t\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\t\n\t\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\t\n\t\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\t\n\t\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\t\n\t\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\t\n\t\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\t\n\t\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\t\n\t\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\t\n\t\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\t\n\t\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\t\n\t\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\t\n\t\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\t\n\t\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\t\n\t\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\t\n\t\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\t\n\t\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\t\n\t\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\t\n\t\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\t\n\t\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\t\n\t\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\t\n\t\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\t\n\t\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\t\n\t\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\t\n\t\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\t\n\t\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\t\n\t\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\t\n\t\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\t\n\t\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\t\n\t\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\t\n\t\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\t\n\t\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\t\n\t\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\t\n\t\tvar ShaderChunk = {\n\t\t\talphamap_fragment: alphamap_fragment,\n\t\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\t\talphatest_fragment: alphatest_fragment,\n\t\t\taomap_fragment: aomap_fragment,\n\t\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\t\tbegin_vertex: begin_vertex,\n\t\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\t\tbsdfs: bsdfs,\n\t\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\t\tcolor_fragment: color_fragment,\n\t\t\tcolor_pars_fragment: color_pars_fragment,\n\t\t\tcolor_pars_vertex: color_pars_vertex,\n\t\t\tcolor_vertex: color_vertex,\n\t\t\tcommon: common,\n\t\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\t\temissivemap_fragment: emissivemap_fragment,\n\t\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\t\tencodings_fragment: encodings_fragment,\n\t\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\t\tenvmap_fragment: envmap_fragment,\n\t\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\t\tenvmap_vertex: envmap_vertex,\n\t\t\tfog_vertex: fog_vertex,\n\t\t\tfog_pars_vertex: fog_pars_vertex,\n\t\t\tfog_fragment: fog_fragment,\n\t\t\tfog_pars_fragment: fog_pars_fragment,\n\t\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\t\tlightmap_fragment: lightmap_fragment,\n\t\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\t\tlights_pars: lights_pars,\n\t\t\tlights_phong_fragment: lights_phong_fragment,\n\t\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\t\tlights_physical_fragment: lights_physical_fragment,\n\t\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\t\tlights_template: lights_template,\n\t\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\t\tmap_fragment: map_fragment,\n\t\t\tmap_pars_fragment: map_pars_fragment,\n\t\t\tmap_particle_fragment: map_particle_fragment,\n\t\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\t\tnormal_fragment: normal_fragment,\n\t\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\t\tpacking: packing,\n\t\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\t\tproject_vertex: project_vertex,\n\t\t\tdithering_fragment: dithering_fragment,\n\t\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\t\tshadowmap_vertex: shadowmap_vertex,\n\t\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\t\tskinbase_vertex: skinbase_vertex,\n\t\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\t\tskinning_vertex: skinning_vertex,\n\t\t\tskinnormal_vertex: skinnormal_vertex,\n\t\t\tspecularmap_fragment: specularmap_fragment,\n\t\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\t\ttonemapping_fragment: tonemapping_fragment,\n\t\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\t\tuv_pars_fragment: uv_pars_fragment,\n\t\t\tuv_pars_vertex: uv_pars_vertex,\n\t\t\tuv_vertex: uv_vertex,\n\t\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\t\tuv2_vertex: uv2_vertex,\n\t\t\tworldpos_vertex: worldpos_vertex,\n\t\n\t\t\tcube_frag: cube_frag,\n\t\t\tcube_vert: cube_vert,\n\t\t\tdepth_frag: depth_frag,\n\t\t\tdepth_vert: depth_vert,\n\t\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\t\tequirect_frag: equirect_frag,\n\t\t\tequirect_vert: equirect_vert,\n\t\t\tlinedashed_frag: linedashed_frag,\n\t\t\tlinedashed_vert: linedashed_vert,\n\t\t\tmeshbasic_frag: meshbasic_frag,\n\t\t\tmeshbasic_vert: meshbasic_vert,\n\t\t\tmeshlambert_frag: meshlambert_frag,\n\t\t\tmeshlambert_vert: meshlambert_vert,\n\t\t\tmeshphong_frag: meshphong_frag,\n\t\t\tmeshphong_vert: meshphong_vert,\n\t\t\tmeshphysical_frag: meshphysical_frag,\n\t\t\tmeshphysical_vert: meshphysical_vert,\n\t\t\tnormal_frag: normal_frag,\n\t\t\tnormal_vert: normal_vert,\n\t\t\tpoints_frag: points_frag,\n\t\t\tpoints_vert: points_vert,\n\t\t\tshadow_frag: shadow_frag,\n\t\t\tshadow_vert: shadow_vert\n\t\t};\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t */\n\t\n\t\tvar ShaderLib = {\n\t\n\t\t\tbasic: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.specularmap,\n\t\t\t\t\tUniformsLib.envmap,\n\t\t\t\t\tUniformsLib.aomap,\n\t\t\t\t\tUniformsLib.lightmap,\n\t\t\t\t\tUniformsLib.fog\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\n\t\t\t},\n\t\n\t\t\tlambert: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.specularmap,\n\t\t\t\t\tUniformsLib.envmap,\n\t\t\t\t\tUniformsLib.aomap,\n\t\t\t\t\tUniformsLib.lightmap,\n\t\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\t\tUniformsLib.fog,\n\t\t\t\t\tUniformsLib.lights,\n\t\t\t\t\t{\n\t\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t\t}\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\n\t\t\t},\n\t\n\t\t\tphong: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.specularmap,\n\t\t\t\t\tUniformsLib.envmap,\n\t\t\t\t\tUniformsLib.aomap,\n\t\t\t\t\tUniformsLib.lightmap,\n\t\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\t\tUniformsLib.normalmap,\n\t\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\t\tUniformsLib.fog,\n\t\t\t\t\tUniformsLib.lights,\n\t\t\t\t\t{\n\t\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t\t}\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\n\t\t\t},\n\t\n\t\t\tstandard: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.envmap,\n\t\t\t\t\tUniformsLib.aomap,\n\t\t\t\t\tUniformsLib.lightmap,\n\t\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\t\tUniformsLib.normalmap,\n\t\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\t\tUniformsLib.fog,\n\t\t\t\t\tUniformsLib.lights,\n\t\t\t\t\t{\n\t\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t\t}\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\n\t\t\t},\n\t\n\t\t\tpoints: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.points,\n\t\t\t\t\tUniformsLib.fog\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\n\t\t\t},\n\t\n\t\t\tdashed: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.fog,\n\t\t\t\t\t{\n\t\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t\t}\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\n\t\t\t},\n\t\n\t\t\tdepth: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.displacementmap\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\n\t\t\t},\n\t\n\t\t\tnormal: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\t\tUniformsLib.normalmap,\n\t\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t\t}\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\t\tfragmentShader: ShaderChunk.normal_frag\n\t\n\t\t\t},\n\t\n\t\t\t/* -------------------------------------------------------------------------\n\t\t\t//\tCube map shader\n\t\t\t ------------------------------------------------------------------------- */\n\t\n\t\t\tcube: {\n\t\n\t\t\t\tuniforms: {\n\t\t\t\t\ttCube: { value: null },\n\t\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t},\n\t\n\t\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\n\t\t\t},\n\t\n\t\t\tequirect: {\n\t\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: { value: null },\n\t\t\t\t},\n\t\n\t\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\n\t\t\t},\n\t\n\t\t\tdistanceRGBA: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.common,\n\t\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t\t{\n\t\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t\t}\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\n\t\t\t},\n\t\n\t\t\tshadow: {\n\t\n\t\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\t\tUniformsLib.lights,\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t\t},\n\t\t\t\t] ),\n\t\n\t\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tShaderLib.physical = {\n\t\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tShaderLib.standard.uniforms,\n\t\t\t\t{\n\t\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Box2( min, max ) {\n\t\n\t\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\t\n\t\t}\n\t\n\t\tObject.assign( Box2.prototype, {\n\t\n\t\t\tset: function ( min, max ) {\n\t\n\t\t\t\tthis.min.copy( min );\n\t\t\t\tthis.max.copy( max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromPoints: function ( points ) {\n\t\n\t\t\t\tthis.makeEmpty();\n\t\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.expandByPoint( points[ i ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromCenterAndSize: function () {\n\t\n\t\t\t\tvar v1 = new Vector2();\n\t\n\t\t\t\treturn function setFromCenterAndSize( center, size ) {\n\t\n\t\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\t\tthis.max.copy( center ).add( halfSize );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( box ) {\n\t\n\t\t\t\tthis.min.copy( box.min );\n\t\t\t\tthis.max.copy( box.max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeEmpty: function () {\n\t\n\t\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\t\tthis.max.x = this.max.y = - Infinity;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tisEmpty: function () {\n\t\n\t\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\n\t\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\t\n\t\t\t},\n\t\n\t\t\tgetCenter: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\t\n\t\t\t},\n\t\n\t\t\tgetSize: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\t\n\t\t\t},\n\t\n\t\t\texpandByPoint: function ( point ) {\n\t\n\t\t\t\tthis.min.min( point );\n\t\t\t\tthis.max.max( point );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\texpandByVector: function ( vector ) {\n\t\n\t\t\t\tthis.min.sub( vector );\n\t\t\t\tthis.max.add( vector );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\texpandByScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.min.addScalar( - scalar );\n\t\t\t\tthis.max.addScalar( scalar );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcontainsPoint: function ( point ) {\n\t\n\t\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\t\n\t\t\t},\n\t\n\t\t\tcontainsBox: function ( box ) {\n\t\n\t\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\n\t\t\t},\n\t\n\t\t\tgetParameter: function ( point, optionalTarget ) {\n\t\n\t\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t\t// has a size dimension of 0.\n\t\n\t\t\t\tvar result = optionalTarget || new Vector2();\n\t\n\t\t\t\treturn result.set(\n\t\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t\t);\n\t\n\t\t\t},\n\t\n\t\t\tintersectsBox: function ( box ) {\n\t\n\t\t\t\t// using 4 splitting planes to rule out intersections\n\t\n\t\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\n\t\t\t},\n\t\n\t\t\tclampPoint: function ( point, optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToPoint: function () {\n\t\n\t\t\t\tvar v1 = new Vector2();\n\t\n\t\t\t\treturn function distanceToPoint( point ) {\n\t\n\t\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\t\treturn clampedPoint.sub( point ).length();\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersect: function ( box ) {\n\t\n\t\t\t\tthis.min.max( box.min );\n\t\t\t\tthis.max.min( box.max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tunion: function ( box ) {\n\t\n\t\t\t\tthis.min.min( box.min );\n\t\t\t\tthis.max.max( box.max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttranslate: function ( offset ) {\n\t\n\t\t\t\tthis.min.add( offset );\n\t\t\t\tthis.max.add( offset );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( box ) {\n\t\n\t\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {\n\t\n\t\t\tvar vertexBuffer, elementBuffer;\n\t\t\tvar shader, program, attributes, uniforms;\n\t\n\t\t\tvar tempTexture, occlusionTexture;\n\t\n\t\t\tfunction init() {\n\t\n\t\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t\t- 1,  1,  0, 1\n\t\t\t\t] );\n\t\n\t\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t0, 2, 3\n\t\t\t\t] );\n\t\n\t\t\t\t// buffers\n\t\n\t\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\t\telementBuffer    = gl.createBuffer();\n\t\n\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\t\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\t\n\t\t\t\t// textures\n\t\n\t\t\t\ttempTexture      = gl.createTexture();\n\t\t\t\tocclusionTexture = gl.createTexture();\n\t\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\n\t\t\t\tshader = {\n\t\n\t\t\t\t\tvertexShader: [\n\t\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\n\t\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\t\"uniform float rotation;\",\n\t\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\t\n\t\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\t\"attribute vec2 uv;\",\n\t\n\t\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\t\"varying float vVisibility;\",\n\t\n\t\t\t\t\t\t\"void main() {\",\n\t\n\t\t\t\t\t\t\t\"vUV = uv;\",\n\t\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\n\t\n\t\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\t\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\t\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\t\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\t\n\t\t\t\t\t\t\t\"}\",\n\t\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\t\n\t\t\t\t\t\t\"}\"\n\t\n\t\t\t\t\t].join( \"\\n\" ),\n\t\n\t\t\t\t\tfragmentShader: [\n\t\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\n\t\n\t\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\t\"uniform vec3 color;\",\n\t\n\t\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\t\"varying float vVisibility;\",\n\t\n\t\t\t\t\t\t\"void main() {\",\n\t\n\t\t\t\t\t\t\t// pink square\n\t\n\t\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\t\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\t\n\t\t\t\t\t\t\t// restore\n\t\n\t\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\t\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\t\n\t\t\t\t\t\t\t// flare\n\t\n\t\t\t\t\t\t\t\"} else {\",\n\t\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\t\n\t\t\t\t\t\t\t\"}\",\n\t\n\t\t\t\t\t\t\"}\"\n\t\n\t\t\t\t\t].join( \"\\n\" )\n\t\n\t\t\t\t};\n\t\n\t\t\t\tprogram = createProgram( shader );\n\t\n\t\t\t\tattributes = {\n\t\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t\t};\n\t\n\t\t\t\tuniforms = {\n\t\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t * Render lens flares\n\t\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t\t *         reads these back and calculates occlusion.\n\t\t\t */\n\t\n\t\t\tthis.render = function ( flares, scene, camera, viewport ) {\n\t\n\t\t\t\tif ( flares.length === 0 ) return;\n\t\n\t\t\t\tvar tempPosition = new Vector3();\n\t\n\t\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\t\n\t\t\t\tvar size = 16 / viewport.w,\n\t\t\t\t\tscale = new Vector2( size * invAspect, size );\n\t\n\t\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\t\n\t\t\t\tvar validArea = new Box2();\n\t\n\t\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\t\n\t\t\t\tif ( program === undefined ) {\n\t\n\t\t\t\t\tinit();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.useProgram( program );\n\t\n\t\t\t\tstate.initAttributes();\n\t\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\t\tstate.disableUnusedAttributes();\n\t\n\t\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t\t// setup gl and common used attribs/uniforms\n\t\n\t\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\t\tgl.uniform1i( uniforms.map, 1 );\n\t\n\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\t\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\n\t\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\t\tstate.buffers.depth.setMask( false );\n\t\n\t\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\t\tscale.set( size * invAspect, size );\n\t\n\t\t\t\t\t// calc object screen position\n\t\n\t\t\t\t\tvar flare = flares[ i ];\n\t\n\t\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\t\n\t\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\t\n\t\t\t\t\t// setup arrays for gl programs\n\t\n\t\t\t\t\tscreenPosition.copy( tempPosition );\n\t\n\t\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\t\n\t\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\t\n\t\t\t\t\t// screen cull\n\t\n\t\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\t\n\t\t\t\t\t\t// save current RGB to temp texture\n\t\n\t\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\t\n\t\n\t\t\t\t\t\t// render pink quad\n\t\n\t\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\n\t\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\t\n\t\n\t\t\t\t\t\t// copy result to occlusionMap\n\t\n\t\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\t\n\t\n\t\t\t\t\t\t// restore graphics\n\t\n\t\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\t\n\t\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\t\n\t\n\t\t\t\t\t\t// update object positions\n\t\n\t\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\t\n\t\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\t\n\t\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tflare.updateLensFlares();\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// render flares\n\t\n\t\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\t\tstate.enable( gl.BLEND );\n\t\n\t\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\t\n\t\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\t\n\t\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\t\n\t\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\t\n\t\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\t\tscale.y = size;\n\t\n\t\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\t\n\t\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\t\n\t\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\n\t\t\t\t\t\t\t\ttextures.setTexture2D( sprite.texture, 1 );\n\t\n\t\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// restore gl\n\t\n\t\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\t\tstate.buffers.depth.setMask( true );\n\t\n\t\t\t\tstate.reset();\n\t\n\t\t\t};\n\t\n\t\t\tfunction createProgram( shader ) {\n\t\n\t\t\t\tvar program = gl.createProgram();\n\t\n\t\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\n\t\t\t\tvar prefix = \"precision \" + capabilities.precision + \" float;\\n\";\n\t\n\t\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\t\n\t\t\t\tgl.compileShader( fragmentShader );\n\t\t\t\tgl.compileShader( vertexShader );\n\t\n\t\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\t\tgl.attachShader( program, vertexShader );\n\t\n\t\t\t\tgl.linkProgram( program );\n\t\n\t\t\t\treturn program;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\t\n\t\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\t\n\t\t\tthis.needsUpdate = true;\n\t\n\t\t}\n\t\n\t\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\t\tCanvasTexture.prototype.constructor = CanvasTexture;\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\t\n\t\t\tvar vertexBuffer, elementBuffer;\n\t\t\tvar program, attributes, uniforms;\n\t\n\t\t\tvar texture;\n\t\n\t\t\t// decompose matrixWorld\n\t\n\t\t\tvar spritePosition = new Vector3();\n\t\t\tvar spriteRotation = new Quaternion();\n\t\t\tvar spriteScale = new Vector3();\n\t\n\t\t\tfunction init() {\n\t\n\t\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t\t] );\n\t\n\t\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t0, 2, 3\n\t\t\t\t] );\n\t\n\t\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\t\telementBuffer = gl.createBuffer();\n\t\n\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\t\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\t\n\t\t\t\tprogram = createProgram();\n\t\n\t\t\t\tattributes = {\n\t\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t\t};\n\t\n\t\t\t\tuniforms = {\n\t\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\t\n\t\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\t\n\t\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\t\n\t\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\t\n\t\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\t\n\t\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t\t};\n\t\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = 8;\n\t\t\t\tcanvas.height = 8;\n\t\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.fillStyle = 'white';\n\t\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\t\n\t\t\t\ttexture = new CanvasTexture( canvas );\n\t\n\t\t\t}\n\t\n\t\t\tthis.render = function ( sprites, scene, camera ) {\n\t\n\t\t\t\tif ( sprites.length === 0 ) return;\n\t\n\t\t\t\t// setup gl\n\t\n\t\t\t\tif ( program === undefined ) {\n\t\n\t\t\t\t\tinit();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.useProgram( program );\n\t\n\t\t\t\tstate.initAttributes();\n\t\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\t\tstate.disableUnusedAttributes();\n\t\n\t\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\t\tstate.enable( gl.BLEND );\n\t\n\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\t\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\n\t\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\t\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tgl.uniform1i( uniforms.map, 0 );\n\t\n\t\t\t\tvar oldFogType = 0;\n\t\t\t\tvar sceneFogType = 0;\n\t\t\t\tvar fog = scene.fog;\n\t\n\t\t\t\tif ( fog ) {\n\t\n\t\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\t\n\t\t\t\t\tif ( fog.isFog ) {\n\t\n\t\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\t\n\t\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\t\toldFogType = 1;\n\t\t\t\t\t\tsceneFogType = 1;\n\t\n\t\t\t\t\t} else if ( fog.isFogExp2 ) {\n\t\n\t\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\t\n\t\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\t\toldFogType = 2;\n\t\t\t\t\t\tsceneFogType = 2;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\t\toldFogType = 0;\n\t\t\t\t\tsceneFogType = 0;\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\t// update positions and sort\n\t\n\t\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar sprite = sprites[ i ];\n\t\n\t\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tsprites.sort( painterSortStable );\n\t\n\t\t\t\t// render all sprites\n\t\n\t\t\t\tvar scale = [];\n\t\n\t\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\t\tvar material = sprite.material;\n\t\n\t\t\t\t\tif ( material.visible === false ) continue;\n\t\n\t\t\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\t\n\t\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\t\n\t\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\t\n\t\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\t\tscale[ 1 ] = spriteScale.y;\n\t\n\t\t\t\t\tvar fogType = 0;\n\t\n\t\t\t\t\tif ( scene.fog && material.fog ) {\n\t\n\t\t\t\t\t\tfogType = sceneFogType;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( oldFogType !== fogType ) {\n\t\n\t\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\t\toldFogType = fogType;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( material.map !== null ) {\n\t\n\t\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\t\n\t\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\t\n\t\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\n\t\t\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\t\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\t\n\t\t\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// restore gl\n\t\n\t\t\t\tstate.enable( gl.CULL_FACE );\n\t\n\t\t\t\tstate.reset();\n\t\n\t\t\t};\n\t\n\t\t\tfunction createProgram() {\n\t\n\t\t\t\tvar program = gl.createProgram();\n\t\n\t\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\n\t\t\t\tgl.shaderSource( vertexShader, [\n\t\n\t\t\t\t\t'precision ' + capabilities.precision + ' float;',\n\t\n\t\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\t\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t'uniform float rotation;',\n\t\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t\t'uniform vec2 uvScale;',\n\t\n\t\t\t\t\t'attribute vec2 position;',\n\t\t\t\t\t'attribute vec2 uv;',\n\t\n\t\t\t\t\t'varying vec2 vUV;',\n\t\n\t\t\t\t\t'void main() {',\n\t\n\t\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\t\n\t\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\t\n\t\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\t\n\t\t\t\t\t\t'vec4 finalPosition;',\n\t\n\t\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\t\n\t\t\t\t\t\t'gl_Position = finalPosition;',\n\t\n\t\t\t\t\t'}'\n\t\n\t\t\t\t].join( '\\n' ) );\n\t\n\t\t\t\tgl.shaderSource( fragmentShader, [\n\t\n\t\t\t\t\t'precision ' + capabilities.precision + ' float;',\n\t\n\t\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\t\n\t\t\t\t\t'uniform vec3 color;',\n\t\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t\t'uniform float opacity;',\n\t\n\t\t\t\t\t'uniform int fogType;',\n\t\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t\t'uniform float fogNear;',\n\t\t\t\t\t'uniform float fogFar;',\n\t\t\t\t\t'uniform float alphaTest;',\n\t\n\t\t\t\t\t'varying vec2 vUV;',\n\t\n\t\t\t\t\t'void main() {',\n\t\n\t\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\t\n\t\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\t\n\t\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\t\n\t\t\t\t\t\t'if ( fogType > 0 ) {',\n\t\n\t\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t\t'float fogFactor = 0.0;',\n\t\n\t\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\t\n\t\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\t\n\t\t\t\t\t\t\t'} else {',\n\t\n\t\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\t\n\t\t\t\t\t\t\t'}',\n\t\n\t\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\t\n\t\t\t\t\t\t'}',\n\t\n\t\t\t\t\t'}'\n\t\n\t\t\t\t].join( '\\n' ) );\n\t\n\t\t\t\tgl.compileShader( vertexShader );\n\t\t\t\tgl.compileShader( fragmentShader );\n\t\n\t\t\t\tgl.attachShader( program, vertexShader );\n\t\t\t\tgl.attachShader( program, fragmentShader );\n\t\n\t\t\t\tgl.linkProgram( program );\n\t\n\t\t\t\treturn program;\n\t\n\t\t\t}\n\t\n\t\t\tfunction painterSortStable( a, b ) {\n\t\n\t\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\t\n\t\t\t\t\treturn a.renderOrder - b.renderOrder;\n\t\n\t\t\t\t} else if ( a.z !== b.z ) {\n\t\n\t\t\t\t\treturn b.z - a.z;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\treturn b.id - a.id;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tvar materialId = 0;\n\t\n\t\tfunction Material() {\n\t\n\t\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\n\t\t\tthis.fog = true;\n\t\t\tthis.lights = true;\n\t\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\t\n\t\t\tthis.opacity = 1;\n\t\t\tthis.transparent = false;\n\t\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\n\t\t\tthis.colorWrite = true;\n\t\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\t\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\n\t\t\tthis.dithering = false;\n\t\n\t\t\tthis.alphaTest = 0;\n\t\t\tthis.premultipliedAlpha = false;\n\t\n\t\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\t\n\t\t\tthis.visible = true;\n\t\n\t\t\tthis.userData = {};\n\t\n\t\t\tthis.needsUpdate = true;\n\t\n\t\t}\n\t\n\t\tObject.assign( Material.prototype, EventDispatcher.prototype, {\n\t\n\t\t\tisMaterial: true,\n\t\n\t\t\tonBeforeCompile: function () {},\n\t\n\t\t\tsetValues: function ( values ) {\n\t\n\t\t\t\tif ( values === undefined ) return;\n\t\n\t\t\t\tfor ( var key in values ) {\n\t\n\t\t\t\t\tvar newValue = values[ key ];\n\t\n\t\t\t\t\tif ( newValue === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\t\tif ( key === 'shading' ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar currentValue = this[ key ];\n\t\n\t\t\t\t\tif ( currentValue === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\t\n\t\t\t\t\t\tcurrentValue.set( newValue );\n\t\n\t\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\t\n\t\t\t\t\t\tcurrentValue.copy( newValue );\n\t\n\t\t\t\t\t} else if ( key === 'overdraw' ) {\n\t\n\t\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\t\tthis[ key ] = Number( newValue );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis[ key ] = newValue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar isRoot = meta === undefined;\n\t\n\t\t\t\tif ( isRoot ) {\n\t\n\t\t\t\t\tmeta = {\n\t\t\t\t\t\ttextures: {},\n\t\t\t\t\t\timages: {}\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar data = {\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tversion: 4.5,\n\t\t\t\t\t\ttype: 'Material',\n\t\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// standard Material serialization\n\t\t\t\tdata.uuid = this.uuid;\n\t\t\t\tdata.type = this.type;\n\t\n\t\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\n\t\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\t\n\t\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\t\n\t\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\t\n\t\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\t\n\t\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\n\t\t\t\t}\n\t\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\t\n\t\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\n\t\t\t\t}\n\t\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\t\n\t\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\n\t\t\t\t}\n\t\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\t\n\t\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\n\t\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\t\n\t\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\t\n\t\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\t\n\t\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\t\n\t\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\t\n\t\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\t\tdata.depthTest = this.depthTest;\n\t\t\t\tdata.depthWrite = this.depthWrite;\n\t\n\t\t\t\tif ( this.dithering === true ) data.dithering = true;\n\t\n\t\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\n\t\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\t\n\t\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\t\t\tif ( this.skinning === true ) data.skinning = true;\n\t\n\t\t\t\tif ( this.visible === false ) data.visible = false;\n\t\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\t\n\t\t\t\t// TODO: Copied from Object3D.toJSON\n\t\n\t\t\t\tfunction extractFromCache( cache ) {\n\t\n\t\t\t\t\tvar values = [];\n\t\n\t\t\t\t\tfor ( var key in cache ) {\n\t\n\t\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\t\tvalues.push( data );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn values;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( isRoot ) {\n\t\n\t\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\t\tvar images = extractFromCache( meta.images );\n\t\n\t\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\t\tif ( images.length > 0 ) data.images = images;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.name = source.name;\n\t\n\t\t\t\tthis.fog = source.fog;\n\t\t\t\tthis.lights = source.lights;\n\t\n\t\t\t\tthis.blending = source.blending;\n\t\t\t\tthis.side = source.side;\n\t\t\t\tthis.flatShading = source.flatShading;\n\t\t\t\tthis.vertexColors = source.vertexColors;\n\t\n\t\t\t\tthis.opacity = source.opacity;\n\t\t\t\tthis.transparent = source.transparent;\n\t\n\t\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\t\tthis.blendDst = source.blendDst;\n\t\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\n\t\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\t\tthis.depthTest = source.depthTest;\n\t\t\t\tthis.depthWrite = source.depthWrite;\n\t\n\t\t\t\tthis.colorWrite = source.colorWrite;\n\t\n\t\t\t\tthis.precision = source.precision;\n\t\n\t\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\n\t\t\t\tthis.dithering = source.dithering;\n\t\n\t\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\n\t\t\t\tthis.overdraw = source.overdraw;\n\t\n\t\t\t\tthis.visible = source.visible;\n\t\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\t\n\t\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\n\t\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\t\tdstPlanes = null;\n\t\n\t\t\t\tif ( srcPlanes !== null ) {\n\t\n\t\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\t\tdstPlanes = new Array( n );\n\t\n\t\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.clippingPlanes = dstPlanes;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdispose: function () {\n\t\n\t\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  defines: { \"label\" : \"value\" },\n\t\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t\t *\n\t\t *  fragmentShader: <string>,\n\t\t *  vertexShader: <string>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>,\n\t\t *\n\t\t *  lights: <bool>,\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>,\n\t\t *  morphNormals: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction ShaderMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'ShaderMaterial';\n\t\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\n\t\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\t\n\t\t\tthis.linewidth = 1;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\n\t\t\tthis.fog = false; // set to use scene fog\n\t\t\tthis.lights = false; // set to use scene lights\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\t\n\t\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\t\tthis.morphTargets = false; // set to use morph targets\n\t\t\tthis.morphNormals = false; // set to use morph normals\n\t\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false, // set to use derivatives\n\t\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t\t};\n\t\n\t\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t\t'uv': [ 0, 0 ],\n\t\t\t\t'uv2': [ 0, 0 ]\n\t\t\t};\n\t\n\t\t\tthis.index0AttributeName = undefined;\n\t\n\t\t\tif ( parameters !== undefined ) {\n\t\n\t\t\t\tif ( parameters.attributes !== undefined ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.setValues( parameters );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tShaderMaterial.prototype = Object.create( Material.prototype );\n\t\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\t\n\t\tShaderMaterial.prototype.isShaderMaterial = true;\n\t\n\t\tShaderMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\n\t\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\t\n\t\t\tthis.defines = source.defines;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\n\t\t\tthis.extensions = source.extensions;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\t\n\t\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\t\n\t\t\tdata.uniforms = this.uniforms;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\n\t\t\treturn data;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author bhouston / https://clara.io\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t *\n\t\t * parameters = {\n\t\t *\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  alphaMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  displacementMap: new THREE.Texture( <Image> ),\n\t\t *  displacementScale: <float>,\n\t\t *  displacementBias: <float>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshDepthMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.alphaMap = null;\n\t\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\n\t\t\tthis.fog = false;\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\t\n\t\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\t\n\t\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t *\n\t\t * parameters = {\n\t\t *\n\t\t *  referencePosition: <float>,\n\t\t *  nearDistance: <float>,\n\t\t *  farDistance: <float>,\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>,\n\t\t *\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  alphaMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  displacementMap: new THREE.Texture( <Image> ),\n\t\t *  displacementScale: <float>,\n\t\t *  displacementBias: <float>\n\t\t *\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshDistanceMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.alphaMap = null;\n\t\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\n\t\t\tthis.fog = false;\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\t\n\t\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\t\n\t\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.referencePosition.copy( source.referencePosition );\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction Box3( min, max ) {\n\t\n\t\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\t\n\t\t}\n\t\n\t\tObject.assign( Box3.prototype, {\n\t\n\t\t\tisBox3: true,\n\t\n\t\t\tset: function ( min, max ) {\n\t\n\t\t\t\tthis.min.copy( min );\n\t\t\t\tthis.max.copy( max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromArray: function ( array ) {\n\t\n\t\t\t\tvar minX = + Infinity;\n\t\t\t\tvar minY = + Infinity;\n\t\t\t\tvar minZ = + Infinity;\n\t\n\t\t\t\tvar maxX = - Infinity;\n\t\t\t\tvar maxY = - Infinity;\n\t\t\t\tvar maxZ = - Infinity;\n\t\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\tvar x = array[ i ];\n\t\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\t\tvar z = array[ i + 2 ];\n\t\n\t\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\t\tif ( z < minZ ) minZ = z;\n\t\n\t\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\t\tif ( z > maxZ ) maxZ = z;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\t\tthis.max.set( maxX, maxY, maxZ );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromBufferAttribute: function ( attribute ) {\n\t\n\t\t\t\tvar minX = + Infinity;\n\t\t\t\tvar minY = + Infinity;\n\t\t\t\tvar minZ = + Infinity;\n\t\n\t\t\t\tvar maxX = - Infinity;\n\t\t\t\tvar maxY = - Infinity;\n\t\t\t\tvar maxZ = - Infinity;\n\t\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\t\tvar z = attribute.getZ( i );\n\t\n\t\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\t\tif ( z < minZ ) minZ = z;\n\t\n\t\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\t\tif ( z > maxZ ) maxZ = z;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\t\tthis.max.set( maxX, maxY, maxZ );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromPoints: function ( points ) {\n\t\n\t\t\t\tthis.makeEmpty();\n\t\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.expandByPoint( points[ i ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromCenterAndSize: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function setFromCenterAndSize( center, size ) {\n\t\n\t\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\n\t\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\t\tthis.max.copy( center ).add( halfSize );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tsetFromObject: function ( object ) {\n\t\n\t\t\t\tthis.makeEmpty();\n\t\n\t\t\t\treturn this.expandByObject( object );\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( box ) {\n\t\n\t\t\t\tthis.min.copy( box.min );\n\t\t\t\tthis.max.copy( box.max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmakeEmpty: function () {\n\t\n\t\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tisEmpty: function () {\n\t\n\t\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\n\t\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\t\n\t\t\t},\n\t\n\t\t\tgetCenter: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\t\n\t\t\t},\n\t\n\t\t\tgetSize: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\t\n\t\t\t},\n\t\n\t\t\texpandByPoint: function ( point ) {\n\t\n\t\t\t\tthis.min.min( point );\n\t\t\t\tthis.max.max( point );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\texpandByVector: function ( vector ) {\n\t\n\t\t\t\tthis.min.sub( vector );\n\t\t\t\tthis.max.add( vector );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\texpandByScalar: function ( scalar ) {\n\t\n\t\t\t\tthis.min.addScalar( - scalar );\n\t\t\t\tthis.max.addScalar( scalar );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\texpandByObject: function () {\n\t\n\t\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t\t// accounting for both the object's, and children's, world transforms\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function expandByObject( object ) {\n\t\n\t\t\t\t\tvar scope = this;\n\t\n\t\t\t\t\tobject.updateMatrixWorld( true );\n\t\n\t\t\t\t\tobject.traverse( function ( node ) {\n\t\n\t\t\t\t\t\tvar i, l;\n\t\n\t\t\t\t\t\tvar geometry = node.geometry;\n\t\n\t\t\t\t\t\tif ( geometry !== undefined ) {\n\t\n\t\t\t\t\t\t\tif ( geometry.isGeometry ) {\n\t\n\t\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\t\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\t\n\t\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\t\n\t\t\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\t\n\t\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tcontainsPoint: function ( point ) {\n\t\n\t\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\t\n\t\t\t},\n\t\n\t\t\tcontainsBox: function ( box ) {\n\t\n\t\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\n\t\t\t},\n\t\n\t\t\tgetParameter: function ( point, optionalTarget ) {\n\t\n\t\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t\t// has a size dimension of 0.\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\treturn result.set(\n\t\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t\t);\n\t\n\t\t\t},\n\t\n\t\t\tintersectsBox: function ( box ) {\n\t\n\t\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\n\t\t\t},\n\t\n\t\t\tintersectsSphere: ( function () {\n\t\n\t\t\t\tvar closestPoint = new Vector3();\n\t\n\t\t\t\treturn function intersectsSphere( sphere ) {\n\t\n\t\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\t\n\t\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\t\n\t\t\t\t};\n\t\n\t\t\t} )(),\n\t\n\t\t\tintersectsPlane: function ( plane ) {\n\t\n\t\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\n\t\t\t\tvar min, max;\n\t\n\t\t\t\tif ( plane.normal.x > 0 ) {\n\t\n\t\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( plane.normal.y > 0 ) {\n\t\n\t\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( plane.normal.z > 0 ) {\n\t\n\t\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\t\n\t\t\t},\n\t\n\t\t\tclampPoint: function ( point, optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToPoint: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function distanceToPoint( point ) {\n\t\n\t\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\t\treturn clampedPoint.sub( point ).length();\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tgetBoundingSphere: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Sphere();\n\t\n\t\t\t\t\tthis.getCenter( result.center );\n\t\n\t\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\t\n\t\t\t\t\treturn result;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersect: function ( box ) {\n\t\n\t\t\t\tthis.min.max( box.min );\n\t\t\t\tthis.max.min( box.max );\n\t\n\t\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tunion: function ( box ) {\n\t\n\t\t\t\tthis.min.min( box.min );\n\t\t\t\tthis.max.max( box.max );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix4: function () {\n\t\n\t\t\t\tvar points = [\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3(),\n\t\t\t\t\tnew Vector3()\n\t\t\t\t];\n\t\n\t\t\t\treturn function applyMatrix4( matrix ) {\n\t\n\t\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\t\tif( this.isEmpty() ) return this;\n\t\n\t\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\t\n\t\t\t\t\tthis.setFromPoints( points );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslate: function ( offset ) {\n\t\n\t\t\t\tthis.min.add( offset );\n\t\t\t\tthis.max.add( offset );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( box ) {\n\t\n\t\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Sphere( center, radius ) {\n\t\n\t\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\t\n\t\t}\n\t\n\t\tObject.assign( Sphere.prototype, {\n\t\n\t\t\tset: function ( center, radius ) {\n\t\n\t\t\t\tthis.center.copy( center );\n\t\t\t\tthis.radius = radius;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromPoints: function () {\n\t\n\t\t\t\tvar box = new Box3();\n\t\n\t\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\t\n\t\t\t\t\tvar center = this.center;\n\t\n\t\t\t\t\tif ( optionalCenter !== undefined ) {\n\t\n\t\t\t\t\t\tcenter.copy( optionalCenter );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar maxRadiusSq = 0;\n\t\n\t\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( sphere ) {\n\t\n\t\t\t\tthis.center.copy( sphere.center );\n\t\t\t\tthis.radius = sphere.radius;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tempty: function () {\n\t\n\t\t\t\treturn ( this.radius <= 0 );\n\t\n\t\t\t},\n\t\n\t\t\tcontainsPoint: function ( point ) {\n\t\n\t\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToPoint: function ( point ) {\n\t\n\t\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsSphere: function ( sphere ) {\n\t\n\t\t\t\tvar radiusSum = this.radius + sphere.radius;\n\t\n\t\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsBox: function ( box ) {\n\t\n\t\t\t\treturn box.intersectsSphere( this );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsPlane: function ( plane ) {\n\t\n\t\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\t\n\t\t\t},\n\t\n\t\t\tclampPoint: function ( point, optionalTarget ) {\n\t\n\t\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\tresult.copy( point );\n\t\n\t\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\t\n\t\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t},\n\t\n\t\t\tgetBoundingBox: function ( optionalTarget ) {\n\t\n\t\t\t\tvar box = optionalTarget || new Box3();\n\t\n\t\t\t\tbox.set( this.center, this.center );\n\t\t\t\tbox.expandByScalar( this.radius );\n\t\n\t\t\t\treturn box;\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix4: function ( matrix ) {\n\t\n\t\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttranslate: function ( offset ) {\n\t\n\t\t\t\tthis.center.add( offset );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( sphere ) {\n\t\n\t\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author bhouston / http://clara.io\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction Matrix3() {\n\t\n\t\t\tthis.elements = [\n\t\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\t\n\t\t\t];\n\t\n\t\t\tif ( arguments.length > 0 ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tObject.assign( Matrix3.prototype, {\n\t\n\t\t\tisMatrix3: true,\n\t\n\t\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tidentity: function () {\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\t1, 0, 0,\n\t\t\t\t\t0, 1, 0,\n\t\t\t\t\t0, 0, 1\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().fromArray( this.elements );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( m ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\t\n\t\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromMatrix4: function ( m ) {\n\t\n\t\t\t\tvar me = m.elements;\n\t\n\t\t\t\tthis.set(\n\t\n\t\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\t\n\t\t\t\t);\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tapplyToBufferAttribute: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function applyToBufferAttribute( attribute ) {\n\t\n\t\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\t\tv1.z = attribute.getZ( i );\n\t\n\t\t\t\t\t\tv1.applyMatrix3( this );\n\t\n\t\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn attribute;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tmultiply: function ( m ) {\n\t\n\t\t\t\treturn this.multiplyMatrices( this, m );\n\t\n\t\t\t},\n\t\n\t\t\tpremultiply: function ( m ) {\n\t\n\t\t\t\treturn this.multiplyMatrices( m, this );\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyMatrices: function ( a, b ) {\n\t\n\t\t\t\tvar ae = a.elements;\n\t\t\t\tvar be = b.elements;\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\t\n\t\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\t\n\t\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\n\t\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\n\t\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tmultiplyScalar: function ( s ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdeterminant: function () {\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\t\n\t\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\n\t\t\t},\n\t\n\t\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\t\n\t\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\t\n\t\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar me = matrix.elements,\n\t\t\t\t\tte = this.elements,\n\t\n\t\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\t\n\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\n\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\n\t\t\t\tif ( det === 0 ) {\n\t\n\t\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\t\n\t\t\t\t\tif ( throwOnDegenerate === true ) {\n\t\n\t\t\t\t\t\tthrow new Error( msg );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tconsole.warn( msg );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn this.identity();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar detInv = 1 / det;\n\t\n\t\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\t\n\t\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\t\n\t\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttranspose: function () {\n\t\n\t\t\t\tvar tmp, m = this.elements;\n\t\n\t\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetNormalMatrix: function ( matrix4 ) {\n\t\n\t\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\t\n\t\t\t},\n\t\n\t\t\ttransposeIntoArray: function ( r ) {\n\t\n\t\t\t\tvar m = this.elements;\n\t\n\t\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\t\tr[ 8 ] = m[ 8 ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( matrix ) {\n\t\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = matrix.elements;\n\t\n\t\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\t\n\t\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn true;\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\t\n\t\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tvar te = this.elements;\n\t\n\t\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\n\t\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\n\t\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Plane( normal, constant ) {\n\t\n\t\t\t// normal is assumed to be normalized\n\t\n\t\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\t\n\t\t}\n\t\n\t\tObject.assign( Plane.prototype, {\n\t\n\t\t\tset: function ( normal, constant ) {\n\t\n\t\t\t\tthis.normal.copy( normal );\n\t\t\t\tthis.constant = constant;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetComponents: function ( x, y, z, w ) {\n\t\n\t\t\t\tthis.normal.set( x, y, z );\n\t\t\t\tthis.constant = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\t\n\t\t\t\tthis.normal.copy( normal );\n\t\t\t\tthis.constant = - point.dot( this.normal );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromCoplanarPoints: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\t\t\tvar v2 = new Vector3();\n\t\n\t\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\t\n\t\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\t\n\t\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\t\n\t\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( plane ) {\n\t\n\t\t\t\tthis.normal.copy( plane.normal );\n\t\t\t\tthis.constant = plane.constant;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tnormalize: function () {\n\t\n\t\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\n\t\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\t\tthis.constant *= inverseNormalLength;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tnegate: function () {\n\t\n\t\t\t\tthis.constant *= - 1;\n\t\t\t\tthis.normal.negate();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToPoint: function ( point ) {\n\t\n\t\t\t\treturn this.normal.dot( point ) + this.constant;\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToSphere: function ( sphere ) {\n\t\n\t\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\t\n\t\t\t},\n\t\n\t\t\tprojectPoint: function ( point, optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\t\n\t\t\t},\n\t\n\t\t\tintersectLine: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function intersectLine( line, optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\t\tvar direction = line.delta( v1 );\n\t\n\t\t\t\t\tvar denominator = this.normal.dot( direction );\n\t\n\t\t\t\t\tif ( denominator === 0 ) {\n\t\n\t\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\t\n\t\t\t\t\t\t\treturn result.copy( line.start );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\t\treturn undefined;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\t\n\t\t\t\t\tif ( t < 0 || t > 1 ) {\n\t\n\t\t\t\t\t\treturn undefined;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersectsLine: function ( line ) {\n\t\n\t\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\n\t\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\t\tvar endSign = this.distanceToPoint( line.end );\n\t\n\t\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsBox: function ( box ) {\n\t\n\t\t\t\treturn box.intersectsPlane( this );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsSphere: function ( sphere ) {\n\t\n\t\t\t\treturn sphere.intersectsPlane( this );\n\t\n\t\t\t},\n\t\n\t\t\tcoplanarPoint: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix4: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\t\t\tvar m1 = new Matrix3();\n\t\n\t\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\t\n\t\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\n\t\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\t\n\t\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslate: function ( offset ) {\n\t\n\t\t\t\tthis.constant -= offset.dot( this.normal );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( plane ) {\n\t\n\t\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\t\n\t\t\tthis.planes = [\n\t\n\t\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\t\n\t\t\t];\n\t\n\t\t}\n\t\n\t\tObject.assign( Frustum.prototype, {\n\t\n\t\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\t\n\t\t\t\tvar planes = this.planes;\n\t\n\t\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\t\tplanes[ 5 ].copy( p5 );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( frustum ) {\n\t\n\t\t\t\tvar planes = this.planes;\n\t\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromMatrix: function ( m ) {\n\t\n\t\t\t\tvar planes = this.planes;\n\t\t\t\tvar me = m.elements;\n\t\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\t\n\t\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tintersectsObject: function () {\n\t\n\t\t\t\tvar sphere = new Sphere();\n\t\n\t\t\t\treturn function intersectsObject( object ) {\n\t\n\t\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\t\n\t\t\t\t\treturn this.intersectsSphere( sphere );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersectsSprite: function () {\n\t\n\t\t\t\tvar sphere = new Sphere();\n\t\n\t\t\t\treturn function intersectsSprite( sprite ) {\n\t\n\t\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\t\n\t\t\t\t\treturn this.intersectsSphere( sphere );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersectsSphere: function ( sphere ) {\n\t\n\t\t\t\tvar planes = this.planes;\n\t\t\t\tvar center = sphere.center;\n\t\t\t\tvar negRadius = - sphere.radius;\n\t\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\t\n\t\t\t\t\tif ( distance < negRadius ) {\n\t\n\t\t\t\t\t\treturn false;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn true;\n\t\n\t\t\t},\n\t\n\t\t\tintersectsBox: function () {\n\t\n\t\t\t\tvar p1 = new Vector3(),\n\t\t\t\t\tp2 = new Vector3();\n\t\n\t\t\t\treturn function intersectsBox( box ) {\n\t\n\t\t\t\t\tvar planes = this.planes;\n\t\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\tvar plane = planes[ i ];\n\t\n\t\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\t\n\t\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\t\n\t\t\t\t\t\t// if both outside plane, no intersection\n\t\n\t\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\t\n\t\t\t\t\t\t\treturn false;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tcontainsPoint: function ( point ) {\n\t\n\t\t\t\tvar planes = this.planes;\n\t\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\t\n\t\t\t\t\t\treturn false;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn true;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\t\n\t\t\tvar _frustum = new Frustum(),\n\t\t\t\t_projScreenMatrix = new Matrix4(),\n\t\n\t\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\t\n\t\t\t\t_lookTarget = new Vector3(),\n\t\t\t\t_lightPositionWorld = new Vector3(),\n\t\n\t\t\t\t_MorphingFlag = 1,\n\t\t\t\t_SkinningFlag = 2,\n\t\n\t\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\t\n\t\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\t\n\t\t\t\t_materialCache = {};\n\t\n\t\t\tvar cubeDirections = [\n\t\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t\t];\n\t\n\t\t\tvar cubeUps = [\n\t\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t\t];\n\t\n\t\t\tvar cube2DViewPorts = [\n\t\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t\t];\n\t\n\t\t\t// init\n\t\n\t\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\t\n\t\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\t\n\t\t\t\tvar depthMaterial = new MeshDepthMaterial( {\n\t\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\t\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\t\n\t\t\t\t} );\n\t\n\t\t\t\t_depthMaterials[ i ] = depthMaterial;\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\t\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\t\n\t\t\t\t} );\n\t\n\t\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tthis.enabled = false;\n\t\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\n\t\t\tthis.type = PCFShadowMap;\n\t\n\t\t\tthis.renderReverseSided = true;\n\t\t\tthis.renderSingleSided = true;\n\t\n\t\t\tthis.render = function ( lights, scene, camera ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\t\n\t\t\t\tif ( lights.length === 0 ) return;\n\t\n\t\t\t\t// TODO Clean up (needed in case of contextlost)\n\t\t\t\tvar _gl = _renderer.context;\n\t\t\t\tvar _state = _renderer.state;\n\t\n\t\t\t\t// Set GL state for depth map.\n\t\t\t\t_state.disable( _gl.BLEND );\n\t\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t\t_state.setScissorTest( false );\n\t\n\t\t\t\t// render depth map\n\t\n\t\t\t\tvar faceCount;\n\t\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar light = lights[ i ];\n\t\t\t\t\tvar shadow = light.shadow;\n\t\t\t\t\tvar isPointLight = light && light.isPointLight;\n\t\n\t\t\t\t\tif ( shadow === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar shadowCamera = shadow.camera;\n\t\n\t\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\t\n\t\t\t\t\tif ( isPointLight ) {\n\t\n\t\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\t\n\t\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t\t// following orientation:\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//  xzXZ\n\t\t\t\t\t\t//   y Y\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t\t// z - Negative z direction\n\t\n\t\t\t\t\t\t// positive X\n\t\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t\t// negative X\n\t\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t\t// positive Z\n\t\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t\t// negative Z\n\t\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t\t// positive Y\n\t\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t\t// negative Y\n\t\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\t\n\t\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( shadow.map === null ) {\n\t\n\t\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\t\n\t\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\t\n\t\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( shadow.isSpotLightShadow ) {\n\t\n\t\t\t\t\t\tshadow.update( light );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\t\tvar shadowMatrix = shadow.matrix;\n\t\n\t\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\t\n\t\t\t\t\tif ( isPointLight ) {\n\t\n\t\t\t\t\t\tfaceCount = 6;\n\t\n\t\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t\t// equal to inverse of the light's position\n\t\n\t\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tfaceCount = 1;\n\t\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\n\t\t\t\t\t\t// compute shadow matrix\n\t\n\t\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t\t_renderer.clear();\n\t\n\t\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t\t// run a single pass if not\n\t\n\t\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\t\n\t\t\t\t\t\tif ( isPointLight ) {\n\t\n\t\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\n\t\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t\t_state.viewport( vpDimensions );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// update camera matrices and frustum\n\t\n\t\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\t\n\t\t\t\t\t\t// set object matrices & frustum culling\n\t\n\t\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.needsUpdate = false;\n\t\n\t\t\t};\n\t\n\t\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\t\n\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\tvar result = null;\n\t\n\t\t\t\tvar materialVariants = _depthMaterials;\n\t\t\t\tvar customMaterial = object.customDepthMaterial;\n\t\n\t\t\t\tif ( isPointLight ) {\n\t\n\t\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( ! customMaterial ) {\n\t\n\t\t\t\t\tvar useMorphing = false;\n\t\n\t\t\t\t\tif ( material.morphTargets ) {\n\t\n\t\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\t\n\t\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\t\n\t\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\t\n\t\t\t\t\tvar variantIndex = 0;\n\t\n\t\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\t\n\t\t\t\t\tresult = materialVariants[ variantIndex ];\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tresult = customMaterial;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\t\n\t\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t\t// appropriate state\n\t\n\t\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\t\n\t\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\t\n\t\t\t\t\tif ( materialsForVariant === undefined ) {\n\t\n\t\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\t\n\t\t\t\t\tif ( cachedMaterial === undefined ) {\n\t\n\t\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult = cachedMaterial;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tresult.visible = material.visible;\n\t\t\t\tresult.wireframe = material.wireframe;\n\t\n\t\t\t\tvar side = material.side;\n\t\n\t\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\t\n\t\t\t\t\tside = FrontSide;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( scope.renderReverseSided ) {\n\t\n\t\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tresult.side = side;\n\t\n\t\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\n\t\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\t\tresult.linewidth = material.linewidth;\n\t\n\t\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\t\n\t\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t}\n\t\n\t\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\t\n\t\t\t\tif ( object.visible === false ) return;\n\t\n\t\t\t\tvar visible = object.layers.test( camera.layers );\n\t\n\t\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\t\n\t\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\t\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\n\t\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\t\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\t\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\t\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\t\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\t\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else if ( material.visible ) {\n\t\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar children = object.children;\n\t\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLAttributes( gl ) {\n\t\n\t\t\tvar buffers = {};\n\t\n\t\t\tfunction createBuffer( attribute, bufferType ) {\n\t\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\t\n\t\t\t\tvar buffer = gl.createBuffer();\n\t\n\t\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\t\tgl.bufferData( bufferType, array, usage );\n\t\n\t\t\t\tattribute.onUploadCallback();\n\t\n\t\t\t\tvar type = gl.FLOAT;\n\t\n\t\t\t\tif ( array instanceof Float32Array ) {\n\t\n\t\t\t\t\ttype = gl.FLOAT;\n\t\n\t\t\t\t} else if ( array instanceof Float64Array ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\t\n\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\t\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\n\t\t\t\t} else if ( array instanceof Int16Array ) {\n\t\n\t\t\t\t\ttype = gl.SHORT;\n\t\n\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\t\n\t\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\n\t\t\t\t} else if ( array instanceof Int32Array ) {\n\t\n\t\t\t\t\ttype = gl.INT;\n\t\n\t\t\t\t} else if ( array instanceof Int8Array ) {\n\t\n\t\t\t\t\ttype = gl.BYTE;\n\t\n\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\t\n\t\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\tbuffer: buffer,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\t\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar updateRange = attribute.updateRange;\n\t\n\t\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\n\t\t\t\tif ( attribute.dynamic === false ) {\n\t\n\t\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\t\n\t\t\t\t} else if ( updateRange.count === - 1 ) {\n\t\n\t\t\t\t\t// Not using update ranges\n\t\n\t\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\t\n\t\t\t\t} else if ( updateRange.count === 0 ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\t\n\t\t\t\t\tupdateRange.count = -1; // reset range\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfunction get( attribute ) {\n\t\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\n\t\t\t\treturn buffers[ attribute.uuid ];\n\t\n\t\t\t}\n\t\n\t\t\tfunction remove( attribute ) {\n\t\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\t\t\n\t\t\t\tvar data = buffers[ attribute.uuid ];\n\t\n\t\t\t\tif ( data ) {\n\t\n\t\t\t\t\tgl.deleteBuffer( data.buffer );\n\t\n\t\t\t\t\tdelete buffers[ attribute.uuid ];\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction update( attribute, bufferType ) {\n\t\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\n\t\t\t\tvar data = buffers[ attribute.uuid ];\n\t\n\t\t\t\tif ( data === undefined ) {\n\t\n\t\t\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\t\n\t\t\t\t} else if ( data.version < attribute.version ) {\n\t\n\t\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\t\n\t\t\t\t\tdata.version = attribute.version;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tget: get,\n\t\t\t\tremove: remove,\n\t\t\t\tupdate: update\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Euler( x, y, z, order ) {\n\t\n\t\t\tthis._x = x || 0;\n\t\t\tthis._y = y || 0;\n\t\t\tthis._z = z || 0;\n\t\t\tthis._order = order || Euler.DefaultOrder;\n\t\n\t\t}\n\t\n\t\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\t\n\t\tEuler.DefaultOrder = 'XYZ';\n\t\n\t\tObject.defineProperties( Euler.prototype, {\n\t\n\t\t\tx: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._x;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._x = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ty: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._y;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._y = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tz: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._z;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._z = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\torder: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this._order;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis._order = value;\n\t\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Euler.prototype, {\n\t\n\t\t\tisEuler: true,\n\t\n\t\t\tset: function ( x, y, z, order ) {\n\t\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\tthis._order = order || this._order;\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( euler ) {\n\t\n\t\t\t\tthis._x = euler._x;\n\t\t\t\tthis._y = euler._y;\n\t\t\t\tthis._z = euler._z;\n\t\t\t\tthis._order = euler._order;\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\t\n\t\t\t\tvar clamp = _Math.clamp;\n\t\n\t\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\n\t\t\t\tvar te = m.elements;\n\t\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\t\n\t\t\t\torder = order || this._order;\n\t\n\t\t\t\tif ( order === 'XYZ' ) {\n\t\n\t\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\t\n\t\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\t\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._z = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( order === 'YXZ' ) {\n\t\n\t\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\t\n\t\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\t\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\t\tthis._z = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( order === 'ZXY' ) {\n\t\n\t\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\t\n\t\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\t\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( order === 'ZYX' ) {\n\t\n\t\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\t\n\t\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\t\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( order === 'YZX' ) {\n\t\n\t\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\t\n\t\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\t\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( order === 'XZY' ) {\n\t\n\t\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\t\n\t\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\t\n\t\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t\tthis._y = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis._order = order;\n\t\n\t\t\t\tif ( update !== false ) this.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromQuaternion: function () {\n\t\n\t\t\t\tvar matrix = new Matrix4();\n\t\n\t\t\t\treturn function setFromQuaternion( q, order, update ) {\n\t\n\t\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\t\n\t\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tsetFromVector3: function ( v, order ) {\n\t\n\t\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\t\n\t\t\t},\n\t\n\t\t\treorder: function () {\n\t\n\t\t\t\t// WARNING: this discards revolution information -bhouston\n\t\n\t\t\t\tvar q = new Quaternion();\n\t\n\t\t\t\treturn function reorder( newOrder ) {\n\t\n\t\t\t\t\tq.setFromEuler( this );\n\t\n\t\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tequals: function ( euler ) {\n\t\n\t\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\t\n\t\t\t},\n\t\n\t\t\tfromArray: function ( array ) {\n\t\n\t\t\t\tthis._x = array[ 0 ];\n\t\t\t\tthis._y = array[ 1 ];\n\t\t\t\tthis._z = array[ 2 ];\n\t\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\t\n\t\t\t\tthis.onChangeCallback();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoArray: function ( array, offset ) {\n\t\n\t\t\t\tif ( array === undefined ) array = [];\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tarray[ offset ] = this._x;\n\t\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\t\tarray[ offset + 3 ] = this._order;\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\ttoVector3: function ( optionalResult ) {\n\t\n\t\t\t\tif ( optionalResult ) {\n\t\n\t\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tonChange: function ( callback ) {\n\t\n\t\t\t\tthis.onChangeCallback = callback;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tonChangeCallback: function () {}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Layers() {\n\t\n\t\t\tthis.mask = 1 | 0;\n\t\n\t\t}\n\t\n\t\tObject.assign( Layers.prototype, {\n\t\n\t\t\tset: function ( channel ) {\n\t\n\t\t\t\tthis.mask = 1 << channel | 0;\n\t\n\t\t\t},\n\t\n\t\t\tenable: function ( channel ) {\n\t\n\t\t\t\tthis.mask |= 1 << channel | 0;\n\t\n\t\t\t},\n\t\n\t\t\ttoggle: function ( channel ) {\n\t\n\t\t\t\tthis.mask ^= 1 << channel | 0;\n\t\n\t\t\t},\n\t\n\t\t\tdisable: function ( channel ) {\n\t\n\t\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\t\n\t\t\t},\n\t\n\t\t\ttest: function ( layers ) {\n\t\n\t\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author elephantatwork / www.elephantatwork.ch\n\t\t */\n\t\n\t\tvar object3DId = 0;\n\t\n\t\tfunction Object3D() {\n\t\n\t\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\n\t\t\tvar position = new Vector3();\n\t\t\tvar rotation = new Euler();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3( 1, 1, 1 );\n\t\n\t\t\tfunction onRotationChange() {\n\t\n\t\t\t\tquaternion.setFromEuler( rotation, false );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onQuaternionChange() {\n\t\n\t\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\t\n\t\t\t}\n\t\n\t\t\trotation.onChange( onRotationChange );\n\t\t\tquaternion.onChange( onQuaternionChange );\n\t\n\t\t\tObject.defineProperties( this, {\n\t\t\t\tposition: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\n\t\t\tthis.userData = {};\n\t\t}\n\t\n\t\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\t\tObject3D.DefaultMatrixAutoUpdate = true;\n\t\n\t\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\t\n\t\t\tisObject3D: true,\n\t\n\t\t\tonBeforeRender: function () {},\n\t\t\tonAfterRender: function () {},\n\t\n\t\t\tapplyMatrix: function ( matrix ) {\n\t\n\t\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\t\n\t\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\t\n\t\t\t},\n\t\n\t\t\tapplyQuaternion: function ( q ) {\n\t\n\t\t\t\tthis.quaternion.premultiply( q );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\t\n\t\t\t\t// assumes axis is normalized\n\t\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\t\n\t\t\t},\n\t\n\t\t\tsetRotationFromEuler: function ( euler ) {\n\t\n\t\t\t\tthis.quaternion.setFromEuler( euler, true );\n\t\n\t\t\t},\n\t\n\t\t\tsetRotationFromMatrix: function ( m ) {\n\t\n\t\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\t\n\t\t\t},\n\t\n\t\t\tsetRotationFromQuaternion: function ( q ) {\n\t\n\t\t\t\t// assumes q is normalized\n\t\n\t\t\t\tthis.quaternion.copy( q );\n\t\n\t\t\t},\n\t\n\t\t\trotateOnAxis: function () {\n\t\n\t\t\t\t// rotate object on axis in object space\n\t\t\t\t// axis is assumed to be normalized\n\t\n\t\t\t\tvar q1 = new Quaternion();\n\t\n\t\t\t\treturn function rotateOnAxis( axis, angle ) {\n\t\n\t\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\t\n\t\t\t\t\tthis.quaternion.multiply( q1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateX: function () {\n\t\n\t\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\t\n\t\t\t\treturn function rotateX( angle ) {\n\t\n\t\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateY: function () {\n\t\n\t\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\t\n\t\t\t\treturn function rotateY( angle ) {\n\t\n\t\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateZ: function () {\n\t\n\t\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\t\n\t\t\t\treturn function rotateZ( angle ) {\n\t\n\t\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslateOnAxis: function () {\n\t\n\t\t\t\t// translate object by distance along axis in object space\n\t\t\t\t// axis is assumed to be normalized\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function translateOnAxis( axis, distance ) {\n\t\n\t\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\t\n\t\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslateX: function () {\n\t\n\t\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\t\n\t\t\t\treturn function translateX( distance ) {\n\t\n\t\t\t\t\treturn this.translateOnAxis( v1, distance );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslateY: function () {\n\t\n\t\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\t\n\t\t\t\treturn function translateY( distance ) {\n\t\n\t\t\t\t\treturn this.translateOnAxis( v1, distance );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslateZ: function () {\n\t\n\t\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\t\n\t\t\t\treturn function translateZ( distance ) {\n\t\n\t\t\t\t\treturn this.translateOnAxis( v1, distance );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tlocalToWorld: function ( vector ) {\n\t\n\t\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\t\n\t\t\t},\n\t\n\t\t\tworldToLocal: function () {\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function worldToLocal( vector ) {\n\t\n\t\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tlookAt: function () {\n\t\n\t\t\t\t// This method does not support objects with rotated and/or translated parent(s)\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function lookAt( vector ) {\n\t\n\t\t\t\t\tif ( this.isCamera ) {\n\t\n\t\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tadd: function ( object ) {\n\t\n\t\t\t\tif ( arguments.length > 1 ) {\n\t\n\t\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\t\n\t\t\t\t\t\tthis.add( arguments[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( object === this ) {\n\t\n\t\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( ( object && object.isObject3D ) ) {\n\t\n\t\t\t\t\tif ( object.parent !== null ) {\n\t\n\t\t\t\t\t\tobject.parent.remove( object );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tobject.parent = this;\n\t\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\t\n\t\t\t\t\tthis.children.push( object );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tremove: function ( object ) {\n\t\n\t\t\t\tif ( arguments.length > 1 ) {\n\t\n\t\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\t\n\t\t\t\t\t\tthis.remove( arguments[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar index = this.children.indexOf( object );\n\t\n\t\t\t\tif ( index !== - 1 ) {\n\t\n\t\t\t\t\tobject.parent = null;\n\t\n\t\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\t\n\t\t\t\t\tthis.children.splice( index, 1 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetObjectById: function ( id ) {\n\t\n\t\t\t\treturn this.getObjectByProperty( 'id', id );\n\t\n\t\t\t},\n\t\n\t\t\tgetObjectByName: function ( name ) {\n\t\n\t\t\t\treturn this.getObjectByProperty( 'name', name );\n\t\n\t\t\t},\n\t\n\t\t\tgetObjectByProperty: function ( name, value ) {\n\t\n\t\t\t\tif ( this[ name ] === value ) return this;\n\t\n\t\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar child = this.children[ i ];\n\t\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\t\n\t\t\t\t\tif ( object !== undefined ) {\n\t\n\t\t\t\t\t\treturn object;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn undefined;\n\t\n\t\t\t},\n\t\n\t\t\tgetWorldPosition: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\tthis.updateMatrixWorld( true );\n\t\n\t\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\t\n\t\t\t},\n\t\n\t\t\tgetWorldQuaternion: function () {\n\t\n\t\t\t\tvar position = new Vector3();\n\t\t\t\tvar scale = new Vector3();\n\t\n\t\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Quaternion();\n\t\n\t\t\t\t\tthis.updateMatrixWorld( true );\n\t\n\t\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\t\n\t\t\t\t\treturn result;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tgetWorldRotation: function () {\n\t\n\t\t\t\tvar quaternion = new Quaternion();\n\t\n\t\t\t\treturn function getWorldRotation( optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Euler();\n\t\n\t\t\t\t\tthis.getWorldQuaternion( quaternion );\n\t\n\t\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tgetWorldScale: function () {\n\t\n\t\t\t\tvar position = new Vector3();\n\t\t\t\tvar quaternion = new Quaternion();\n\t\n\t\t\t\treturn function getWorldScale( optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\t\tthis.updateMatrixWorld( true );\n\t\n\t\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\t\n\t\t\t\t\treturn result;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tgetWorldDirection: function () {\n\t\n\t\t\t\tvar quaternion = new Quaternion();\n\t\n\t\t\t\treturn function getWorldDirection( optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\t\tthis.getWorldQuaternion( quaternion );\n\t\n\t\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\traycast: function () {},\n\t\n\t\t\ttraverse: function ( callback ) {\n\t\n\t\t\t\tcallback( this );\n\t\n\t\t\t\tvar children = this.children;\n\t\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tchildren[ i ].traverse( callback );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttraverseVisible: function ( callback ) {\n\t\n\t\t\t\tif ( this.visible === false ) return;\n\t\n\t\t\t\tcallback( this );\n\t\n\t\t\t\tvar children = this.children;\n\t\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tchildren[ i ].traverseVisible( callback );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttraverseAncestors: function ( callback ) {\n\t\n\t\t\t\tvar parent = this.parent;\n\t\n\t\t\t\tif ( parent !== null ) {\n\t\n\t\t\t\t\tcallback( parent );\n\t\n\t\t\t\t\tparent.traverseAncestors( callback );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tupdateMatrix: function () {\n\t\n\t\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\t\n\t\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\n\t\t\t},\n\t\n\t\t\tupdateMatrixWorld: function ( force ) {\n\t\n\t\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\t\n\t\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\t\n\t\t\t\t\tif ( this.parent === null ) {\n\t\n\t\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\n\t\t\t\t\tforce = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// update children\n\t\n\t\t\t\tvar children = this.children;\n\t\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\t// meta is '' when called from JSON.stringify\n\t\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\t\n\t\t\t\tvar output = {};\n\t\n\t\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t\t// not providing it implies that this is the root object\n\t\t\t\t// being serialized.\n\t\t\t\tif ( isRootObject ) {\n\t\n\t\t\t\t\t// initialize meta obj\n\t\t\t\t\tmeta = {\n\t\t\t\t\t\tgeometries: {},\n\t\t\t\t\t\tmaterials: {},\n\t\t\t\t\t\ttextures: {},\n\t\t\t\t\t\timages: {}\n\t\t\t\t\t};\n\t\n\t\t\t\t\toutput.metadata = {\n\t\t\t\t\t\tversion: 4.5,\n\t\t\t\t\t\ttype: 'Object',\n\t\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// standard Object3D serialization\n\t\n\t\t\t\tvar object = {};\n\t\n\t\t\t\tobject.uuid = this.uuid;\n\t\t\t\tobject.type = this.type;\n\t\n\t\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\t\tif ( this.visible === false ) object.visible = false;\n\t\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\n\t\t\t\tobject.matrix = this.matrix.toArray();\n\t\n\t\t\t\t//\n\t\n\t\t\t\tfunction serialize( library, element ) {\n\t\n\t\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\t\n\t\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn element.uuid;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.geometry !== undefined ) {\n\t\n\t\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.material !== undefined ) {\n\t\n\t\t\t\t\tif ( Array.isArray( this.material ) ) {\n\t\n\t\t\t\t\t\tvar uuids = [];\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tobject.material = uuids;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tif ( this.children.length > 0 ) {\n\t\n\t\t\t\t\tobject.children = [];\n\t\n\t\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\t\n\t\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( isRootObject ) {\n\t\n\t\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\t\tvar images = extractFromCache( meta.images );\n\t\n\t\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\t\tif ( images.length > 0 ) output.images = images;\n\t\n\t\t\t\t}\n\t\n\t\t\t\toutput.object = object;\n\t\n\t\t\t\treturn output;\n\t\n\t\t\t\t// extract data from the cache hash\n\t\t\t\t// remove metadata on each item\n\t\t\t\t// and return as array\n\t\t\t\tfunction extractFromCache( cache ) {\n\t\n\t\t\t\t\tvar values = [];\n\t\t\t\t\tfor ( var key in cache ) {\n\t\n\t\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\t\tvalues.push( data );\n\t\n\t\t\t\t\t}\n\t\t\t\t\treturn values;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tclone: function ( recursive ) {\n\t\n\t\t\t\treturn new this.constructor().copy( this, recursive );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source, recursive ) {\n\t\n\t\t\t\tif ( recursive === undefined ) recursive = true;\n\t\n\t\t\t\tthis.name = source.name;\n\t\n\t\t\t\tthis.up.copy( source.up );\n\t\n\t\t\t\tthis.position.copy( source.position );\n\t\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\t\tthis.scale.copy( source.scale );\n\t\n\t\t\t\tthis.matrix.copy( source.matrix );\n\t\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\t\n\t\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\n\t\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\t\tthis.visible = source.visible;\n\t\n\t\t\t\tthis.castShadow = source.castShadow;\n\t\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\n\t\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\t\tthis.renderOrder = source.renderOrder;\n\t\n\t\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\t\n\t\t\t\tif ( recursive === true ) {\n\t\n\t\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\t\n\t\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\t\tthis.add( child.clone() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t*/\n\t\n\t\tfunction Camera() {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Camera';\n\t\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\n\t\t}\n\t\n\t\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Camera,\n\t\n\t\t\tisCamera: true,\n\t\n\t\t\tcopy: function ( source, recursive ) {\n\t\n\t\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\t\n\t\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetWorldDirection: function () {\n\t\n\t\t\t\tvar quaternion = new Quaternion();\n\t\n\t\t\t\treturn function getWorldDirection( optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\t\tthis.getWorldQuaternion( quaternion );\n\t\n\t\t\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tupdateMatrixWorld: function ( force ) {\n\t\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\t\n\t\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author arose / http://github.com/arose\n\t\t */\n\t\n\t\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\t\n\t\t\tCamera.call( this );\n\t\n\t\t\tthis.type = 'OrthographicCamera';\n\t\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\n\t\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\t\n\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t}\n\t\n\t\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\t\n\t\t\tconstructor: OrthographicCamera,\n\t\n\t\t\tisOrthographicCamera: true,\n\t\n\t\t\tcopy: function ( source, recursive ) {\n\t\n\t\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\t\n\t\t\t\tthis.left = source.left;\n\t\t\t\tthis.right = source.right;\n\t\t\t\tthis.top = source.top;\n\t\t\t\tthis.bottom = source.bottom;\n\t\t\t\tthis.near = source.near;\n\t\t\t\tthis.far = source.far;\n\t\n\t\t\t\tthis.zoom = source.zoom;\n\t\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\t\n\t\t\t\tthis.view = {\n\t\t\t\t\tfullWidth: fullWidth,\n\t\t\t\t\tfullHeight: fullHeight,\n\t\t\t\t\toffsetX: x,\n\t\t\t\t\toffsetY: y,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height\n\t\t\t\t};\n\t\n\t\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t\t},\n\t\n\t\t\tclearViewOffset: function() {\n\t\n\t\t\t\tthis.view = null;\n\t\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t\t},\n\t\n\t\t\tupdateProjectionMatrix: function () {\n\t\n\t\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\t\n\t\t\t\tvar left = cx - dx;\n\t\t\t\tvar right = cx + dx;\n\t\t\t\tvar top = cy + dy;\n\t\t\t\tvar bottom = cy - dy;\n\t\n\t\t\t\tif ( this.view !== null ) {\n\t\n\t\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\t\n\t\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\t\n\t\t\t\tdata.object.zoom = this.zoom;\n\t\t\t\tdata.object.left = this.left;\n\t\t\t\tdata.object.right = this.right;\n\t\t\t\tdata.object.top = this.top;\n\t\t\t\tdata.object.bottom = this.bottom;\n\t\t\t\tdata.object.near = this.near;\n\t\t\t\tdata.object.far = this.far;\n\t\n\t\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author greggman / http://games.greggman.com/\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\t\n\t\t\tCamera.call( this );\n\t\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\n\t\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\t\tthis.zoom = 1;\n\t\n\t\t\tthis.near = near !== undefined ? near : 0.1;\n\t\t\tthis.far = far !== undefined ? far : 2000;\n\t\t\tthis.focus = 10;\n\t\n\t\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\t\tthis.view = null;\n\t\n\t\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\t\n\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t}\n\t\n\t\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\t\n\t\t\tconstructor: PerspectiveCamera,\n\t\n\t\t\tisPerspectiveCamera: true,\n\t\n\t\t\tcopy: function ( source, recursive ) {\n\t\n\t\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\t\n\t\t\t\tthis.fov = source.fov;\n\t\t\t\tthis.zoom = source.zoom;\n\t\n\t\t\t\tthis.near = source.near;\n\t\t\t\tthis.far = source.far;\n\t\t\t\tthis.focus = source.focus;\n\t\n\t\t\t\tthis.aspect = source.aspect;\n\t\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\t\n\t\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\t\tthis.filmOffset = source.filmOffset;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t\t *\n\t\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t\t * a 35mm (full frame) camera.\n\t\t\t *\n\t\t\t * Values for focal length and film gauge must have the same unit.\n\t\t\t */\n\t\t\tsetFocalLength: function ( focalLength ) {\n\t\n\t\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\n\t\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t\t */\n\t\t\tgetFocalLength: function () {\n\t\n\t\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\t\n\t\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\n\t\t\t},\n\t\n\t\t\tgetEffectiveFOV: function () {\n\t\n\t\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\t\n\t\t\t},\n\t\n\t\t\tgetFilmWidth: function () {\n\t\n\t\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\t\n\t\t\t},\n\t\n\t\t\tgetFilmHeight: function () {\n\t\n\t\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\t\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t\t * multi-monitor/multi-machine setups.\n\t\t\t *\n\t\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t\t * the monitors are in grid like this\n\t\t\t *\n\t\t\t *   +---+---+---+\n\t\t\t *   | A | B | C |\n\t\t\t *   +---+---+---+\n\t\t\t *   | D | E | F |\n\t\t\t *   +---+---+---+\n\t\t\t *\n\t\t\t * then for each monitor you would call it like this\n\t\t\t *\n\t\t\t *   var w = 1920;\n\t\t\t *   var h = 1080;\n\t\t\t *   var fullWidth = w * 3;\n\t\t\t *   var fullHeight = h * 2;\n\t\t\t *\n\t\t\t *   --A--\n\t\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t\t *   --B--\n\t\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t\t *   --C--\n\t\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t\t *   --D--\n\t\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t\t *   --E--\n\t\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t\t *   --F--\n\t\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t\t *\n\t\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t\t */\n\t\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\t\n\t\t\t\tthis.aspect = fullWidth / fullHeight;\n\t\n\t\t\t\tthis.view = {\n\t\t\t\t\tfullWidth: fullWidth,\n\t\t\t\t\tfullHeight: fullHeight,\n\t\t\t\t\toffsetX: x,\n\t\t\t\t\toffsetY: y,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height\n\t\t\t\t};\n\t\n\t\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t\t},\n\t\n\t\t\tclearViewOffset: function () {\n\t\n\t\t\t\tthis.view = null;\n\t\t\t\tthis.updateProjectionMatrix();\n\t\n\t\t\t},\n\t\n\t\t\tupdateProjectionMatrix: function () {\n\t\n\t\t\t\tvar near = this.near,\n\t\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\t\theight = 2 * top,\n\t\t\t\t\twidth = this.aspect * height,\n\t\t\t\t\tleft = - 0.5 * width,\n\t\t\t\t\tview = this.view;\n\t\n\t\t\t\tif ( view !== null ) {\n\t\n\t\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\n\t\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\t\theight *= view.height / fullHeight;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar skew = this.filmOffset;\n\t\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\t\n\t\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\t\n\t\t\t\tdata.object.fov = this.fov;\n\t\t\t\tdata.object.zoom = this.zoom;\n\t\n\t\t\t\tdata.object.near = this.near;\n\t\t\t\tdata.object.far = this.far;\n\t\t\t\tdata.object.focus = this.focus;\n\t\n\t\t\t\tdata.object.aspect = this.aspect;\n\t\n\t\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\t\n\t\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\t\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\n\t\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\t\n\t\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\t\n\t\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\t\n\t\t}\n\t\n\t\tObject.assign( Face3.prototype, {\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.a = source.a;\n\t\t\t\tthis.b = source.b;\n\t\t\t\tthis.c = source.c;\n\t\n\t\t\t\tthis.normal.copy( source.normal );\n\t\t\t\tthis.color.copy( source.color );\n\t\n\t\t\t\tthis.materialIndex = source.materialIndex;\n\t\n\t\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author kile / http://kile.stravaganza.org/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tvar count = 0;\n\t\tfunction GeometryIdCount() { return count++; }\n\t\n\t\tfunction Geometry() {\n\t\n\t\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Geometry';\n\t\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\n\t\t\tthis.lineDistances = [];\n\t\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\n\t\t\t// update flags\n\t\n\t\t\tthis.elementsNeedUpdate = false;\n\t\t\tthis.verticesNeedUpdate = false;\n\t\t\tthis.uvsNeedUpdate = false;\n\t\t\tthis.normalsNeedUpdate = false;\n\t\t\tthis.colorsNeedUpdate = false;\n\t\t\tthis.lineDistancesNeedUpdate = false;\n\t\t\tthis.groupsNeedUpdate = false;\n\t\n\t\t}\n\t\n\t\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\t\n\t\t\tisGeometry: true,\n\t\n\t\t\tapplyMatrix: function ( matrix ) {\n\t\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\t\n\t\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\t\tvertex.applyMatrix4( matrix );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.boundingBox !== null ) {\n\t\n\t\t\t\t\tthis.computeBoundingBox();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.boundingSphere !== null ) {\n\t\n\t\t\t\t\tthis.computeBoundingSphere();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.verticesNeedUpdate = true;\n\t\t\t\tthis.normalsNeedUpdate = true;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\trotateX: function () {\n\t\n\t\t\t\t// rotate geometry around world x-axis\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function rotateX( angle ) {\n\t\n\t\t\t\t\tm1.makeRotationX( angle );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateY: function () {\n\t\n\t\t\t\t// rotate geometry around world y-axis\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function rotateY( angle ) {\n\t\n\t\t\t\t\tm1.makeRotationY( angle );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateZ: function () {\n\t\n\t\t\t\t// rotate geometry around world z-axis\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function rotateZ( angle ) {\n\t\n\t\t\t\t\tm1.makeRotationZ( angle );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslate: function () {\n\t\n\t\t\t\t// translate geometry\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function translate( x, y, z ) {\n\t\n\t\t\t\t\tm1.makeTranslation( x, y, z );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tscale: function () {\n\t\n\t\t\t\t// scale geometry\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function scale( x, y, z ) {\n\t\n\t\t\t\t\tm1.makeScale( x, y, z );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tlookAt: function () {\n\t\n\t\t\t\tvar obj = new Object3D();\n\t\n\t\t\t\treturn function lookAt( vector ) {\n\t\n\t\t\t\t\tobj.lookAt( vector );\n\t\n\t\t\t\t\tobj.updateMatrix();\n\t\n\t\t\t\t\tthis.applyMatrix( obj.matrix );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tfromBufferGeometry: function ( geometry ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\n\t\t\t\tvar positions = attributes.position.array;\n\t\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\t\n\t\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\t\n\t\t\t\tvar tempNormals = [];\n\t\t\t\tvar tempUVs = [];\n\t\t\t\tvar tempUVs2 = [];\n\t\n\t\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\t\n\t\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\t\n\t\t\t\t\tif ( normals !== undefined ) {\n\t\n\t\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( colors !== undefined ) {\n\t\n\t\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( uvs !== undefined ) {\n\t\n\t\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( uvs2 !== undefined ) {\n\t\n\t\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\t\n\t\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\t\n\t\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\t\n\t\t\t\t\tscope.faces.push( face );\n\t\n\t\t\t\t\tif ( uvs !== undefined ) {\n\t\n\t\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( uvs2 !== undefined ) {\n\t\n\t\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar groups = geometry.groups;\n\t\n\t\t\t\tif ( groups.length > 0 ) {\n\t\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\t\n\t\t\t\t\t\tvar group = groups[ i ];\n\t\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\t\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\t\n\t\t\t\t\t\t\tif ( indices !== undefined ) {\n\t\n\t\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tif ( indices !== undefined ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\t\n\t\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\t\n\t\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.computeFaceNormals();\n\t\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\t\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\t\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcenter: function () {\n\t\n\t\t\t\tthis.computeBoundingBox();\n\t\n\t\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\t\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\t\n\t\t\t\treturn offset;\n\t\n\t\t\t},\n\t\n\t\t\tnormalize: function () {\n\t\n\t\t\t\tthis.computeBoundingSphere();\n\t\n\t\t\t\tvar center = this.boundingSphere.center;\n\t\t\t\tvar radius = this.boundingSphere.radius;\n\t\n\t\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\t\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.set(\n\t\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t\t0, 0, 0, 1\n\t\t\t\t);\n\t\n\t\t\t\tthis.applyMatrix( matrix );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcomputeFaceNormals: function () {\n\t\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\t\n\t\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\tvar face = this.faces[ f ];\n\t\n\t\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\t\tvar vC = this.vertices[ face.c ];\n\t\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\t\n\t\t\t\t\tcb.normalize();\n\t\n\t\t\t\t\tface.normal.copy( cb );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\t\n\t\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\t\n\t\t\t\tvar v, vl, f, fl, face, vertices;\n\t\n\t\t\t\tvertices = new Array( this.vertices.length );\n\t\n\t\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\t\n\t\t\t\t\tvertices[ v ] = new Vector3();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( areaWeighted ) {\n\t\n\t\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\t\n\t\t\t\t\tvar vA, vB, vC;\n\t\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\t\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\t\tvC = this.vertices[ face.c ];\n\t\n\t\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\t\tcb.cross( ab );\n\t\n\t\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\t\tvertices[ face.c ].add( cb );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.computeFaceNormals();\n\t\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\t\n\t\t\t\t\tvertices[ v ].normalize();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\t\n\t\t\t\t\tif ( vertexNormals.length === 3 ) {\n\t\n\t\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.faces.length > 0 ) {\n\t\n\t\t\t\t\tthis.normalsNeedUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tcomputeFlatVertexNormals: function () {\n\t\n\t\t\t\tvar f, fl, face;\n\t\n\t\t\t\tthis.computeFaceNormals();\n\t\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\t\n\t\t\t\t\tif ( vertexNormals.length === 3 ) {\n\t\n\t\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.faces.length > 0 ) {\n\t\n\t\t\t\t\tthis.normalsNeedUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tcomputeMorphNormals: function () {\n\t\n\t\t\t\tvar i, il, f, fl, face;\n\t\n\t\t\t\t// save original normals\n\t\t\t\t// - create temp variables on first access\n\t\t\t\t//   otherwise just copy (for faster repeated calls)\n\t\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\t\n\t\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\t\n\t\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\t\n\t\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\t\n\t\t\t\tvar tmpGeo = new Geometry();\n\t\t\t\ttmpGeo.faces = this.faces;\n\t\n\t\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t// create on first access\n\t\n\t\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\t\n\t\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\t\n\t\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\t\n\t\t\t\t\t\tvar faceNormal, vertexNormals;\n\t\n\t\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\t\n\t\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\t\n\t\t\t\t\t// set vertices to morph target\n\t\n\t\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\t\n\t\t\t\t\t// compute morph normals\n\t\n\t\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\t\ttmpGeo.computeVertexNormals();\n\t\n\t\t\t\t\t// store morph normals\n\t\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\t\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\t\n\t\t\t\t\t\tfaceNormal.copy( face.normal );\n\t\n\t\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// restore original normals\n\t\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\tface = this.faces[ f ];\n\t\n\t\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tcomputeLineDistances: function () {\n\t\n\t\t\t\tvar d = 0;\n\t\t\t\tvar vertices = this.vertices;\n\t\n\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tif ( i > 0 ) {\n\t\n\t\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.lineDistances[ i ] = d;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tcomputeBoundingBox: function () {\n\t\n\t\t\t\tif ( this.boundingBox === null ) {\n\t\n\t\t\t\t\tthis.boundingBox = new Box3();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\t\n\t\t\t},\n\t\n\t\t\tcomputeBoundingSphere: function () {\n\t\n\t\t\t\tif ( this.boundingSphere === null ) {\n\t\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\t\n\t\t\t},\n\t\n\t\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\t\n\t\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar normalMatrix,\n\t\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\t\tvertices1 = this.vertices,\n\t\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\t\tfaces1 = this.faces,\n\t\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\t\t\tcolors1 = this.colors,\n\t\t\t\t\tcolors2 = geometry.colors;\n\t\n\t\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\t\n\t\t\t\tif ( matrix !== undefined ) {\n\t\n\t\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// vertices\n\t\n\t\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar vertex = vertices2[ i ];\n\t\n\t\t\t\t\tvar vertexCopy = vertex.clone();\n\t\n\t\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\t\n\t\t\t\t\tvertices1.push( vertexCopy );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// colors\n\t\n\t\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// faces\n\t\n\t\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\t\n\t\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\t\tfaceCopy.normal.copy( face.normal );\n\t\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\t\n\t\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\t\n\t\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\t\n\t\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfaceCopy.color.copy( face.color );\n\t\n\t\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\t\n\t\t\t\t\tfaces1.push( faceCopy );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// uvs\n\t\n\t\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\t\n\t\t\t\t\tif ( uv === undefined ) {\n\t\n\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tuvs1.push( uvCopy );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmergeMesh: function ( mesh ) {\n\t\n\t\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\t\n\t\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\t\n\t\t\t},\n\t\n\t\t\t/*\n\t\t\t * Checks for duplicate vertices with hashmap.\n\t\t\t * Duplicated vertices are removed\n\t\t\t * and faces' vertices are updated.\n\t\t\t */\n\t\n\t\t\tmergeVertices: function () {\n\t\n\t\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\t\tvar unique = [], changes = [];\n\t\n\t\t\t\tvar v, key;\n\t\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\t\tvar i, il, face;\n\t\t\t\tvar indices, j, jl;\n\t\n\t\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tv = this.vertices[ i ];\n\t\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\t\n\t\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\t\n\t\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t\t// have to remove them from the geometry.\n\t\t\t\tvar faceIndicesToRemove = [];\n\t\n\t\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tface = this.faces[ i ];\n\t\n\t\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\t\tface.c = changes[ face.c ];\n\t\n\t\t\t\t\tindices = [ face.a, face.b, face.c ];\n\t\n\t\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\t\n\t\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\t\n\t\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\t\n\t\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\t\n\t\t\t\t\tthis.faces.splice( idx, 1 );\n\t\n\t\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Use unique set of vertices\n\t\n\t\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\t\tthis.vertices = unique;\n\t\t\t\treturn diff;\n\t\n\t\t\t},\n\t\n\t\t\tsortFacesByMaterialIndex: function () {\n\t\n\t\t\t\tvar faces = this.faces;\n\t\t\t\tvar length = faces.length;\n\t\n\t\t\t\t// tag faces\n\t\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\t\n\t\t\t\t\tfaces[ i ]._id = i;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// sort faces\n\t\n\t\t\t\tfunction materialIndexSort( a, b ) {\n\t\n\t\t\t\t\treturn a.materialIndex - b.materialIndex;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfaces.sort( materialIndexSort );\n\t\n\t\t\t\t// sort uvs\n\t\n\t\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\t\n\t\t\t\tvar newUvs1, newUvs2;\n\t\n\t\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\t\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\t\n\t\t\t\t\tvar id = faces[ i ]._id;\n\t\n\t\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function () {\n\t\n\t\t\t\tvar data = {\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tversion: 4.5,\n\t\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// standard Geometry serialization\n\t\n\t\t\t\tdata.uuid = this.uuid;\n\t\t\t\tdata.type = this.type;\n\t\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\n\t\t\t\tif ( this.parameters !== undefined ) {\n\t\n\t\t\t\t\tvar parameters = this.parameters;\n\t\n\t\t\t\t\tfor ( var key in parameters ) {\n\t\n\t\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn data;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar vertices = [];\n\t\n\t\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\t\n\t\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar faces = [];\n\t\t\t\tvar normals = [];\n\t\t\t\tvar normalsHash = {};\n\t\t\t\tvar colors = [];\n\t\t\t\tvar colorsHash = {};\n\t\t\t\tvar uvs = [];\n\t\t\t\tvar uvsHash = {};\n\t\n\t\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\t\n\t\t\t\t\tvar face = this.faces[ i ];\n\t\n\t\t\t\t\tvar hasMaterial = true;\n\t\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\t\n\t\t\t\t\tvar faceType = 0;\n\t\n\t\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\t\n\t\t\t\t\tfaces.push( faceType );\n\t\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\t\tfaces.push( face.materialIndex );\n\t\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\t\n\t\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\t\n\t\t\t\t\t\tfaces.push(\n\t\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasFaceNormal ) {\n\t\n\t\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\t\n\t\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\t\n\t\t\t\t\t\tfaces.push(\n\t\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasFaceColor ) {\n\t\n\t\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\t\n\t\t\t\t\t\tvar vertexColors = face.vertexColors;\n\t\n\t\t\t\t\t\tfaces.push(\n\t\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction setBit( value, position, enabled ) {\n\t\n\t\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction getNormalIndex( normal ) {\n\t\n\t\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\t\n\t\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\t\n\t\t\t\t\t\treturn normalsHash[ hash ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\treturn normalsHash[ hash ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction getColorIndex( color ) {\n\t\n\t\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\t\n\t\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\t\n\t\t\t\t\t\treturn colorsHash[ hash ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\t\tcolors.push( color.getHex() );\n\t\n\t\t\t\t\treturn colorsHash[ hash ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction getUvIndex( uv ) {\n\t\n\t\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\t\n\t\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\t\n\t\t\t\t\t\treturn uvsHash[ hash ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\t\n\t\t\t\t\treturn uvsHash[ hash ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tdata.data = {};\n\t\n\t\t\t\tdata.data.vertices = vertices;\n\t\t\t\tdata.data.normals = normals;\n\t\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\t\tdata.data.faces = faces;\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\t/*\n\t\t\t\t // Handle primitives\n\t\n\t\t\t\t var parameters = this.parameters;\n\t\n\t\t\t\t if ( parameters !== undefined ) {\n\t\n\t\t\t\t var values = [];\n\t\n\t\t\t\t for ( var key in parameters ) {\n\t\n\t\t\t\t values.push( parameters[ key ] );\n\t\n\t\t\t\t }\n\t\n\t\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t\t this.constructor.apply( geometry, values );\n\t\t\t\t return geometry;\n\t\n\t\t\t\t }\n\t\n\t\t\t\t return new this.constructor().copy( this );\n\t\t\t\t */\n\t\n\t\t\t\treturn new Geometry().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tvar i, il, j, jl, k, kl;\n\t\n\t\t\t\t// reset\n\t\n\t\t\t\tthis.vertices = [];\n\t\t\t\tthis.colors = [];\n\t\t\t\tthis.faces = [];\n\t\t\t\tthis.faceVertexUvs = [[]];\n\t\t\t\tthis.morphTargets = [];\n\t\t\t\tthis.morphNormals = [];\n\t\t\t\tthis.skinWeights = [];\n\t\t\t\tthis.skinIndices = [];\n\t\t\t\tthis.lineDistances = [];\n\t\t\t\tthis.boundingBox = null;\n\t\t\t\tthis.boundingSphere = null;\n\t\n\t\t\t\t// name\n\t\n\t\t\t\tthis.name = source.name;\n\t\n\t\t\t\t// vertices\n\t\n\t\t\t\tvar vertices = source.vertices;\n\t\n\t\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// colors\n\t\n\t\t\t\tvar colors = source.colors;\n\t\n\t\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// faces\n\t\n\t\t\t\tvar faces = source.faces;\n\t\n\t\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// face vertex uvs\n\t\n\t\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\t\n\t\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\t\n\t\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\t\n\t\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\t\n\t\t\t\t\t\t\tvar uv = uvs[ k ];\n\t\n\t\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// morph targets\n\t\n\t\t\t\tvar morphTargets = source.morphTargets;\n\t\n\t\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar morphTarget = {};\n\t\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\t\n\t\t\t\t\t// vertices\n\t\n\t\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\t\n\t\t\t\t\t\tmorphTarget.vertices = [];\n\t\n\t\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// normals\n\t\n\t\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\t\n\t\t\t\t\t\tmorphTarget.normals = [];\n\t\n\t\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.morphTargets.push( morphTarget );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// morph normals\n\t\n\t\t\t\tvar morphNormals = source.morphNormals;\n\t\n\t\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar morphNormal = {};\n\t\n\t\t\t\t\t// vertex normals\n\t\n\t\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\t\n\t\t\t\t\t\tmorphNormal.vertexNormals = [];\n\t\n\t\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\t\tvar destVertexNormal = {};\n\t\n\t\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\t\n\t\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// face normals\n\t\n\t\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\t\n\t\t\t\t\t\tmorphNormal.faceNormals = [];\n\t\n\t\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.morphNormals.push( morphNormal );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// skin weights\n\t\n\t\t\t\tvar skinWeights = source.skinWeights;\n\t\n\t\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// skin indices\n\t\n\t\t\t\tvar skinIndices = source.skinIndices;\n\t\n\t\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// line distances\n\t\n\t\t\t\tvar lineDistances = source.lineDistances;\n\t\n\t\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// bounding box\n\t\n\t\t\t\tvar boundingBox = source.boundingBox;\n\t\n\t\t\t\tif ( boundingBox !== null ) {\n\t\n\t\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// bounding sphere\n\t\n\t\t\t\tvar boundingSphere = source.boundingSphere;\n\t\n\t\t\t\tif ( boundingSphere !== null ) {\n\t\n\t\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// update flags\n\t\n\t\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdispose: function () {\n\t\n\t\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction BufferAttribute( array, itemSize, normalized ) {\n\t\n\t\t\tif ( Array.isArray( array ) ) {\n\t\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\t\n\t\t\t}\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\t\tthis.name = '';\n\t\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\n\t\t\tthis.dynamic = false;\n\t\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\n\t\t\tthis.onUploadCallback = function () {};\n\t\n\t\t\tthis.version = 0;\n\t\n\t\t}\n\t\n\t\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\t\n\t\t\tset: function ( value ) {\n\t\n\t\t\t\tif ( value === true ) this.version ++;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( BufferAttribute.prototype, {\n\t\n\t\t\tisBufferAttribute: true,\n\t\n\t\t\tsetArray: function ( array ) {\n\t\n\t\t\t\tif ( Array.isArray( array ) ) {\n\t\n\t\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\t\tthis.array = array;\n\t\n\t\t\t},\n\t\n\t\t\tsetDynamic: function ( value ) {\n\t\n\t\t\t\tthis.dynamic = value;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\t\tthis.itemSize = source.itemSize;\n\t\t\t\tthis.count = source.count;\n\t\t\t\tthis.normalized = source.normalized;\n\t\n\t\t\t\tthis.dynamic = source.dynamic;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyAt: function ( index1, attribute, index2 ) {\n\t\n\t\t\t\tindex1 *= this.itemSize;\n\t\t\t\tindex2 *= attribute.itemSize;\n\t\n\t\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\t\n\t\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyArray: function ( array ) {\n\t\n\t\t\t\tthis.array.set( array );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyColorsArray: function ( colors ) {\n\t\n\t\t\t\tvar array = this.array, offset = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar color = colors[ i ];\n\t\n\t\t\t\t\tif ( color === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\t\tcolor = new Color();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\t\tarray[ offset ++ ] = color.b;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyIndicesArray: function ( indices ) {\n\t\n\t\t\t\tvar array = this.array, offset = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar index = indices[ i ];\n\t\n\t\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\t\tarray[ offset ++ ] = index.c;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyVector2sArray: function ( vectors ) {\n\t\n\t\t\t\tvar array = this.array, offset = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar vector = vectors[ i ];\n\t\n\t\t\t\t\tif ( vector === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\t\tvector = new Vector2();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyVector3sArray: function ( vectors ) {\n\t\n\t\t\t\tvar array = this.array, offset = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar vector = vectors[ i ];\n\t\n\t\t\t\t\tif ( vector === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\t\tvector = new Vector3();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyVector4sArray: function ( vectors ) {\n\t\n\t\t\t\tvar array = this.array, offset = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar vector = vectors[ i ];\n\t\n\t\t\t\t\tif ( vector === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\t\tvector = new Vector4();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\t\tarray[ offset ++ ] = vector.w;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tset: function ( value, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis.array.set( value, offset );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetX: function ( index ) {\n\t\n\t\t\t\treturn this.array[ index * this.itemSize ];\n\t\n\t\t\t},\n\t\n\t\t\tsetX: function ( index, x ) {\n\t\n\t\t\t\tthis.array[ index * this.itemSize ] = x;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetY: function ( index ) {\n\t\n\t\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\t\n\t\t\t},\n\t\n\t\t\tsetY: function ( index, y ) {\n\t\n\t\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetZ: function ( index ) {\n\t\n\t\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\t\n\t\t\t},\n\t\n\t\t\tsetZ: function ( index, z ) {\n\t\n\t\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetW: function ( index ) {\n\t\n\t\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\t\n\t\t\t},\n\t\n\t\t\tsetW: function ( index, w ) {\n\t\n\t\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetXY: function ( index, x, y ) {\n\t\n\t\t\t\tindex *= this.itemSize;\n\t\n\t\t\t\tthis.array[ index + 0 ] = x;\n\t\t\t\tthis.array[ index + 1 ] = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetXYZ: function ( index, x, y, z ) {\n\t\n\t\t\t\tindex *= this.itemSize;\n\t\n\t\t\t\tthis.array[ index + 0 ] = x;\n\t\t\t\tthis.array[ index + 1 ] = y;\n\t\t\t\tthis.array[ index + 2 ] = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetXYZW: function ( index, x, y, z, w ) {\n\t\n\t\t\t\tindex *= this.itemSize;\n\t\n\t\t\t\tthis.array[ index + 0 ] = x;\n\t\t\t\tthis.array[ index + 1 ] = y;\n\t\t\t\tthis.array[ index + 2 ] = z;\n\t\t\t\tthis.array[ index + 3 ] = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tonUpload: function ( callback ) {\n\t\n\t\t\t\tthis.onUploadCallback = callback;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tfunction Int8BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\t\n\t\n\t\tfunction Uint8BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\t\n\t\n\t\tfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\t\n\t\n\t\tfunction Int16BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\t\n\t\n\t\tfunction Uint16BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\t\n\t\n\t\tfunction Int32BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\t\n\t\n\t\tfunction Uint32BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\t\n\t\n\t\tfunction Float32BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\t\n\t\n\t\tfunction Float64BufferAttribute( array, itemSize ) {\n\t\n\t\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\t\n\t\t}\n\t\n\t\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\t\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction DirectGeometry() {\n\t\n\t\t\tthis.indices = [];\n\t\t\tthis.vertices = [];\n\t\t\tthis.normals = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.uvs = [];\n\t\t\tthis.uvs2 = [];\n\t\n\t\t\tthis.groups = [];\n\t\n\t\t\tthis.morphTargets = {};\n\t\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\n\t\t\t// this.lineDistances = [];\n\t\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\n\t\t\t// update flags\n\t\n\t\t\tthis.verticesNeedUpdate = false;\n\t\t\tthis.normalsNeedUpdate = false;\n\t\t\tthis.colorsNeedUpdate = false;\n\t\t\tthis.uvsNeedUpdate = false;\n\t\t\tthis.groupsNeedUpdate = false;\n\t\n\t\t}\n\t\n\t\tObject.assign( DirectGeometry.prototype, {\n\t\n\t\t\tcomputeGroups: function ( geometry ) {\n\t\n\t\t\t\tvar group;\n\t\t\t\tvar groups = [];\n\t\t\t\tvar materialIndex = undefined;\n\t\n\t\t\t\tvar faces = geometry.faces;\n\t\n\t\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\t\n\t\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\t\t// materials\n\t\n\t\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\t\n\t\t\t\t\t\tmaterialIndex = face.materialIndex;\n\t\n\t\t\t\t\t\tif ( group !== undefined ) {\n\t\n\t\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\t\tgroups.push( group );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tgroup = {\n\t\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( group !== undefined ) {\n\t\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.groups = groups;\n\t\n\t\t\t},\n\t\n\t\t\tfromGeometry: function ( geometry ) {\n\t\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\t\n\t\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\t\n\t\t\t\t// morphs\n\t\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\tvar morphTargetsLength = morphTargets.length;\n\t\n\t\t\t\tvar morphTargetsPosition;\n\t\n\t\t\t\tif ( morphTargetsLength > 0 ) {\n\t\n\t\t\t\t\tmorphTargetsPosition = [];\n\t\n\t\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\t\n\t\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\t\tvar morphNormalsLength = morphNormals.length;\n\t\n\t\t\t\tvar morphTargetsNormal;\n\t\n\t\t\t\tif ( morphNormalsLength > 0 ) {\n\t\n\t\t\t\t\tmorphTargetsNormal = [];\n\t\n\t\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\t\n\t\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// skins\n\t\n\t\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\t\tvar skinWeights = geometry.skinWeights;\n\t\n\t\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\t\n\t\t\t\t//\n\t\n\t\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\t\n\t\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\t\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\t\n\t\t\t\t\tif ( vertexNormals.length === 3 ) {\n\t\n\t\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvar normal = face.normal;\n\t\n\t\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\t\n\t\t\t\t\tif ( vertexColors.length === 3 ) {\n\t\n\t\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvar color = face.color;\n\t\n\t\t\t\t\t\tthis.colors.push( color, color, color );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasFaceVertexUv === true ) {\n\t\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\t\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\t\n\t\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\t\n\t\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\t\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\t\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\t\n\t\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\t\n\t\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// morphs\n\t\n\t\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\t\n\t\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\t\n\t\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\t\n\t\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\t\n\t\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// skins\n\t\n\t\t\t\t\tif ( hasSkinIndices ) {\n\t\n\t\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( hasSkinWeights ) {\n\t\n\t\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.computeGroups( geometry );\n\t\n\t\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction arrayMax( array ) {\n\t\n\t\t\tif ( array.length === 0 ) return - Infinity;\n\t\n\t\t\tvar max = array[ 0 ];\n\t\n\t\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\t\n\t\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\t\n\t\t\t}\n\t\n\t\t\treturn max;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction BufferGeometry() {\n\t\n\t\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\n\t\t\tthis.morphAttributes = {};\n\t\n\t\t\tthis.groups = [];\n\t\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\n\t\t\tthis.drawRange = { start: 0, count: Infinity };\n\t\n\t\t}\n\t\n\t\tBufferGeometry.MaxIndex = 65535;\n\t\n\t\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\t\n\t\t\tisBufferGeometry: true,\n\t\n\t\t\tgetIndex: function () {\n\t\n\t\t\t\treturn this.index;\n\t\n\t\t\t},\n\t\n\t\t\tsetIndex: function ( index ) {\n\t\n\t\t\t\tif ( Array.isArray( index ) ) {\n\t\n\t\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.index = index;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\taddAttribute: function ( name, attribute ) {\n\t\n\t\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\t\n\t\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\t\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( name === 'index' ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\t\tthis.setIndex( attribute );\n\t\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.attributes[ name ] = attribute;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetAttribute: function ( name ) {\n\t\n\t\t\t\treturn this.attributes[ name ];\n\t\n\t\t\t},\n\t\n\t\t\tremoveAttribute: function ( name ) {\n\t\n\t\t\t\tdelete this.attributes[ name ];\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddGroup: function ( start, count, materialIndex ) {\n\t\n\t\t\t\tthis.groups.push( {\n\t\n\t\t\t\t\tstart: start,\n\t\t\t\t\tcount: count,\n\t\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\t\n\t\t\t\t} );\n\t\n\t\t\t},\n\t\n\t\t\tclearGroups: function () {\n\t\n\t\t\t\tthis.groups = [];\n\t\n\t\t\t},\n\t\n\t\t\tsetDrawRange: function ( start, count ) {\n\t\n\t\t\t\tthis.drawRange.start = start;\n\t\t\t\tthis.drawRange.count = count;\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix: function ( matrix ) {\n\t\n\t\t\t\tvar position = this.attributes.position;\n\t\n\t\t\t\tif ( position !== undefined ) {\n\t\n\t\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\t\tposition.needsUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar normal = this.attributes.normal;\n\t\n\t\t\t\tif ( normal !== undefined ) {\n\t\n\t\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\t\n\t\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\t\tnormal.needsUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.boundingBox !== null ) {\n\t\n\t\t\t\t\tthis.computeBoundingBox();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.boundingSphere !== null ) {\n\t\n\t\t\t\t\tthis.computeBoundingSphere();\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\trotateX: function () {\n\t\n\t\t\t\t// rotate geometry around world x-axis\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function rotateX( angle ) {\n\t\n\t\t\t\t\tm1.makeRotationX( angle );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateY: function () {\n\t\n\t\t\t\t// rotate geometry around world y-axis\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function rotateY( angle ) {\n\t\n\t\t\t\t\tm1.makeRotationY( angle );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\trotateZ: function () {\n\t\n\t\t\t\t// rotate geometry around world z-axis\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function rotateZ( angle ) {\n\t\n\t\t\t\t\tm1.makeRotationZ( angle );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttranslate: function () {\n\t\n\t\t\t\t// translate geometry\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function translate( x, y, z ) {\n\t\n\t\t\t\t\tm1.makeTranslation( x, y, z );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tscale: function () {\n\t\n\t\t\t\t// scale geometry\n\t\n\t\t\t\tvar m1 = new Matrix4();\n\t\n\t\t\t\treturn function scale( x, y, z ) {\n\t\n\t\t\t\t\tm1.makeScale( x, y, z );\n\t\n\t\t\t\t\tthis.applyMatrix( m1 );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tlookAt: function () {\n\t\n\t\t\t\tvar obj = new Object3D();\n\t\n\t\t\t\treturn function lookAt( vector ) {\n\t\n\t\t\t\t\tobj.lookAt( vector );\n\t\n\t\t\t\t\tobj.updateMatrix();\n\t\n\t\t\t\t\tthis.applyMatrix( obj.matrix );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tcenter: function () {\n\t\n\t\t\t\tthis.computeBoundingBox();\n\t\n\t\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\t\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\t\n\t\t\t\treturn offset;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromObject: function ( object ) {\n\t\n\t\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\t\n\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\tif ( object.isPoints || object.isLine ) {\n\t\n\t\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\t\n\t\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\t\n\t\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\t\n\t\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\t\n\t\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\t\n\t\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( geometry.boundingBox !== null ) {\n\t\n\t\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( object.isMesh ) {\n\t\n\t\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\t\n\t\t\t\t\t\tthis.fromGeometry( geometry );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tupdateFromObject: function ( object ) {\n\t\n\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\tif ( object.isMesh ) {\n\t\n\t\t\t\t\tvar direct = geometry.__directGeometry;\n\t\n\t\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\t\n\t\t\t\t\t\tdirect = undefined;\n\t\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( direct === undefined ) {\n\t\n\t\t\t\t\t\treturn this.fromGeometry( geometry );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\t\n\t\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\t\tgeometry.groupsNeedUpdate = false;\n\t\n\t\t\t\t\tgeometry = direct;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar attribute;\n\t\n\t\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\t\n\t\t\t\t\tattribute = this.attributes.position;\n\t\n\t\t\t\t\tif ( attribute !== undefined ) {\n\t\n\t\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\t\tattribute.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\t\n\t\t\t\t\tattribute = this.attributes.normal;\n\t\n\t\t\t\t\tif ( attribute !== undefined ) {\n\t\n\t\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\t\tattribute.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\t\n\t\t\t\t\tattribute = this.attributes.color;\n\t\n\t\t\t\t\tif ( attribute !== undefined ) {\n\t\n\t\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\t\tattribute.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.uvsNeedUpdate ) {\n\t\n\t\t\t\t\tattribute = this.attributes.uv;\n\t\n\t\t\t\t\tif ( attribute !== undefined ) {\n\t\n\t\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\t\tattribute.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\t\n\t\t\t\t\tattribute = this.attributes.lineDistance;\n\t\n\t\t\t\t\tif ( attribute !== undefined ) {\n\t\n\t\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\t\tattribute.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.groupsNeedUpdate ) {\n\t\n\t\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\t\tthis.groups = geometry.groups;\n\t\n\t\t\t\t\tgeometry.groupsNeedUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tfromGeometry: function ( geometry ) {\n\t\n\t\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\t\n\t\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\t\n\t\t\t},\n\t\n\t\t\tfromDirectGeometry: function ( geometry ) {\n\t\n\t\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\t\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\t\n\t\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\t\n\t\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\t\n\t\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.uvs2.length > 0 ) {\n\t\n\t\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.indices.length > 0 ) {\n\t\n\t\t\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// groups\n\t\n\t\t\t\tthis.groups = geometry.groups;\n\t\n\t\t\t\t// morphs\n\t\n\t\t\t\tfor ( var name in geometry.morphTargets ) {\n\t\n\t\t\t\t\tvar array = [];\n\t\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\t\n\t\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\n\t\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\t\n\t\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.morphAttributes[ name ] = array;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// skinning\n\t\n\t\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\t\n\t\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\t\n\t\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\t\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\t\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcomputeBoundingBox: function () {\n\t\n\t\t\t\tif ( this.boundingBox === null ) {\n\t\n\t\t\t\t\tthis.boundingBox = new Box3();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar position = this.attributes.position;\n\t\n\t\t\t\tif ( position !== undefined ) {\n\t\n\t\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.boundingBox.makeEmpty();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tcomputeBoundingSphere: function () {\n\t\n\t\t\t\tvar box = new Box3();\n\t\t\t\tvar vector = new Vector3();\n\t\n\t\t\t\treturn function computeBoundingSphere() {\n\t\n\t\t\t\t\tif ( this.boundingSphere === null ) {\n\t\n\t\t\t\t\t\tthis.boundingSphere = new Sphere();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar position = this.attributes.position;\n\t\n\t\t\t\t\tif ( position ) {\n\t\n\t\t\t\t\t\tvar center = this.boundingSphere.center;\n\t\n\t\t\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\t\t\tbox.getCenter( center );\n\t\n\t\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\t\n\t\t\t\t\t\tvar maxRadiusSq = 0;\n\t\n\t\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\t\n\t\t\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\t\n\t\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\t\n\t\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tcomputeFaceNormals: function () {\n\t\n\t\t\t\t// backwards compatibility\n\t\n\t\t\t},\n\t\n\t\t\tcomputeVertexNormals: function () {\n\t\n\t\t\t\tvar index = this.index;\n\t\t\t\tvar attributes = this.attributes;\n\t\t\t\tvar groups = this.groups;\n\t\n\t\t\t\tif ( attributes.position ) {\n\t\n\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\tif ( attributes.normal === undefined ) {\n\t\n\t\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// reset existing normals to zero\n\t\n\t\t\t\t\t\tvar array = attributes.normal.array;\n\t\n\t\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\t\tarray[ i ] = 0;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar normals = attributes.normal.array;\n\t\n\t\t\t\t\tvar vA, vB, vC;\n\t\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\t\n\t\t\t\t\t// indexed elements\n\t\n\t\t\t\t\tif ( index ) {\n\t\n\t\t\t\t\t\tvar indices = index.array;\n\t\n\t\t\t\t\t\tif ( groups.length === 0 ) {\n\t\n\t\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\t\n\t\t\t\t\t\t\tvar group = groups[ j ];\n\t\n\t\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\t\tvar count = group.count;\n\t\n\t\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\t\n\t\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\t\n\t\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\t\tcb.cross( ab );\n\t\n\t\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\t\n\t\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\t\n\t\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\t\n\t\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\t\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\t\n\t\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\t\n\t\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\t\n\t\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.normalizeNormals();\n\t\n\t\t\t\t\tattributes.normal.needsUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmerge: function ( geometry, offset ) {\n\t\n\t\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tvar attributes = this.attributes;\n\t\n\t\t\t\tfor ( var key in attributes ) {\n\t\n\t\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\t\n\t\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\t\tvar attributeArray1 = attribute1.array;\n\t\n\t\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\t\tvar attributeArray2 = attribute2.array;\n\t\n\t\t\t\t\tvar attributeSize = attribute2.itemSize;\n\t\n\t\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\t\n\t\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tnormalizeNormals: function () {\n\t\n\t\t\t\tvar vector = new Vector3();\n\t\n\t\t\t\treturn function normalizeNormals() {\n\t\n\t\t\t\t\tvar normals = this.attributes.normal;\n\t\n\t\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\t\t\tvector.z = normals.getZ( i );\n\t\n\t\t\t\t\t\tvector.normalize();\n\t\n\t\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttoNonIndexed: function () {\n\t\n\t\t\t\tif ( this.index === null ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar geometry2 = new BufferGeometry();\n\t\n\t\t\t\tvar indices = this.index.array;\n\t\t\t\tvar attributes = this.attributes;\n\t\n\t\t\t\tfor ( var name in attributes ) {\n\t\n\t\t\t\t\tvar attribute = attributes[ name ];\n\t\n\t\t\t\t\tvar array = attribute.array;\n\t\t\t\t\tvar itemSize = attribute.itemSize;\n\t\n\t\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\t\n\t\t\t\t\tvar index = 0, index2 = 0;\n\t\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tindex = indices[ i ] * itemSize;\n\t\n\t\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\t\n\t\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn geometry2;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function () {\n\t\n\t\t\t\tvar data = {\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tversion: 4.5,\n\t\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// standard BufferGeometry serialization\n\t\n\t\t\t\tdata.uuid = this.uuid;\n\t\t\t\tdata.type = this.type;\n\t\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\n\t\t\t\tif ( this.parameters !== undefined ) {\n\t\n\t\t\t\t\tvar parameters = this.parameters;\n\t\n\t\t\t\t\tfor ( var key in parameters ) {\n\t\n\t\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn data;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tdata.data = { attributes: {} };\n\t\n\t\t\t\tvar index = this.index;\n\t\n\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\t\n\t\t\t\t\tdata.data.index = {\n\t\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\t\tarray: array\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar attributes = this.attributes;\n\t\n\t\t\t\tfor ( var key in attributes ) {\n\t\n\t\t\t\t\tvar attribute = attributes[ key ];\n\t\n\t\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\t\n\t\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\t\tarray: array,\n\t\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar groups = this.groups;\n\t\n\t\t\t\tif ( groups.length > 0 ) {\n\t\n\t\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar boundingSphere = this.boundingSphere;\n\t\n\t\t\t\tif ( boundingSphere !== null ) {\n\t\n\t\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\t/*\n\t\t\t\t // Handle primitives\n\t\n\t\t\t\t var parameters = this.parameters;\n\t\n\t\t\t\t if ( parameters !== undefined ) {\n\t\n\t\t\t\t var values = [];\n\t\n\t\t\t\t for ( var key in parameters ) {\n\t\n\t\t\t\t values.push( parameters[ key ] );\n\t\n\t\t\t\t }\n\t\n\t\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t\t this.constructor.apply( geometry, values );\n\t\t\t\t return geometry;\n\t\n\t\t\t\t }\n\t\n\t\t\t\t return new this.constructor().copy( this );\n\t\t\t\t */\n\t\n\t\t\t\treturn new BufferGeometry().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tvar name, i, l;\n\t\n\t\t\t\t// reset\n\t\n\t\t\t\tthis.index = null;\n\t\t\t\tthis.attributes = {};\n\t\t\t\tthis.morphAttributes = {};\n\t\t\t\tthis.groups = [];\n\t\t\t\tthis.boundingBox = null;\n\t\t\t\tthis.boundingSphere = null;\n\t\n\t\t\t\t// name\n\t\n\t\t\t\tthis.name = source.name;\n\t\n\t\t\t\t// index\n\t\n\t\t\t\tvar index = source.index;\n\t\n\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\tthis.setIndex( index.clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// attributes\n\t\n\t\t\t\tvar attributes = source.attributes;\n\t\n\t\t\t\tfor ( name in attributes ) {\n\t\n\t\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// morph attributes\n\t\n\t\t\t\tvar morphAttributes = source.morphAttributes;\n\t\n\t\t\t\tfor ( name in morphAttributes ) {\n\t\n\t\t\t\t\tvar array = [];\n\t\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\t\n\t\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.morphAttributes[ name ] = array;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// groups\n\t\n\t\t\t\tvar groups = source.groups;\n\t\n\t\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// bounding box\n\t\n\t\t\t\tvar boundingBox = source.boundingBox;\n\t\n\t\t\t\tif ( boundingBox !== null ) {\n\t\n\t\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// bounding sphere\n\t\n\t\t\t\tvar boundingSphere = source.boundingSphere;\n\t\n\t\t\t\tif ( boundingSphere !== null ) {\n\t\n\t\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// draw range\n\t\n\t\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\t\tthis.drawRange.count = source.drawRange.count;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdispose: function () {\n\t\n\t\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// BoxGeometry\n\t\n\t\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'BoxGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\t\tBoxGeometry.prototype.constructor = BoxGeometry;\n\t\n\t\t// BoxBufferGeometry\n\t\n\t\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'BoxBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\t// segments\n\t\n\t\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar numberOfVertices = 0;\n\t\t\tvar groupStart = 0;\n\t\n\t\t\t// build each side of the box geometry\n\t\n\t\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\t\n\t\t\t\tvar segmentWidth = width / gridX;\n\t\t\t\tvar segmentHeight = height / gridY;\n\t\n\t\t\t\tvar widthHalf = width / 2;\n\t\t\t\tvar heightHalf = height / 2;\n\t\t\t\tvar depthHalf = depth / 2;\n\t\n\t\t\t\tvar gridX1 = gridX + 1;\n\t\t\t\tvar gridY1 = gridY + 1;\n\t\n\t\t\t\tvar vertexCounter = 0;\n\t\t\t\tvar groupCount = 0;\n\t\n\t\t\t\tvar ix, iy;\n\t\n\t\t\t\tvar vector = new Vector3();\n\t\n\t\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\t\n\t\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\t\n\t\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\t\n\t\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\t\n\t\t\t\t\t\t// set values to correct vector component\n\t\n\t\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\t\tvector[ w ] = depthHalf;\n\t\n\t\t\t\t\t\t// now apply vector to vertex buffer\n\t\n\t\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\t\n\t\t\t\t\t\t// set values to correct vector component\n\t\n\t\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\t\n\t\t\t\t\t\t// now apply vector to normal buffer\n\t\n\t\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\t\n\t\t\t\t\t\t// uvs\n\t\n\t\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\t\n\t\t\t\t\t\t// counters\n\t\n\t\t\t\t\t\tvertexCounter += 1;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// indices\n\t\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\t\n\t\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\t\n\t\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\t\n\t\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\t\n\t\t\t\t\t\t// faces\n\t\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t\t\t// increase counter\n\t\n\t\t\t\t\t\tgroupCount += 6;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\n\t\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\t\n\t\t\t\t// calculate new start value for groups\n\t\n\t\t\t\tgroupStart += groupCount;\n\t\n\t\t\t\t// update total number of vertices\n\t\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// PlaneGeometry\n\t\n\t\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'PlaneGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\t\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\t\n\t\t// PlaneBufferGeometry\n\t\n\t\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'PlaneBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\n\t\t\tvar width_half = width / 2;\n\t\t\tvar height_half = height / 2;\n\t\n\t\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\t\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\t\n\t\t\tvar segment_width = width / gridX;\n\t\t\tvar segment_height = height / gridY;\n\t\n\t\t\tvar ix, iy;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\t\n\t\t\t\tvar y = iy * segment_height - height_half;\n\t\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\t\n\t\t\t\t\tvar x = ix * segment_width - width_half;\n\t\n\t\t\t\t\tvertices.push( x, - y, 0 );\n\t\n\t\t\t\t\tnormals.push( 0, 0, 1 );\n\t\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// indices\n\t\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\t\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\t\n\t\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\t\n\t\t\t\t\t// faces\n\t\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t}\n\t\n\t\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  opacity: <float>,\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  lightMap: new THREE.Texture( <Image> ),\n\t\t *  lightMapIntensity: <float>\n\t\t *\n\t\t *  aoMap: new THREE.Texture( <Image> ),\n\t\t *  aoMapIntensity: <float>\n\t\t *\n\t\t *  specularMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  alphaMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t\t *  combine: THREE.Multiply,\n\t\t *  reflectivity: <float>,\n\t\t *  refractionRatio: <float>,\n\t\t *\n\t\t *  depthTest: <bool>,\n\t\t *  depthWrite: <bool>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>,\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshBasicMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff ); // emissive\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\n\t\t\tthis.specularMap = null;\n\t\n\t\t\tthis.alphaMap = null;\n\t\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\t\n\t\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\t\n\t\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.color.copy( source.color );\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\n\t\t\tthis.specularMap = source.specularMap;\n\t\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Ray( origin, direction ) {\n\t\n\t\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\t\n\t\t}\n\t\n\t\tObject.assign( Ray.prototype, {\n\t\n\t\t\tset: function ( origin, direction ) {\n\t\n\t\t\t\tthis.origin.copy( origin );\n\t\t\t\tthis.direction.copy( direction );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( ray ) {\n\t\n\t\t\t\tthis.origin.copy( ray.origin );\n\t\t\t\tthis.direction.copy( ray.direction );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tat: function ( t, optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\t\n\t\t\t},\n\t\n\t\t\tlookAt: function ( v ) {\n\t\n\t\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\trecast: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function recast( t ) {\n\t\n\t\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\t\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tresult.subVectors( point, this.origin );\n\t\t\t\tvar directionDistance = result.dot( this.direction );\n\t\n\t\t\t\tif ( directionDistance < 0 ) {\n\t\n\t\t\t\t\treturn result.copy( this.origin );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToPoint: function ( point ) {\n\t\n\t\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceSqToPoint: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function distanceSqToPoint( point ) {\n\t\n\t\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\t\n\t\t\t\t\t// point behind the ray\n\t\n\t\t\t\t\tif ( directionDistance < 0 ) {\n\t\n\t\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\t\n\t\t\t\t\treturn v1.distanceToSquared( point );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tdistanceSqToSegment: function () {\n\t\n\t\t\t\tvar segCenter = new Vector3();\n\t\t\t\tvar segDir = new Vector3();\n\t\t\t\tvar diff = new Vector3();\n\t\n\t\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\t\n\t\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t\t// defined by v0 and v1\n\t\t\t\t\t// It can also set two optional targets :\n\t\t\t\t\t// - The closest point on the ray\n\t\t\t\t\t// - The closest point on the segment\n\t\n\t\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\t\n\t\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\t\tvar s0, s1, sqrDist, extDet;\n\t\n\t\t\t\t\tif ( det > 0 ) {\n\t\n\t\t\t\t\t\t// The ray and segment are not parallel.\n\t\n\t\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\t\textDet = segExtent * det;\n\t\n\t\t\t\t\t\tif ( s0 >= 0 ) {\n\t\n\t\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\t\n\t\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\t\n\t\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\n\t\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t// region 1\n\t\n\t\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t// region 5\n\t\n\t\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\t\n\t\t\t\t\t\t\t\t// region 4\n\t\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\t\n\t\t\t\t\t\t\t\t// region 3\n\t\n\t\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t// region 2\n\t\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// Ray and segment are parallel.\n\t\n\t\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( optionalPointOnRay ) {\n\t\n\t\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( optionalPointOnSegment ) {\n\t\n\t\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn sqrDist;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersectSphere: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\t\n\t\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\t\n\t\t\t\t\tif ( d2 > radius2 ) return null;\n\t\n\t\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\t\n\t\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\t\tvar t0 = tca - thc;\n\t\n\t\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\t\tvar t1 = tca + thc;\n\t\n\t\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\t\n\t\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\t\n\t\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\t\treturn this.at( t0, optionalTarget );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tintersectsSphere: function ( sphere ) {\n\t\n\t\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\t\n\t\t\t},\n\t\n\t\t\tdistanceToPlane: function ( plane ) {\n\t\n\t\t\t\tvar denominator = plane.normal.dot( this.direction );\n\t\n\t\t\t\tif ( denominator === 0 ) {\n\t\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\t\n\t\t\t\t\t\treturn 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\t\n\t\t\t\t\treturn null;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\t\n\t\t\t\t// Return if the ray never intersects the plane\n\t\n\t\t\t\treturn t >= 0 ? t :  null;\n\t\n\t\t\t},\n\t\n\t\t\tintersectPlane: function ( plane, optionalTarget ) {\n\t\n\t\t\t\tvar t = this.distanceToPlane( plane );\n\t\n\t\t\t\tif ( t === null ) {\n\t\n\t\t\t\t\treturn null;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this.at( t, optionalTarget );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsPlane: function ( plane ) {\n\t\n\t\t\t\t// check if the ray lies on the plane first\n\t\n\t\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\t\n\t\t\t\tif ( distToPoint === 0 ) {\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar denominator = plane.normal.dot( this.direction );\n\t\n\t\t\t\tif ( denominator * distToPoint < 0 ) {\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\t\n\t\t\t\treturn false;\n\t\n\t\t\t},\n\t\n\t\t\tintersectBox: function ( box, optionalTarget ) {\n\t\n\t\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\n\t\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\n\t\t\t\tvar origin = this.origin;\n\t\n\t\t\t\tif ( invdirx >= 0 ) {\n\t\n\t\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( invdiry >= 0 ) {\n\t\n\t\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\t\n\t\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\t\n\t\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\t\n\t\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\t\n\t\t\t\tif ( invdirz >= 0 ) {\n\t\n\t\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\t\n\t\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\t\n\t\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\t\n\t\t\t\t//return point closest to the ray (positive side)\n\t\n\t\t\t\tif ( tmax < 0 ) return null;\n\t\n\t\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\t\n\t\t\t},\n\t\n\t\t\tintersectsBox: ( function () {\n\t\n\t\t\t\tvar v = new Vector3();\n\t\n\t\t\t\treturn function intersectsBox( box ) {\n\t\n\t\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\t\n\t\t\t\t};\n\t\n\t\t\t} )(),\n\t\n\t\t\tintersectTriangle: function () {\n\t\n\t\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t\tvar diff = new Vector3();\n\t\t\t\tvar edge1 = new Vector3();\n\t\t\t\tvar edge2 = new Vector3();\n\t\t\t\tvar normal = new Vector3();\n\t\n\t\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\t\n\t\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\n\t\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\t\n\t\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\t\tvar sign;\n\t\n\t\t\t\t\tif ( DdN > 0 ) {\n\t\n\t\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\t\tsign = 1;\n\t\n\t\t\t\t\t} else if ( DdN < 0 ) {\n\t\n\t\t\t\t\t\tsign = - 1;\n\t\t\t\t\t\tDdN = - DdN;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\t\n\t\t\t\t\t// b1 < 0, no intersection\n\t\t\t\t\tif ( DdQxE2 < 0 ) {\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\t\n\t\t\t\t\t// b2 < 0, no intersection\n\t\t\t\t\tif ( DdE1xQ < 0 ) {\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\t\n\t\t\t\t\t// t < 0, no intersection\n\t\t\t\t\tif ( QdN < 0 ) {\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Ray intersects triangle.\n\t\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tapplyMatrix4: function ( matrix4 ) {\n\t\n\t\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\t\tthis.direction.transformDirection( matrix4 );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( ray ) {\n\t\n\t\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t */\n\t\n\t\tfunction Line3( start, end ) {\n\t\n\t\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\t\n\t\t}\n\t\n\t\tObject.assign( Line3.prototype, {\n\t\n\t\t\tset: function ( start, end ) {\n\t\n\t\t\t\tthis.start.copy( start );\n\t\t\t\tthis.end.copy( end );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( line ) {\n\t\n\t\t\t\tthis.start.copy( line.start );\n\t\t\t\tthis.end.copy( line.end );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetCenter: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\t\n\t\t\t},\n\t\n\t\t\tdelta: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\treturn result.subVectors( this.end, this.start );\n\t\n\t\t\t},\n\t\n\t\t\tdistanceSq: function () {\n\t\n\t\t\t\treturn this.start.distanceToSquared( this.end );\n\t\n\t\t\t},\n\t\n\t\t\tdistance: function () {\n\t\n\t\t\t\treturn this.start.distanceTo( this.end );\n\t\n\t\t\t},\n\t\n\t\t\tat: function ( t, optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\t\n\t\t\t},\n\t\n\t\t\tclosestPointToPointParameter: function () {\n\t\n\t\t\t\tvar startP = new Vector3();\n\t\t\t\tvar startEnd = new Vector3();\n\t\n\t\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\t\n\t\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\t\n\t\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\t\n\t\t\t\t\tvar t = startEnd_startP / startEnd2;\n\t\n\t\t\t\t\tif ( clampToLine ) {\n\t\n\t\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn t;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\t\n\t\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\t\n\t\t\t},\n\t\n\t\t\tapplyMatrix4: function ( matrix ) {\n\t\n\t\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\t\tthis.end.applyMatrix4( matrix );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tequals: function ( line ) {\n\t\n\t\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Triangle( a, b, c ) {\n\t\n\t\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\t\n\t\t}\n\t\n\t\tObject.assign( Triangle, {\n\t\n\t\t\tnormal: function () {\n\t\n\t\t\t\tvar v0 = new Vector3();\n\t\n\t\t\t\treturn function normal( a, b, c, optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\t\tresult.subVectors( c, b );\n\t\t\t\t\tv0.subVectors( a, b );\n\t\t\t\t\tresult.cross( v0 );\n\t\n\t\t\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\t\t\tif ( resultLengthSq > 0 ) {\n\t\n\t\t\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn result.set( 0, 0, 0 );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\t// static/instance method to calculate barycentric coordinates\n\t\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\t\tbarycoordFromPoint: function () {\n\t\n\t\t\t\tvar v0 = new Vector3();\n\t\t\t\tvar v1 = new Vector3();\n\t\t\t\tvar v2 = new Vector3();\n\t\n\t\t\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\t\n\t\t\t\t\tv0.subVectors( c, a );\n\t\t\t\t\tv1.subVectors( b, a );\n\t\t\t\t\tv2.subVectors( point, a );\n\t\n\t\t\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\t\t\tvar dot12 = v1.dot( v2 );\n\t\n\t\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\n\t\t\t\t\t// collinear or singular triangle\n\t\t\t\t\tif ( denom === 0 ) {\n\t\n\t\t\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar invDenom = 1 / denom;\n\t\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\t\n\t\t\t\t\t// barycentric coordinates must always sum to 1\n\t\t\t\t\treturn result.set( 1 - u - v, v, u );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tcontainsPoint: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function containsPoint( point, a, b, c ) {\n\t\n\t\t\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\t\n\t\t\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\t\n\t\t\t\t};\n\t\n\t\t\t}()\n\t\n\t\t} );\n\t\n\t\tObject.assign( Triangle.prototype, {\n\t\n\t\t\tset: function ( a, b, c ) {\n\t\n\t\t\t\tthis.a.copy( a );\n\t\t\t\tthis.b.copy( b );\n\t\t\t\tthis.c.copy( c );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\t\n\t\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\t\tthis.c.copy( points[ i2 ] );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( triangle ) {\n\t\n\t\t\t\tthis.a.copy( triangle.a );\n\t\t\t\tthis.b.copy( triangle.b );\n\t\t\t\tthis.c.copy( triangle.c );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tarea: function () {\n\t\n\t\t\t\tvar v0 = new Vector3();\n\t\t\t\tvar v1 = new Vector3();\n\t\n\t\t\t\treturn function area() {\n\t\n\t\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\t\tv1.subVectors( this.a, this.b );\n\t\n\t\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tmidpoint: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\t\n\t\t\t},\n\t\n\t\t\tnormal: function ( optionalTarget ) {\n\t\n\t\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\t\n\t\t\t},\n\t\n\t\t\tplane: function ( optionalTarget ) {\n\t\n\t\t\t\tvar result = optionalTarget || new Plane();\n\t\n\t\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\n\t\t\t},\n\t\n\t\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\t\n\t\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\t\n\t\t\t},\n\t\n\t\t\tcontainsPoint: function ( point ) {\n\t\n\t\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\t\n\t\t\t},\n\t\n\t\t\tclosestPointToPoint: function () {\n\t\n\t\t\t\tvar plane = new Plane();\n\t\t\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\t\tvar projectedPoint = new Vector3();\n\t\t\t\tvar closestPoint = new Vector3();\n\t\n\t\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\t\n\t\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\t\tvar minDistance = Infinity;\n\t\n\t\t\t\t\t// project the point onto the plane of the triangle\n\t\n\t\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\t\tplane.projectPoint( point, projectedPoint );\n\t\n\t\t\t\t\t// check if the projection lies within the triangle\n\t\n\t\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\t\n\t\t\t\t\t\t// if so, this is the closest point\n\t\n\t\t\t\t\t\tresult.copy( projectedPoint );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\t\n\t\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\t\n\t\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\t\n\t\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\t\n\t\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\t\n\t\t\t\t\t\t\tif( distance < minDistance ) {\n\t\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\n\t\t\t\t\t\t\t\tresult.copy( closestPoint );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn result;\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tequals: function ( triangle ) {\n\t\n\t\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author jonobr1 / http://jonobr1.com/\n\t\t */\n\t\n\t\tfunction Mesh( geometry, material ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Mesh';\n\t\n\t\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\t\n\t\t\tthis.drawMode = TrianglesDrawMode;\n\t\n\t\t\tthis.updateMorphTargets();\n\t\n\t\t}\n\t\n\t\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Mesh,\n\t\n\t\t\tisMesh: true,\n\t\n\t\t\tsetDrawMode: function ( value ) {\n\t\n\t\t\t\tthis.drawMode = value;\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tObject3D.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.drawMode = source.drawMode;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tupdateMorphTargets: function () {\n\t\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar m, ml, name;\n\t\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\t\tvar keys = Object.keys( morphAttributes );\n\t\n\t\t\t\t\tif ( keys.length > 0 ) {\n\t\n\t\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\t\n\t\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\t\n\t\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\t\n\t\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\t\n\t\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\t\n\t\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\n\t\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\t\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\t\n\t\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\t\n\t\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\t\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\traycast: ( function () {\n\t\n\t\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\t\tvar ray = new Ray();\n\t\t\t\tvar sphere = new Sphere();\n\t\n\t\t\t\tvar vA = new Vector3();\n\t\t\t\tvar vB = new Vector3();\n\t\t\t\tvar vC = new Vector3();\n\t\n\t\t\t\tvar tempA = new Vector3();\n\t\t\t\tvar tempB = new Vector3();\n\t\t\t\tvar tempC = new Vector3();\n\t\n\t\t\t\tvar uvA = new Vector2();\n\t\t\t\tvar uvB = new Vector2();\n\t\t\t\tvar uvC = new Vector2();\n\t\n\t\t\t\tvar barycoord = new Vector3();\n\t\n\t\t\t\tvar intersectionPoint = new Vector3();\n\t\t\t\tvar intersectionPointWorld = new Vector3();\n\t\n\t\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\t\n\t\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\t\n\t\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\t\n\t\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\t\n\t\t\t\t\treturn uv1.clone();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\t\n\t\t\t\t\tvar intersect;\n\t\n\t\t\t\t\tif ( material.side === BackSide ) {\n\t\n\t\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( intersect === null ) return null;\n\t\n\t\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\t\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\t\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\t\tobject: object\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\t\n\t\t\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\t\t\tvC.fromBufferAttribute( position, c );\n\t\n\t\t\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\t\n\t\t\t\t\tif ( intersection ) {\n\t\n\t\t\t\t\t\tif ( uv ) {\n\t\n\t\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\t\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\t\tintersection.faceIndex = a;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn intersection;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn function raycast( raycaster, intersects ) {\n\t\n\t\t\t\t\tvar geometry = this.geometry;\n\t\t\t\t\tvar material = this.material;\n\t\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\n\t\t\t\t\tif ( material === undefined ) return;\n\t\n\t\t\t\t\t// Checking boundingSphere distance to ray\n\t\n\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\n\t\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\n\t\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\t\n\t\t\t\t\t//\n\t\n\t\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\t\n\t\t\t\t\t// Check boundingBox before continuing\n\t\n\t\t\t\t\tif ( geometry.boundingBox !== null ) {\n\t\n\t\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar intersection;\n\t\n\t\t\t\t\tif ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\t\tvar a, b, c;\n\t\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\t\t\tvar i, l;\n\t\n\t\t\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\t\t\t// indexed buffer geometry\n\t\n\t\t\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\t\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\t\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\t\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// non-indexed buffer geometry\n\t\n\t\t\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\t\tc = i + 2;\n\t\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\t\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\t\n\t\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( geometry.isGeometry ) {\n\t\n\t\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\t\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\t\tvar uvs;\n\t\n\t\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\t\n\t\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\t\n\t\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\t\n\t\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\t\tfvC = vertices[ face.c ];\n\t\n\t\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\t\n\t\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\t\n\t\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\t\n\t\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\t\n\t\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\t\n\t\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\t\n\t\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\t\tvC.add( fvC );\n\t\n\t\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\t\tfvC = vC;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\t\n\t\t\t\t\t\t\tif ( intersection ) {\n\t\n\t\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\t\n\t\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\t\n\t\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}() ),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\t\n\t\t\tvar clearColor = new Color( 0x000000 );\n\t\t\tvar clearAlpha = 0;\n\t\n\t\t\tvar planeCamera, planeMesh;\n\t\t\tvar boxMesh;\n\t\n\t\t\tfunction render( renderList, scene, camera, forceClear ) {\n\t\n\t\t\t\tvar background = scene.background;\n\t\n\t\t\t\tif ( background === null ) {\n\t\n\t\t\t\t\tsetClear( clearColor, clearAlpha );\n\t\n\t\t\t\t} else if ( background && background.isColor ) {\n\t\n\t\t\t\t\tsetClear( background, 1 );\n\t\t\t\t\tforceClear = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( renderer.autoClear || forceClear ) {\n\t\n\t\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( background && background.isCubeTexture ) {\n\t\n\t\t\t\t\tif ( boxMesh === undefined ) {\n\t\n\t\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\t\tpolygonOffset: true,\n\t\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\t\n\t\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\t\n\t\t\t\t\t\t\tvar scale = camera.far;\n\t\n\t\t\t\t\t\t\tthis.matrixWorld.makeScale( scale, scale, scale );\n\t\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\t\n\t\t\t\t\t\t\tthis.material.polygonOffsetUnits = scale * 10;\n\t\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tgeometries.update( boxMesh.geometry );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\t\n\t\t\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\t\n\t\t\t\t} else if ( background && background.isTexture ) {\n\t\n\t\t\t\t\tif ( planeCamera === undefined ) {\n\t\n\t\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\n\t\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\tgeometries.update( planeMesh.geometry );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tplaneMesh.material.map = background;\n\t\n\t\t\t\t\t// TODO Push this to renderList\n\t\n\t\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction setClear( color, alpha ) {\n\t\n\t\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tgetClearColor: function () {\n\t\n\t\t\t\t\treturn clearColor;\n\t\n\t\t\t\t},\n\t\t\t\tsetClearColor: function ( color, alpha ) {\n\t\n\t\t\t\t\tclearColor.set( color );\n\t\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\t\tsetClear( clearColor, clearAlpha );\n\t\n\t\t\t\t},\n\t\t\t\tgetClearAlpha: function () {\n\t\n\t\t\t\t\treturn clearAlpha;\n\t\n\t\t\t\t},\n\t\t\t\tsetClearAlpha: function ( alpha ) {\n\t\n\t\t\t\t\tclearAlpha = alpha;\n\t\t\t\t\tsetClear( clearColor, clearAlpha );\n\t\n\t\t\t\t},\n\t\t\t\trender: render\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction painterSortStable( a, b ) {\n\t\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\t\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\t\n\t\t\t} else if ( a.program && b.program && a.program !== b.program ) {\n\t\n\t\t\t\treturn a.program.id - b.program.id;\n\t\n\t\t\t} else if ( a.material.id !== b.material.id ) {\n\t\n\t\t\t\treturn a.material.id - b.material.id;\n\t\n\t\t\t} else if ( a.z !== b.z ) {\n\t\n\t\t\t\treturn a.z - b.z;\n\t\n\t\t\t} else {\n\t\n\t\t\t\treturn a.id - b.id;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction reversePainterSortStable( a, b ) {\n\t\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\t\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\t\n\t\t\t} if ( a.z !== b.z ) {\n\t\n\t\t\t\treturn b.z - a.z;\n\t\n\t\t\t} else {\n\t\n\t\t\t\treturn a.id - b.id;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction WebGLRenderList() {\n\t\n\t\t\tvar renderItems = [];\n\t\t\tvar renderItemsIndex = 0;\n\t\n\t\t\tvar opaque = [];\n\t\t\tvar transparent = [];\n\t\n\t\t\tfunction init() {\n\t\n\t\t\t\trenderItemsIndex = 0;\n\t\n\t\t\t\topaque.length = 0;\n\t\t\t\ttransparent.length = 0;\n\t\n\t\t\t}\n\t\n\t\t\tfunction push( object, geometry, material, z, group ) {\n\t\n\t\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\t\n\t\t\t\tif ( renderItem === undefined ) {\n\t\n\t\t\t\t\trenderItem = {\n\t\t\t\t\t\tid: object.id,\n\t\t\t\t\t\tobject: object,\n\t\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\tprogram: material.program,\n\t\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\t\tz: z,\n\t\t\t\t\t\tgroup: group\n\t\t\t\t\t};\n\t\n\t\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\trenderItem.id = object.id;\n\t\t\t\t\trenderItem.object = object;\n\t\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\t\trenderItem.material = material;\n\t\t\t\t\trenderItem.program = material.program;\n\t\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\t\trenderItem.z = z;\n\t\t\t\t\trenderItem.group = group;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\t\n\t\t\t\trenderItemsIndex ++;\n\t\n\t\t\t}\n\t\n\t\t\tfunction sort() {\n\t\n\t\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\topaque: opaque,\n\t\t\t\ttransparent: transparent,\n\t\n\t\t\t\tinit: init,\n\t\t\t\tpush: push,\n\t\n\t\t\t\tsort: sort\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tfunction WebGLRenderLists() {\n\t\n\t\t\tvar lists = {};\n\t\n\t\t\tfunction get( scene, camera ) {\n\t\n\t\t\t\tvar hash = scene.id + ',' + camera.id;\n\t\t\t\tvar list = lists[ hash ];\n\t\n\t\t\t\tif ( list === undefined ) {\n\t\n\t\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\t\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tlists[ hash ] = list;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn list;\n\t\n\t\t\t}\n\t\n\t\t\tfunction dispose() {\n\t\n\t\t\t\tlists = {};\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tget: get,\n\t\t\t\tdispose: dispose\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction absNumericalSort( a, b ) {\n\t\n\t\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\t\n\t\t}\n\t\n\t\tfunction WebGLMorphtargets( gl ) {\n\t\n\t\t\tvar influencesList = {};\n\t\t\tvar morphInfluences = new Float32Array( 8 );\n\t\n\t\t\tfunction update( object, geometry, material, program ) {\n\t\n\t\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\t\n\t\t\t\tvar length = objectInfluences.length;\n\t\n\t\t\t\tvar influences = influencesList[ geometry.id ];\n\t\n\t\t\t\tif ( influences === undefined ) {\n\t\n\t\t\t\t\t// initialise list\n\t\n\t\t\t\t\tinfluences = [];\n\t\n\t\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\t\n\t\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\t\n\t\t\t\t// Remove current morphAttributes\n\t\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\t\n\t\t\t\t\tvar influence = influences[ i ];\n\t\n\t\t\t\t\tif ( influence[ 1 ] !== 0 ) {\n\t\n\t\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Collect influences\n\t\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\t\n\t\t\t\t\tvar influence = influences[ i ];\n\t\n\t\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tinfluences.sort( absNumericalSort );\n\t\n\t\t\t\t// Add morphAttributes\n\t\n\t\t\t\tfor ( var i = 0; i < 8; i ++ ) {\n\t\n\t\t\t\t\tvar influence = influences[ i ];\n\t\n\t\t\t\t\tif ( influence ) {\n\t\n\t\t\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\t\t\tvar value = influence[ 1 ];\n\t\n\t\t\t\t\t\tif ( value ) {\n\t\n\t\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\t\n\t\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tupdate: update\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\t\n\t\t\tvar mode;\n\t\n\t\t\tfunction setMode( value ) {\n\t\n\t\t\t\tmode = value;\n\t\n\t\t\t}\n\t\n\t\t\tvar type, bytesPerElement;\n\t\n\t\t\tfunction setIndex( value ) {\n\t\n\t\t\t\ttype = value.type;\n\t\t\t\tbytesPerElement = value.bytesPerElement;\n\t\n\t\t\t}\n\t\n\t\t\tfunction render( start, count ) {\n\t\n\t\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\t\n\t\t\t\tinfoRender.calls ++;\n\t\t\t\tinfoRender.vertices += count;\n\t\n\t\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\t\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\t\n\t\t\t}\n\t\n\t\t\tfunction renderInstances( geometry, start, count ) {\n\t\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\n\t\t\t\tif ( extension === null ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\t\n\t\t\t\tinfoRender.calls ++;\n\t\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\t\n\t\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tthis.setMode = setMode;\n\t\t\tthis.setIndex = setIndex;\n\t\t\tthis.render = render;\n\t\t\tthis.renderInstances = renderInstances;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\t\n\t\t\tvar mode;\n\t\n\t\t\tfunction setMode( value ) {\n\t\n\t\t\t\tmode = value;\n\t\n\t\t\t}\n\t\n\t\t\tfunction render( start, count ) {\n\t\n\t\t\t\tgl.drawArrays( mode, start, count );\n\t\n\t\t\t\tinfoRender.calls ++;\n\t\t\t\tinfoRender.vertices += count;\n\t\n\t\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\t\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\t\n\t\t\t}\n\t\n\t\t\tfunction renderInstances( geometry, start, count ) {\n\t\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\n\t\t\t\tif ( extension === null ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar position = geometry.attributes.position;\n\t\n\t\t\t\tif ( position.isInterleavedBufferAttribute ) {\n\t\n\t\t\t\t\tcount = position.data.count;\n\t\n\t\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tinfoRender.calls ++;\n\t\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\t\n\t\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tthis.setMode = setMode;\n\t\t\tthis.render = render;\n\t\t\tthis.renderInstances = renderInstances;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\t\n\t\t\tvar geometries = {};\n\t\t\tvar wireframeAttributes = {};\n\t\n\t\t\tfunction onGeometryDispose( event ) {\n\t\n\t\t\t\tvar geometry = event.target;\n\t\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\t\n\t\t\t\tif ( buffergeometry.index !== null ) {\n\t\n\t\t\t\t\tattributes.remove( buffergeometry.index );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var name in buffergeometry.attributes ) {\n\t\n\t\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\t\n\t\t\t\tdelete geometries[ geometry.id ];\n\t\n\t\t\t\t// TODO Remove duplicate code\n\t\n\t\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\t\n\t\t\t\tif ( attribute ) {\n\t\n\t\t\t\t\tattributes.remove( attribute );\n\t\t\t\t\tdelete wireframeAttributes[ geometry.id ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\t\n\t\t\t\tif ( attribute ) {\n\t\n\t\t\t\t\tattributes.remove( attribute );\n\t\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tinfoMemory.geometries --;\n\t\n\t\t\t}\n\t\n\t\t\tfunction get( object, geometry ) {\n\t\n\t\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\t\n\t\t\t\tif ( buffergeometry ) return buffergeometry;\n\t\n\t\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\t\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\tbuffergeometry = geometry;\n\t\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\t\n\t\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\t\n\t\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\t\n\t\t\t\tinfoMemory.geometries ++;\n\t\n\t\t\t\treturn buffergeometry;\n\t\n\t\t\t}\n\t\n\t\t\tfunction update( geometry ) {\n\t\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar geometryAttributes = geometry.attributes;\n\t\n\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var name in geometryAttributes ) {\n\t\n\t\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// morph targets\n\t\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\n\t\t\t\tfor ( var name in morphAttributes ) {\n\t\n\t\t\t\t\tvar array = morphAttributes[ name ];\n\t\n\t\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction getWireframeAttribute( geometry ) {\n\t\n\t\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\t\n\t\t\t\tif ( attribute ) return attribute;\n\t\n\t\t\t\tvar indices = [];\n\t\n\t\t\t\tvar geometryIndex = geometry.index;\n\t\t\t\tvar geometryAttributes = geometry.attributes;\n\t\n\t\t\t\t// console.time( 'wireframe' );\n\t\n\t\t\t\tif ( geometryIndex !== null ) {\n\t\n\t\t\t\t\tvar array = geometryIndex.array;\n\t\n\t\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\t\tvar c = array[ i + 2 ];\n\t\n\t\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar array = geometryAttributes.position.array;\n\t\n\t\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\t\tvar c = i + 2;\n\t\n\t\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// console.timeEnd( 'wireframe' );\n\t\n\t\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\n\t\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\t\n\t\t\t\twireframeAttributes[ geometry.id ] = attribute;\n\t\n\t\t\t\treturn attribute;\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tget: get,\n\t\t\t\tupdate: update,\n\t\n\t\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction UniformsCache() {\n\t\n\t\t\tvar lights = {};\n\t\n\t\t\treturn {\n\t\n\t\t\t\tget: function ( light ) {\n\t\n\t\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\t\n\t\t\t\t\t\treturn lights[ light.id ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar uniforms;\n\t\n\t\t\t\t\tswitch ( light.type ) {\n\t\n\t\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\t\tcolor: new Color(),\n\t\n\t\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\t\tdecay: 0,\n\t\n\t\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\t\tdecay: 0,\n\t\n\t\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlights[ light.id ] = uniforms;\n\t\n\t\t\t\t\treturn uniforms;\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tfunction WebGLLights() {\n\t\n\t\t\tvar cache = new UniformsCache();\n\t\n\t\t\tvar state = {\n\t\n\t\t\t\thash: '',\n\t\n\t\t\t\tambient: [ 0, 0, 0 ],\n\t\t\t\tdirectional: [],\n\t\t\t\tdirectionalShadowMap: [],\n\t\t\t\tdirectionalShadowMatrix: [],\n\t\t\t\tspot: [],\n\t\t\t\tspotShadowMap: [],\n\t\t\t\tspotShadowMatrix: [],\n\t\t\t\trectArea: [],\n\t\t\t\tpoint: [],\n\t\t\t\tpointShadowMap: [],\n\t\t\t\tpointShadowMatrix: [],\n\t\t\t\themi: []\n\t\n\t\t\t};\n\t\n\t\t\tvar vector3 = new Vector3();\n\t\t\tvar matrix4 = new Matrix4();\n\t\t\tvar matrix42 = new Matrix4();\n\t\n\t\t\tfunction setup( lights, shadows, camera ) {\n\t\n\t\t\t\tvar r = 0, g = 0, b = 0;\n\t\n\t\t\t\tvar directionalLength = 0;\n\t\t\t\tvar pointLength = 0;\n\t\t\t\tvar spotLength = 0;\n\t\t\t\tvar rectAreaLength = 0;\n\t\t\t\tvar hemiLength = 0;\n\t\n\t\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\t\n\t\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar light = lights[ i ];\n\t\n\t\t\t\t\tvar color = light.color;\n\t\t\t\t\tvar intensity = light.intensity;\n\t\t\t\t\tvar distance = light.distance;\n\t\n\t\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\t\n\t\t\t\t\tif ( light.isAmbientLight ) {\n\t\n\t\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\t\tb += color.b * intensity;\n\t\n\t\t\t\t\t} else if ( light.isDirectionalLight ) {\n\t\n\t\t\t\t\t\tvar uniforms = cache.get( light );\n\t\n\t\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\n\t\t\t\t\t\tuniforms.shadow = light.castShadow;\n\t\n\t\t\t\t\t\tif ( light.castShadow ) {\n\t\n\t\t\t\t\t\t\tvar shadow = light.shadow;\n\t\n\t\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\t\n\t\t\t\t\t\tdirectionalLength ++;\n\t\n\t\t\t\t\t} else if ( light.isSpotLight ) {\n\t\n\t\t\t\t\t\tvar uniforms = cache.get( light );\n\t\n\t\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\t\n\t\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\t\tuniforms.distance = distance;\n\t\n\t\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\n\t\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\t\n\t\t\t\t\t\tuniforms.shadow = light.castShadow;\n\t\n\t\t\t\t\t\tif ( light.castShadow ) {\n\t\n\t\t\t\t\t\t\tvar shadow = light.shadow;\n\t\n\t\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\t\n\t\t\t\t\t\tspotLength ++;\n\t\n\t\t\t\t\t} else if ( light.isRectAreaLight ) {\n\t\n\t\t\t\t\t\tvar uniforms = cache.get( light );\n\t\n\t\t\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\t\t\tuniforms.color\n\t\t\t\t\t\t\t.copy( color )\n\t\t\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\t\n\t\t\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\t\n\t\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\t\n\t\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\t\n\t\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\t\n\t\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\t\n\t\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t\t// uniforms.distance = distance;\n\t\n\t\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\t\n\t\t\t\t\t\trectAreaLength ++;\n\t\n\t\t\t\t\t} else if ( light.isPointLight ) {\n\t\n\t\t\t\t\t\tvar uniforms = cache.get( light );\n\t\n\t\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\t\n\t\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\t\n\t\t\t\t\t\tuniforms.shadow = light.castShadow;\n\t\n\t\t\t\t\t\tif ( light.castShadow ) {\n\t\n\t\t\t\t\t\t\tvar shadow = light.shadow;\n\t\n\t\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\t\n\t\t\t\t\t\tpointLength ++;\n\t\n\t\t\t\t\t} else if ( light.isHemisphereLight ) {\n\t\n\t\t\t\t\t\tvar uniforms = cache.get( light );\n\t\n\t\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\t\tuniforms.direction.normalize();\n\t\n\t\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\t\n\t\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\t\n\t\t\t\t\t\themiLength ++;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.ambient[ 0 ] = r;\n\t\t\t\tstate.ambient[ 1 ] = g;\n\t\t\t\tstate.ambient[ 2 ] = b;\n\t\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\n\t\t\t\t// TODO (sam-g-steel) why aren't we using join\n\t\t\t\tstate.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tsetup: setup,\n\t\t\t\tstate: state\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLObjects( geometries, infoRender ) {\n\t\n\t\t\tvar updateList = {};\n\t\n\t\t\tfunction update( object ) {\n\t\n\t\t\t\tvar frame = infoRender.frame;\n\t\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\t\n\t\t\t\t// Update once per frame\n\t\n\t\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\t\n\t\t\t\t\tif ( geometry.isGeometry ) {\n\t\n\t\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometries.update( buffergeometry );\n\t\n\t\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn buffergeometry;\n\t\n\t\t\t}\n\t\n\t\t\tfunction clear() {\n\t\n\t\t\t\tupdateList = {};\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tupdate: update,\n\t\t\t\tclear: clear\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction addLineNumbers( string ) {\n\t\n\t\t\tvar lines = string.split( '\\n' );\n\t\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\t\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\t\n\t\t\t}\n\t\n\t\t\treturn lines.join( '\\n' );\n\t\n\t\t}\n\t\n\t\tfunction WebGLShader( gl, type, string ) {\n\t\n\t\t\tvar shader = gl.createShader( type );\n\t\n\t\t\tgl.shaderSource( shader, string );\n\t\t\tgl.compileShader( shader );\n\t\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\t\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\t\n\t\t\t}\n\t\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\t\n\t\t\t}\n\t\n\t\t\t// --enable-privileged-webgl-extension\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\t\n\t\t\treturn shader;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tvar programIdCount = 0;\n\t\n\t\tfunction getEncodingComponents( encoding ) {\n\t\n\t\t\tswitch ( encoding ) {\n\t\n\t\t\t\tcase LinearEncoding:\n\t\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\t\tcase sRGBEncoding:\n\t\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\t\tcase RGBEEncoding:\n\t\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\t\tcase RGBM7Encoding:\n\t\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\t\tcase RGBM16Encoding:\n\t\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\t\tcase RGBDEncoding:\n\t\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\t\tcase GammaEncoding:\n\t\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\t\n\t\t\tvar components = getEncodingComponents( encoding );\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\t\n\t\t}\n\t\n\t\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\t\n\t\t\tvar components = getEncodingComponents( encoding );\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\t\n\t\t}\n\t\n\t\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\t\n\t\t\tvar toneMappingName;\n\t\n\t\t\tswitch ( toneMapping ) {\n\t\n\t\t\t\tcase LinearToneMapping:\n\t\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase ReinhardToneMapping:\n\t\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase CineonToneMapping:\n\t\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\t\n\t\t\t}\n\t\n\t\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\t\n\t\t}\n\t\n\t\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\t\n\t\t\textensions = extensions || {};\n\t\n\t\t\tvar chunks = [\n\t\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t\t];\n\t\n\t\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\t\n\t\t}\n\t\n\t\tfunction generateDefines( defines ) {\n\t\n\t\t\tvar chunks = [];\n\t\n\t\t\tfor ( var name in defines ) {\n\t\n\t\t\t\tvar value = defines[ name ];\n\t\n\t\t\t\tif ( value === false ) continue;\n\t\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\t\n\t\t\t}\n\t\n\t\t\treturn chunks.join( '\\n' );\n\t\n\t\t}\n\t\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\t\n\t\t\tvar attributes = {};\n\t\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\t\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\n\t\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\t\tvar name = info.name;\n\t\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\t\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\t\n\t\t\t}\n\t\n\t\t\treturn attributes;\n\t\n\t\t}\n\t\n\t\tfunction filterEmptyLine( string ) {\n\t\n\t\t\treturn string !== '';\n\t\n\t\t}\n\t\n\t\tfunction replaceLightNums( string, parameters ) {\n\t\n\t\t\treturn string\n\t\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\t\n\t\t}\n\t\n\t\tfunction parseIncludes( string ) {\n\t\n\t\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\t\n\t\t\tfunction replace( match, include ) {\n\t\n\t\t\t\tvar replace = ShaderChunk[ include ];\n\t\n\t\t\t\tif ( replace === undefined ) {\n\t\n\t\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn parseIncludes( replace );\n\t\n\t\t\t}\n\t\n\t\t\treturn string.replace( pattern, replace );\n\t\n\t\t}\n\t\n\t\tfunction unrollLoops( string ) {\n\t\n\t\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\t\n\t\t\tfunction replace( match, start, end, snippet ) {\n\t\n\t\t\t\tvar unroll = '';\n\t\n\t\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\t\n\t\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn unroll;\n\t\n\t\t\t}\n\t\n\t\t\treturn string.replace( pattern, replace );\n\t\n\t\t}\n\t\n\t\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\t\n\t\t\tvar gl = renderer.context;\n\t\n\t\t\tvar defines = material.defines;\n\t\n\t\t\tvar vertexShader = shader.vertexShader;\n\t\t\tvar fragmentShader = shader.fragmentShader;\n\t\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\t\n\t\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\t\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\n\t\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\t\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\n\t\t\t}\n\t\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\n\t\t\tif ( parameters.envMap ) {\n\t\n\t\t\t\tswitch ( material.envMap.mapping ) {\n\t\n\t\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tswitch ( material.envMap.mapping ) {\n\t\n\t\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tswitch ( material.combine ) {\n\t\n\t\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase MixOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase AddOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\t\n\t\t\t// console.log( 'building new program ' );\n\t\n\t\t\t//\n\t\n\t\t\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\t\n\t\t\tvar customDefines = generateDefines( defines );\n\t\n\t\t\t//\n\t\n\t\t\tvar program = gl.createProgram();\n\t\n\t\t\tvar prefixVertex, prefixFragment;\n\t\n\t\t\tif ( material.isRawShaderMaterial ) {\n\t\n\t\t\t\tprefixVertex = [\n\t\n\t\t\t\t\tcustomDefines,\n\t\n\t\t\t\t\t'\\n'\n\t\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\t\n\t\t\t\tprefixFragment = [\n\t\n\t\t\t\t\tcustomExtensions,\n\t\t\t\t\tcustomDefines,\n\t\n\t\t\t\t\t'\\n'\n\t\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tprefixVertex = [\n\t\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\n\t\n\t\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\t\n\t\t\t\t\tcustomDefines,\n\t\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\t\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\t\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\t\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\t\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\t\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\t\n\t\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\t\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\t\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\t\n\t\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t\t'uniform vec3 cameraPosition;',\n\t\n\t\t\t\t\t'attribute vec3 position;',\n\t\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t\t'attribute vec2 uv;',\n\t\n\t\t\t\t\t'#ifdef USE_COLOR',\n\t\n\t\t\t\t\t'\tattribute vec3 color;',\n\t\n\t\t\t\t\t'#endif',\n\t\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\t\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\n\t\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\t\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\t\n\t\t\t\t\t'\t#else',\n\t\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\t\n\t\t\t\t\t'\t#endif',\n\t\n\t\t\t\t\t'#endif',\n\t\n\t\t\t\t\t'#ifdef USE_SKINNING',\n\t\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\n\t\n\t\t\t\t\t'#endif',\n\t\n\t\t\t\t\t'\\n'\n\t\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\t\n\t\t\t\tprefixFragment = [\n\t\n\t\t\t\t\tcustomExtensions,\n\t\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\n\t\n\t\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\t\n\t\t\t\t\tcustomDefines,\n\t\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\t\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\t\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\t\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\n\t\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\t\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\t\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\t\n\t\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\t\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\t\n\t\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\t\n\t\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\t\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\t\n\t\t\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\t\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform vec3 cameraPosition;',\n\t\n\t\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\t\n\t\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\n\t\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\t\n\t\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\t\n\t\t\t\t\t'\\n'\n\t\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\t\n\t\t\t}\n\t\n\t\t\tvertexShader = parseIncludes( vertexShader );\n\t\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\n\t\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\n\t\t\tif ( ! material.isShaderMaterial ) {\n\t\n\t\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\t\n\t\t\t}\n\t\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\t\n\t\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\t\n\t\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\t\n\t\t\tgl.attachShader( program, glVertexShader );\n\t\t\tgl.attachShader( program, glFragmentShader );\n\t\n\t\t\t// Force a particular attribute to index 0.\n\t\n\t\t\tif ( material.index0AttributeName !== undefined ) {\n\t\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\t\n\t\t\t} else if ( parameters.morphTargets === true ) {\n\t\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\t\n\t\t\t}\n\t\n\t\t\tgl.linkProgram( program );\n\t\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\t\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\t\n\t\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\t\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\t\n\t\t\t\trunnable = false;\n\t\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\t\n\t\t\t} else if ( programLog !== '' ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\t\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\t\n\t\t\t\thaveDiagnostics = false;\n\t\n\t\t\t}\n\t\n\t\t\tif ( haveDiagnostics ) {\n\t\n\t\t\t\tthis.diagnostics = {\n\t\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tmaterial: material,\n\t\n\t\t\t\t\tprogramLog: programLog,\n\t\n\t\t\t\t\tvertexShader: {\n\t\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfragmentShader: {\n\t\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\t// clean up\n\t\n\t\t\tgl.deleteShader( glVertexShader );\n\t\t\tgl.deleteShader( glFragmentShader );\n\t\n\t\t\t// set up caching for uniform locations\n\t\n\t\t\tvar cachedUniforms;\n\t\n\t\t\tthis.getUniforms = function () {\n\t\n\t\t\t\tif ( cachedUniforms === undefined ) {\n\t\n\t\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn cachedUniforms;\n\t\n\t\t\t};\n\t\n\t\t\t// set up caching for attribute locations\n\t\n\t\t\tvar cachedAttributes;\n\t\n\t\t\tthis.getAttributes = function () {\n\t\n\t\t\t\tif ( cachedAttributes === undefined ) {\n\t\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn cachedAttributes;\n\t\n\t\t\t};\n\t\n\t\t\t// free resource\n\t\n\t\t\tthis.destroy = function() {\n\t\n\t\t\t\tgl.deleteProgram( program );\n\t\t\t\tthis.program = undefined;\n\t\n\t\t\t};\n\t\n\t\t\t// DEPRECATED\n\t\n\t\t\tObject.defineProperties( this, {\n\t\n\t\t\t\tuniforms: {\n\t\t\t\t\tget: function() {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\t\treturn this.getUniforms();\n\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tattributes: {\n\t\t\t\t\tget: function() {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\t\treturn this.getAttributes();\n\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\n\t\t\t//\n\t\n\t\t\tthis.id = programIdCount ++;\n\t\t\tthis.code = code;\n\t\t\tthis.usedTimes = 1;\n\t\t\tthis.program = program;\n\t\t\tthis.vertexShader = glVertexShader;\n\t\t\tthis.fragmentShader = glFragmentShader;\n\t\n\t\t\treturn this;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\t\n\t\t\tvar programs = [];\n\t\n\t\t\tvar shaderIDs = {\n\t\t\t\tMeshDepthMaterial: 'depth',\n\t\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\t\tMeshNormalMaterial: 'normal',\n\t\t\t\tMeshBasicMaterial: 'basic',\n\t\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\t\tMeshPhongMaterial: 'phong',\n\t\t\t\tMeshToonMaterial: 'phong',\n\t\t\t\tMeshStandardMaterial: 'physical',\n\t\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\t\tLineBasicMaterial: 'basic',\n\t\t\t\tLineDashedMaterial: 'dashed',\n\t\t\t\tPointsMaterial: 'points',\n\t\t\t\tShadowMaterial: 'shadow'\n\t\t\t};\n\t\n\t\t\tvar parameterNames = [\n\t\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t\t\t];\n\t\n\t\n\t\t\tfunction allocateBones( object ) {\n\t\n\t\t\t\tvar skeleton = object.skeleton;\n\t\t\t\tvar bones = skeleton.bones;\n\t\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\t\n\t\t\t\t\treturn 1024;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// default for when object is not specified\n\t\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t\t//\n\t\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t\t//    (up to 54 should be safe)\n\t\n\t\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\t\n\t\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\t\n\t\t\t\t\tif ( maxBones < bones.length ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\t\treturn 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn maxBones;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\t\n\t\t\t\tvar encoding;\n\t\n\t\t\t\tif ( ! map ) {\n\t\n\t\t\t\t\tencoding = LinearEncoding;\n\t\n\t\t\t\t} else if ( map.isTexture ) {\n\t\n\t\t\t\t\tencoding = map.encoding;\n\t\n\t\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\t\n\t\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\tencoding = map.texture.encoding;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\t\n\t\t\t\t\tencoding = GammaEncoding;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn encoding;\n\t\n\t\t\t}\n\t\n\t\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\t\n\t\t\t\tvar shaderID = shaderIDs[ material.type ];\n\t\n\t\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t\t// (not to blow over maxLights budget)\n\t\n\t\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\t\tvar precision = capabilities.precision;\n\t\n\t\t\t\tif ( material.precision !== null ) {\n\t\n\t\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\t\n\t\t\t\t\tif ( precision !== material.precision ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\n\t\t\t\tvar parameters = {\n\t\n\t\t\t\t\tshaderID: shaderID,\n\t\n\t\t\t\t\tprecision: precision,\n\t\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\t\tmap: !! material.map,\n\t\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\t\talphaMap: !! material.alphaMap,\n\t\n\t\t\t\t\tgradientMap: !! material.gradientMap,\n\t\n\t\t\t\t\tcombine: material.combine,\n\t\n\t\t\t\t\tvertexColors: material.vertexColors,\n\t\n\t\t\t\t\tfog: !! fog,\n\t\t\t\t\tuseFog: material.fog,\n\t\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\t\n\t\t\t\t\tflatShading: material.flatShading,\n\t\n\t\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\t\n\t\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\t\tmaxBones: maxBones,\n\t\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\t\n\t\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\t\n\t\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\n\t\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\t\tnumClipIntersection: nClipIntersection,\n\t\n\t\t\t\t\tdithering: material.dithering,\n\t\n\t\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\n\t\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\n\t\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\n\t\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\t\tflipSided: material.side === BackSide,\n\t\n\t\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\t\n\t\t\t\t};\n\t\n\t\t\t\treturn parameters;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getProgramCode = function ( material, parameters ) {\n\t\n\t\t\t\tvar array = [];\n\t\n\t\t\t\tif ( parameters.shaderID ) {\n\t\n\t\t\t\t\tarray.push( parameters.shaderID );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\t\tarray.push( material.vertexShader );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.defines !== undefined ) {\n\t\n\t\t\t\t\tfor ( var name in material.defines ) {\n\t\n\t\t\t\t\t\tarray.push( name );\n\t\t\t\t\t\tarray.push( material.defines[ name ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\t\n\t\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tarray.push( material.onBeforeCompile.toString() );\n\t\n\t\t\t\tarray.push( renderer.gammaOutput );\n\t\n\t\t\t\treturn array.join();\n\t\n\t\t\t};\n\t\n\t\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\t\n\t\t\t\tvar program;\n\t\n\t\t\t\t// Check if code has been already compiled\n\t\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\t\n\t\t\t\t\tvar programInfo = programs[ p ];\n\t\n\t\t\t\t\tif ( programInfo.code === code ) {\n\t\n\t\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t\t++ program.usedTimes;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( program === undefined ) {\n\t\n\t\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\t\t\tprograms.push( program );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn program;\n\t\n\t\t\t};\n\t\n\t\t\tthis.releaseProgram = function ( program ) {\n\t\n\t\t\t\tif ( -- program.usedTimes === 0 ) {\n\t\n\t\t\t\t\t// Remove from unordered set\n\t\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\t\tprograms.pop();\n\t\n\t\t\t\t\t// Free WebGL resources\n\t\t\t\t\tprogram.destroy();\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tthis.programs = programs;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {\n\t\n\t\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\t\n\t\t\t//\n\t\n\t\t\tfunction clampToMaxSize( image, maxSize ) {\n\t\n\t\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\t\n\t\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t\t// premultiplied alpha.\n\t\n\t\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\t\n\t\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\t\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\t\n\t\t\t\t\treturn canvas;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn image;\n\t\n\t\t\t}\n\t\n\t\t\tfunction isPowerOfTwo( image ) {\n\t\n\t\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\t\n\t\t\t}\n\t\n\t\t\tfunction makePowerOfTwo( image ) {\n\t\n\t\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\t\n\t\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\t\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\t\n\t\t\t\t\treturn canvas;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn image;\n\t\n\t\t\t}\n\t\n\t\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\t\n\t\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\t\n\t\t\t}\n\t\n\t\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\t\n\t\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\n\t\t\t}\n\t\n\t\t\t// Fallback filters for non-power-of-2 textures\n\t\n\t\t\tfunction filterFallback( f ) {\n\t\n\t\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\t\n\t\t\t\t\treturn _gl.NEAREST;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn _gl.LINEAR;\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfunction onTextureDispose( event ) {\n\t\n\t\t\t\tvar texture = event.target;\n\t\n\t\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\t\n\t\t\t\tdeallocateTexture( texture );\n\t\n\t\t\t\tinfoMemory.textures --;\n\t\n\t\n\t\t\t}\n\t\n\t\t\tfunction onRenderTargetDispose( event ) {\n\t\n\t\t\t\tvar renderTarget = event.target;\n\t\n\t\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\t\n\t\t\t\tdeallocateRenderTarget( renderTarget );\n\t\n\t\t\t\tinfoMemory.textures --;\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfunction deallocateTexture( texture ) {\n\t\n\t\t\t\tvar textureProperties = properties.get( texture );\n\t\n\t\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\t\n\t\t\t\t\t// cube texture\n\t\n\t\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// 2D texture\n\t\n\t\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\t\n\t\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// remove all webgl properties\n\t\t\t\tproperties.remove( texture );\n\t\n\t\t\t}\n\t\n\t\t\tfunction deallocateRenderTarget( renderTarget ) {\n\t\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\n\t\t\t\tif ( ! renderTarget ) return;\n\t\n\t\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\t\n\t\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( renderTarget.depthTexture ) {\n\t\n\t\t\t\t\trenderTarget.depthTexture.dispose();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\t\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tproperties.remove( renderTarget.texture );\n\t\t\t\tproperties.remove( renderTarget );\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\n\t\n\t\t\tfunction setTexture2D( texture, slot ) {\n\t\n\t\t\t\tvar textureProperties = properties.get( texture );\n\t\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\t\n\t\t\t\t\tvar image = texture.image;\n\t\n\t\t\t\t\tif ( image === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\t\n\t\t\t\t\t} else if ( image.complete === false ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\n\t\t\t}\n\t\n\t\t\tfunction setTextureCube( texture, slot ) {\n\t\n\t\t\t\tvar textureProperties = properties.get( texture );\n\t\n\t\t\t\tif ( texture.image.length === 6 ) {\n\t\n\t\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\t\n\t\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\t\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\t\n\t\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\t\n\t\t\t\t\t\t\tinfoMemory.textures ++;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\t\n\t\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\n\t\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\t\n\t\t\t\t\t\tvar cubeImage = [];\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\t\n\t\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\t\n\t\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\t\tif ( ! isCompressed ) {\n\t\n\t\t\t\t\t\t\t\tif ( isDataTexture ) {\n\t\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\t\n\t\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\t\n\t\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\t\n\t\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\t\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\t\n\t\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttextureProperties.__version = texture.version;\n\t\n\t\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\t\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\t\n\t\t\t}\n\t\n\t\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\t\n\t\t\t\tvar extension;\n\t\n\t\t\t\tif ( isPowerOfTwoImage ) {\n\t\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\t\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\t\n\t\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\t\n\t\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\n\t\t\t\tif ( extension ) {\n\t\n\t\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\t\n\t\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\t\n\t\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\t\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\t\n\t\t\t\t\ttextureProperties.__webglInit = true;\n\t\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\t\n\t\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\n\t\t\t\t\tinfoMemory.textures ++;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\n\t\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\t\n\t\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\t\n\t\t\t\t\timage = makePowerOfTwo( image );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type );\n\t\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\t\n\t\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\t\n\t\t\t\tif ( texture.isDepthTexture ) {\n\t\n\t\t\t\t\t// populate depth texture with dummy data\n\t\n\t\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\t\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\t\n\t\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\n\t\t\t\t\t} else if ( _isWebGL2 ) {\n\t\n\t\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\t\n\t\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\t\n\t\t\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\t\n\t\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\t\tglType = utils.convert( texture.type );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\t\n\t\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\t\n\t\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\t\n\t\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\t\tglType = utils.convert( texture.type );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\t\n\t\t\t\t} else if ( texture.isDataTexture ) {\n\t\n\t\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\n\t\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( texture.isCompressedTexture ) {\n\t\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\t\n\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\t\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// regular Texture (image, video, canvas)\n\t\n\t\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\n\t\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\t\n\t\t\t}\n\t\n\t\t\t// Render targets\n\t\n\t\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\t\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\n\t\t\t}\n\t\n\t\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\t\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\n\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\t\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\t\n\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\t\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\t\n\t\t\t}\n\t\n\t\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\t\n\t\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\t\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\n\t\t\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\t\n\t\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t\t}\n\t\n\t\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\t\n\t\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\n\t\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\t\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\t\n\t\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\t\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// Setup GL resources for a non-texture depth buffer\n\t\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\t\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\n\t\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\n\t\t\t\tif ( renderTarget.depthTexture ) {\n\t\n\t\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\t\n\t\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tif ( isCube ) {\n\t\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\n\t\t\t}\n\t\n\t\t\t// Set up GL resources for the render target\n\t\t\tfunction setupRenderTarget( renderTarget ) {\n\t\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\t\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\n\t\t\t\tinfoMemory.textures ++;\n\t\n\t\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\t\n\t\t\t\t// Setup framebuffer\n\t\n\t\t\t\tif ( isCube ) {\n\t\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\t\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Setup color buffer\n\t\n\t\t\t\tif ( isCube ) {\n\t\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\t\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\t\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Setup depth and stencil buffers\n\t\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\t\n\t\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\t\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\t\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\t\n\t\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\t\n\t\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\t\tstate.bindTexture( target, null );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tthis.setTexture2D = setTexture2D;\n\t\t\tthis.setTextureCube = setTextureCube;\n\t\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author fordacious / fordacious.github.io\n\t\t */\n\t\n\t\tfunction WebGLProperties() {\n\t\n\t\t\tvar properties = {};\n\t\n\t\t\tfunction get( object ) {\n\t\n\t\t\t\tvar uuid = object.uuid;\n\t\t\t\tvar map = properties[ uuid ];\n\t\n\t\t\t\tif ( map === undefined ) {\n\t\n\t\t\t\t\tmap = {};\n\t\t\t\t\tproperties[ uuid ] = map;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn map;\n\t\n\t\t\t}\n\t\n\t\t\tfunction remove( object ) {\n\t\n\t\t\t\tdelete properties[ object.uuid ];\n\t\n\t\t\t}\n\t\n\t\t\tfunction clear() {\n\t\n\t\t\t\tproperties = {};\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tget: get,\n\t\t\t\tremove: remove,\n\t\t\t\tclear: clear\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLState( gl, extensions, utils ) {\n\t\n\t\t\tfunction ColorBuffer() {\n\t\n\t\t\t\tvar locked = false;\n\t\n\t\t\t\tvar color = new Vector4();\n\t\t\t\tvar currentColorMask = null;\n\t\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\t\n\t\t\t\treturn {\n\t\n\t\t\t\t\tsetMask: function ( colorMask ) {\n\t\n\t\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\t\n\t\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetLocked: function ( lock ) {\n\t\n\t\t\t\t\t\tlocked = lock;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\t\n\t\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\t\n\t\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcolor.set( r, g, b, a );\n\t\n\t\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\t\n\t\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\t\tcurrentColorClear.copy( color );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\treset: function () {\n\t\n\t\t\t\t\t\tlocked = false;\n\t\n\t\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tfunction DepthBuffer() {\n\t\n\t\t\t\tvar locked = false;\n\t\n\t\t\t\tvar currentDepthMask = null;\n\t\t\t\tvar currentDepthFunc = null;\n\t\t\t\tvar currentDepthClear = null;\n\t\n\t\t\t\treturn {\n\t\n\t\t\t\t\tsetTest: function ( depthTest ) {\n\t\n\t\t\t\t\t\tif ( depthTest ) {\n\t\n\t\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetMask: function ( depthMask ) {\n\t\n\t\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\t\n\t\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetFunc: function ( depthFunc ) {\n\t\n\t\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\t\n\t\t\t\t\t\t\tif ( depthFunc ) {\n\t\n\t\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\t\n\t\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase LessDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetLocked: function ( lock ) {\n\t\n\t\t\t\t\t\tlocked = lock;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetClear: function ( depth ) {\n\t\n\t\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\t\n\t\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\treset: function () {\n\t\n\t\t\t\t\t\tlocked = false;\n\t\n\t\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\t\tcurrentDepthClear = null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tfunction StencilBuffer() {\n\t\n\t\t\t\tvar locked = false;\n\t\n\t\t\t\tvar currentStencilMask = null;\n\t\t\t\tvar currentStencilFunc = null;\n\t\t\t\tvar currentStencilRef = null;\n\t\t\t\tvar currentStencilFuncMask = null;\n\t\t\t\tvar currentStencilFail = null;\n\t\t\t\tvar currentStencilZFail = null;\n\t\t\t\tvar currentStencilZPass = null;\n\t\t\t\tvar currentStencilClear = null;\n\t\n\t\t\t\treturn {\n\t\n\t\t\t\t\tsetTest: function ( stencilTest ) {\n\t\n\t\t\t\t\t\tif ( stencilTest ) {\n\t\n\t\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetMask: function ( stencilMask ) {\n\t\n\t\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\t\n\t\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\t\n\t\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\t\n\t\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\t\n\t\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\t\n\t\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\t\n\t\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\t\n\t\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetLocked: function ( lock ) {\n\t\n\t\t\t\t\t\tlocked = lock;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tsetClear: function ( stencil ) {\n\t\n\t\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\t\n\t\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\treset: function () {\n\t\n\t\t\t\t\t\tlocked = false;\n\t\n\t\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\t\tcurrentStencilClear = null;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tvar colorBuffer = new ColorBuffer();\n\t\t\tvar depthBuffer = new DepthBuffer();\n\t\t\tvar stencilBuffer = new StencilBuffer();\n\t\n\t\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\t\n\t\t\tvar capabilities = {};\n\t\n\t\t\tvar compressedTextureFormats = null;\n\t\n\t\t\tvar currentProgram = null;\n\t\n\t\t\tvar currentBlending = null;\n\t\t\tvar currentBlendEquation = null;\n\t\t\tvar currentBlendSrc = null;\n\t\t\tvar currentBlendDst = null;\n\t\t\tvar currentBlendEquationAlpha = null;\n\t\t\tvar currentBlendSrcAlpha = null;\n\t\t\tvar currentBlendDstAlpha = null;\n\t\t\tvar currentPremultipledAlpha = false;\n\t\n\t\t\tvar currentFlipSided = null;\n\t\t\tvar currentCullFace = null;\n\t\n\t\t\tvar currentLineWidth = null;\n\t\n\t\t\tvar currentPolygonOffsetFactor = null;\n\t\t\tvar currentPolygonOffsetUnits = null;\n\t\n\t\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\t\n\t\t\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\t\t\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\t\n\t\t\tvar currentTextureSlot = null;\n\t\t\tvar currentBoundTextures = {};\n\t\n\t\t\tvar currentScissor = new Vector4();\n\t\t\tvar currentViewport = new Vector4();\n\t\n\t\t\tfunction createTexture( type, target, count ) {\n\t\n\t\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\t\tvar texture = gl.createTexture();\n\t\n\t\t\t\tgl.bindTexture( type, texture );\n\t\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\n\t\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\t\n\t\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t}\n\t\n\t\t\tvar emptyTextures = {};\n\t\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\t\n\t\t\t// init\n\t\n\t\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\t\tdepthBuffer.setClear( 1 );\n\t\t\tstencilBuffer.setClear( 0 );\n\t\n\t\t\tenable( gl.DEPTH_TEST );\n\t\t\tdepthBuffer.setFunc( LessEqualDepth );\n\t\n\t\t\tsetFlipSided( false );\n\t\t\tsetCullFace( CullFaceBack );\n\t\t\tenable( gl.CULL_FACE );\n\t\n\t\t\tenable( gl.BLEND );\n\t\t\tsetBlending( NormalBlending );\n\t\n\t\t\t//\n\t\n\t\t\tfunction initAttributes() {\n\t\n\t\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tnewAttributes[ i ] = 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction enableAttribute( attribute ) {\n\t\n\t\t\t\tnewAttributes[ attribute ] = 1;\n\t\n\t\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\t\n\t\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\t\tenabledAttributes[ attribute ] = 1;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\t\n\t\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\n\t\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\t\tattributeDivisors[ attribute ] = 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\t\n\t\t\t\tnewAttributes[ attribute ] = 1;\n\t\n\t\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\t\n\t\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\t\tenabledAttributes[ attribute ] = 1;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\t\n\t\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\n\t\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction disableUnusedAttributes() {\n\t\n\t\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\t\n\t\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\t\n\t\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\t\tenabledAttributes[ i ] = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction enable( id ) {\n\t\n\t\t\t\tif ( capabilities[ id ] !== true ) {\n\t\n\t\t\t\t\tgl.enable( id );\n\t\t\t\t\tcapabilities[ id ] = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction disable( id ) {\n\t\n\t\t\t\tif ( capabilities[ id ] !== false ) {\n\t\n\t\t\t\t\tgl.disable( id );\n\t\t\t\t\tcapabilities[ id ] = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction getCompressedTextureFormats() {\n\t\n\t\t\t\tif ( compressedTextureFormats === null ) {\n\t\n\t\t\t\t\tcompressedTextureFormats = [];\n\t\n\t\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\t\n\t\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\t\n\t\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn compressedTextureFormats;\n\t\n\t\t\t}\n\t\n\t\t\tfunction useProgram( program ) {\n\t\n\t\t\t\tif ( currentProgram !== program ) {\n\t\n\t\t\t\t\tgl.useProgram( program );\n\t\n\t\t\t\t\tcurrentProgram = program;\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn false;\n\t\n\t\t\t}\n\t\n\t\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\t\n\t\t\t\tif ( blending !== NoBlending ) {\n\t\n\t\t\t\t\tenable( gl.BLEND );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tdisable( gl.BLEND );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( blending !== CustomBlending ) {\n\t\n\t\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\t\n\t\t\t\t\t\tswitch ( blending ) {\n\t\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\n\t\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\n\t\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\n\t\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\t\n\t\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\t\n\t\t\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\t\n\t\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\t\n\t\t\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\t\n\t\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\n\t\t\t}\n\t\n\t\t\tfunction setMaterial( material ) {\n\t\n\t\t\t\tmaterial.side === DoubleSide\n\t\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t\t: enable( gl.CULL_FACE );\n\t\n\t\t\t\tsetFlipSided( material.side === BackSide );\n\t\n\t\t\t\tmaterial.transparent === true\n\t\t\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t\t: setBlending( NoBlending );\n\t\n\t\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\t\tcolorBuffer.setMask( material.colorWrite );\n\t\n\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfunction setFlipSided( flipSided ) {\n\t\n\t\t\t\tif ( currentFlipSided !== flipSided ) {\n\t\n\t\t\t\t\tif ( flipSided ) {\n\t\n\t\t\t\t\t\tgl.frontFace( gl.CW );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tgl.frontFace( gl.CCW );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcurrentFlipSided = flipSided;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction setCullFace( cullFace ) {\n\t\n\t\t\t\tif ( cullFace !== CullFaceNone ) {\n\t\n\t\t\t\t\tenable( gl.CULL_FACE );\n\t\n\t\t\t\t\tif ( cullFace !== currentCullFace ) {\n\t\n\t\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\t\n\t\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\t\n\t\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\t\n\t\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tdisable( gl.CULL_FACE );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tcurrentCullFace = cullFace;\n\t\n\t\t\t}\n\t\n\t\t\tfunction setLineWidth( width ) {\n\t\n\t\t\t\tif ( width !== currentLineWidth ) {\n\t\n\t\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\t\n\t\t\t\t\tcurrentLineWidth = width;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\t\n\t\t\t\tif ( polygonOffset ) {\n\t\n\t\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\t\n\t\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\t\n\t\t\t\t\t\tgl.polygonOffset( factor, units );\n\t\n\t\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction setScissorTest( scissorTest ) {\n\t\n\t\t\t\tif ( scissorTest ) {\n\t\n\t\t\t\t\tenable( gl.SCISSOR_TEST );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tdisable( gl.SCISSOR_TEST );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// texture\n\t\n\t\t\tfunction activeTexture( webglSlot ) {\n\t\n\t\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\t\n\t\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\t\n\t\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction bindTexture( webglType, webglTexture ) {\n\t\n\t\t\t\tif ( currentTextureSlot === null ) {\n\t\n\t\t\t\t\tactiveTexture();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\t\n\t\t\t\tif ( boundTexture === undefined ) {\n\t\n\t\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\t\n\t\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\t\n\t\t\t\t\tboundTexture.type = webglType;\n\t\t\t\t\tboundTexture.texture = webglTexture;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction compressedTexImage2D() {\n\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\t\n\t\t\t\t} catch ( error ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction texImage2D() {\n\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\t\n\t\t\t\t} catch ( error ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfunction scissor( scissor ) {\n\t\n\t\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\t\n\t\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\t\tcurrentScissor.copy( scissor );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction viewport( viewport ) {\n\t\n\t\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\t\n\t\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\t\tcurrentViewport.copy( viewport );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfunction reset() {\n\t\n\t\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\t\n\t\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\t\n\t\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\t\tenabledAttributes[ i ] = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tcapabilities = {};\n\t\n\t\t\t\tcompressedTextureFormats = null;\n\t\n\t\t\t\tcurrentTextureSlot = null;\n\t\t\t\tcurrentBoundTextures = {};\n\t\n\t\t\t\tcurrentProgram = null;\n\t\n\t\t\t\tcurrentBlending = null;\n\t\n\t\t\t\tcurrentFlipSided = null;\n\t\t\t\tcurrentCullFace = null;\n\t\n\t\t\t\tcolorBuffer.reset();\n\t\t\t\tdepthBuffer.reset();\n\t\t\t\tstencilBuffer.reset();\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tbuffers: {\n\t\t\t\t\tcolor: colorBuffer,\n\t\t\t\t\tdepth: depthBuffer,\n\t\t\t\t\tstencil: stencilBuffer\n\t\t\t\t},\n\t\n\t\t\t\tinitAttributes: initAttributes,\n\t\t\t\tenableAttribute: enableAttribute,\n\t\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\t\tenable: enable,\n\t\t\t\tdisable: disable,\n\t\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\t\n\t\t\t\tuseProgram: useProgram,\n\t\n\t\t\t\tsetBlending: setBlending,\n\t\t\t\tsetMaterial: setMaterial,\n\t\n\t\t\t\tsetFlipSided: setFlipSided,\n\t\t\t\tsetCullFace: setCullFace,\n\t\n\t\t\t\tsetLineWidth: setLineWidth,\n\t\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\n\t\t\t\tsetScissorTest: setScissorTest,\n\t\n\t\t\t\tactiveTexture: activeTexture,\n\t\t\t\tbindTexture: bindTexture,\n\t\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\t\ttexImage2D: texImage2D,\n\t\n\t\t\t\tscissor: scissor,\n\t\t\t\tviewport: viewport,\n\t\n\t\t\t\treset: reset\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\t\n\t\t\tvar maxAnisotropy;\n\t\n\t\t\tfunction getMaxAnisotropy() {\n\t\n\t\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\t\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\n\t\t\t\tif ( extension !== null ) {\n\t\n\t\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tmaxAnisotropy = 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn maxAnisotropy;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getMaxPrecision( precision ) {\n\t\n\t\t\t\tif ( precision === 'highp' ) {\n\t\n\t\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\t\n\t\t\t\t\t\treturn 'highp';\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tprecision = 'mediump';\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( precision === 'mediump' ) {\n\t\n\t\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\t\n\t\t\t\t\t\treturn 'mediump';\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn 'lowp';\n\t\n\t\t\t}\n\t\n\t\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\t\tvar maxPrecision = getMaxPrecision( precision );\n\t\n\t\t\tif ( maxPrecision !== precision ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\t\tprecision = maxPrecision;\n\t\n\t\t\t}\n\t\n\t\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\t\n\t\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\t\n\t\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\t\n\t\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\n\t\t\treturn {\n\t\n\t\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\n\t\t\t\tprecision: precision,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\n\t\t\t\tmaxTextures: maxTextures,\n\t\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\n\t\t\t\tmaxAttributes: maxAttributes,\n\t\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\t\tmaxVaryings: maxVaryings,\n\t\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\n\t\t\t\tvertexTextures: vertexTextures,\n\t\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\t\tfloatVertexTextures: floatVertexTextures\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction ArrayCamera( array ) {\n\t\n\t\t\tPerspectiveCamera.call( this );\n\t\n\t\t\tthis.cameras = array || [];\n\t\n\t\t}\n\t\n\t\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\t\n\t\t\tconstructor: ArrayCamera,\n\t\n\t\t\tisArrayCamera: true\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebVRManager( renderer ) {\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar device = null;\n\t\t\tvar frameData = null;\n\t\n\t\t\tif ( 'VRFrameData' in window ) {\n\t\n\t\t\t\tframeData = new window.VRFrameData();\n\t\n\t\t\t}\n\t\n\t\t\tvar matrixWorldInverse = new Matrix4();\n\t\n\t\t\tvar standingMatrix = new Matrix4();\n\t\t\tvar standingMatrixInverse = new Matrix4();\n\t\n\t\t\tvar cameraL = new PerspectiveCamera();\n\t\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\t\t\tcameraL.layers.enable( 1 );\n\t\n\t\t\tvar cameraR = new PerspectiveCamera();\n\t\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\t\t\tcameraR.layers.enable( 2 );\n\t\n\t\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\t\tcameraVR.layers.enable( 1 );\n\t\t\tcameraVR.layers.enable( 2 );\n\t\n\t\t\t//\n\t\n\t\t\tvar currentSize, currentPixelRatio;\n\t\n\t\t\tfunction onVRDisplayPresentChange() {\n\t\n\t\t\t\tif ( device !== null && device.isPresenting ) {\n\t\n\t\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\t\n\t\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\t\tcurrentSize = renderer.getSize();\n\t\n\t\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\t\n\t\t\t\t} else if ( scope.enabled ) {\n\t\n\t\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\t\n\t\t\t//\n\t\n\t\t\tthis.enabled = false;\n\t\t\tthis.standing = false;\n\t\n\t\t\tthis.getDevice = function () {\n\t\n\t\t\t\treturn device;\n\t\n\t\t\t};\n\t\n\t\t\tthis.setDevice = function ( value ) {\n\t\n\t\t\t\tif ( value !== undefined ) device = value;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getCamera = function ( camera ) {\n\t\n\t\t\t\tif ( device === null ) return camera;\n\t\n\t\t\t\tdevice.depthNear = camera.near;\n\t\t\t\tdevice.depthFar = camera.far;\n\t\n\t\t\t\tdevice.getFrameData( frameData );\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar pose = frameData.pose;\n\t\n\t\t\t\tif ( pose.position !== null ) {\n\t\n\t\t\t\t\tcamera.position.fromArray( pose.position );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tcamera.position.set( 0, 0, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( pose.orientation !== null ) {\n\t\n\t\t\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tcamera.updateMatrixWorld();\n\t\n\t\t\t\tvar stageParameters = device.stageParameters;\n\t\n\t\t\t\tif ( this.standing && stageParameters ) {\n\t\n\t\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\t\n\t\t\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( device.isPresenting === false ) return camera;\n\t\n\t\t\t\t//\n\t\n\t\t\t\tcameraL.near = camera.near;\n\t\t\t\tcameraR.near = camera.near;\n\t\n\t\t\t\tcameraL.far = camera.far;\n\t\t\t\tcameraR.far = camera.far;\n\t\n\t\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\t\n\t\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\t\n\t\t\t\tif ( this.standing && stageParameters ) {\n\t\n\t\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar parent = camera.parent;\n\t\n\t\t\t\tif ( parent !== null ) {\n\t\n\t\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\n\t\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// envMap and Mirror needs camera.matrixWorld\n\t\n\t\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\t\n\t\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\t\n\t\t\t\t// HACK @mrdoob\n\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\t\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar layers = device.getLayers();\n\t\n\t\t\t\tif ( layers.length ) {\n\t\n\t\t\t\t\tvar layer = layers[ 0 ];\n\t\n\t\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\t\n\t\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\t\n\t\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn cameraVR;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getStandingMatrix = function () {\n\t\n\t\t\t\treturn standingMatrix;\n\t\n\t\t\t};\n\t\n\t\t\tthis.submitFrame = function () {\n\t\n\t\t\t\tif ( device && device.isPresenting ) device.submitFrame();\n\t\n\t\t\t};\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction WebGLExtensions( gl ) {\n\t\n\t\t\tvar extensions = {};\n\t\n\t\t\treturn {\n\t\n\t\t\t\tget: function ( name ) {\n\t\n\t\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\t\n\t\t\t\t\t\treturn extensions[ name ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar extension;\n\t\n\t\t\t\t\tswitch ( name ) {\n\t\n\t\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\textension = gl.getExtension( name );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( extension === null ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\textensions[ name ] = extension;\n\t\n\t\t\t\t\treturn extension;\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction WebGLClipping() {\n\t\n\t\t\tvar scope = this,\n\t\n\t\t\t\tglobalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false,\n\t\n\t\t\t\tplane = new Plane(),\n\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\n\t\t\t\tuniform = { value: null, needsUpdate: false };\n\t\n\t\t\tthis.uniform = uniform;\n\t\t\tthis.numPlanes = 0;\n\t\t\tthis.numIntersection = 0;\n\t\n\t\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\t\n\t\t\t\tvar enabled =\n\t\t\t\t\tplanes.length !== 0 ||\n\t\t\t\t\tenableLocalClipping ||\n\t\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\t\tlocalClippingEnabled;\n\t\n\t\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\n\t\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\t\tnumGlobalPlanes = planes.length;\n\t\n\t\t\t\treturn enabled;\n\t\n\t\t\t};\n\t\n\t\t\tthis.beginShadows = function() {\n\t\n\t\t\t\trenderingShadows = true;\n\t\t\t\tprojectPlanes( null );\n\t\n\t\t\t};\n\t\n\t\t\tthis.endShadows = function() {\n\t\n\t\t\t\trenderingShadows = false;\n\t\t\t\tresetGlobalState();\n\t\n\t\t\t};\n\t\n\t\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\t\n\t\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t\t// there's no local clipping\n\t\n\t\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t\t// there's no global clipping\n\t\n\t\t\t\t\t\tprojectPlanes( null );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tresetGlobalState();\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\tlGlobal = nGlobal * 4,\n\t\n\t\t\t\t\t\tdstArray = cache.clippingState || null;\n\t\n\t\t\t\t\tuniform.value = dstArray; // ensure unique state\n\t\n\t\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\t\n\t\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\t\n\t\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\t\tthis.numPlanes += nGlobal;\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t};\n\t\n\t\t\tfunction resetGlobalState() {\n\t\n\t\t\t\tif ( uniform.value !== globalState ) {\n\t\n\t\t\t\t\tuniform.value = globalState;\n\t\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\t\tscope.numIntersection = 0;\n\t\n\t\t\t}\n\t\n\t\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\t\n\t\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\t\tdstArray = null;\n\t\n\t\t\t\tif ( nPlanes !== 0 ) {\n\t\n\t\t\t\t\tdstArray = uniform.value;\n\t\n\t\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\t\n\t\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\n\t\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\t\n\t\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\t\n\t\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\t\n\t\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\t\n\t\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tuniform.value = dstArray;\n\t\t\t\t\tuniform.needsUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\t\n\t\t\t\treturn dstArray;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author thespite / http://www.twitter.com/thespite\n\t\t */\n\t\n\t\tfunction WebGLUtils ( gl, extensions ) {\n\t\n\t\t\tfunction convert ( p ) {\n\t\n\t\t\t\tvar extension;\n\t\n\t\t\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\t\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\t\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\t\n\t\t\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\t\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\t\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\t\n\t\t\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\t\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\t\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\t\n\t\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\t\n\t\t\t\tif ( p === ByteType ) return gl.BYTE;\n\t\t\t\tif ( p === ShortType ) return gl.SHORT;\n\t\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\t\t\tif ( p === IntType ) return gl.INT;\n\t\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\t\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\n\t\t\t\tif ( p === HalfFloatType ) {\n\t\n\t\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\t\n\t\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\t\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\n\t\t\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\t\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\t\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\t\n\t\t\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\t\t\tif ( p === OneFactor ) return gl.ONE;\n\t\t\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\t\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\t\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\t\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\t\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\t\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\t\n\t\t\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\t\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\t\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\t\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\t\n\t\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\n\t\t\t\t\tif ( extension !== null ) {\n\t\n\t\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\t\n\t\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\n\t\t\t\t\tif ( extension !== null ) {\n\t\n\t\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( p === RGB_ETC1_Format ) {\n\t\n\t\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\t\n\t\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\t\n\t\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\t\n\t\t\t\t\tif ( extension !== null ) {\n\t\n\t\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( p === UnsignedInt248Type ) {\n\t\n\t\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\t\n\t\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn 0;\n\t\n\t\t\t}\n\t\n\t\t\treturn { convert: convert }\n\t\n\t\t}\n\t\n\t\t// import { Sphere } from '../math/Sphere';\n\t\t/**\n\t\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author szimek / https://github.com/szimek/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction WebGLRenderer( parameters ) {\n\t\n\t\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\t\n\t\t\tparameters = parameters || {};\n\t\n\t\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\n\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\t\n\t\t\tvar lightsArray = [];\n\t\t\tvar shadowsArray = [];\n\t\n\t\t\tvar currentRenderList = null;\n\t\n\t\t\tvar spritesArray = [];\n\t\t\tvar flaresArray = [];\n\t\n\t\t\t// public properties\n\t\n\t\t\tthis.domElement = _canvas;\n\t\t\tthis.context = null;\n\t\n\t\t\t// clearing\n\t\n\t\t\tthis.autoClear = true;\n\t\t\tthis.autoClearColor = true;\n\t\t\tthis.autoClearDepth = true;\n\t\t\tthis.autoClearStencil = true;\n\t\n\t\t\t// scene graph\n\t\n\t\t\tthis.sortObjects = true;\n\t\n\t\t\t// user-defined clipping\n\t\n\t\t\tthis.clippingPlanes = [];\n\t\t\tthis.localClippingEnabled = false;\n\t\n\t\t\t// physically based shading\n\t\n\t\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\t\tthis.gammaInput = false;\n\t\t\tthis.gammaOutput = false;\n\t\n\t\t\t// physical lights\n\t\n\t\t\tthis.physicallyCorrectLights = false;\n\t\n\t\t\t// tone mapping\n\t\n\t\t\tthis.toneMapping = LinearToneMapping;\n\t\t\tthis.toneMappingExposure = 1.0;\n\t\t\tthis.toneMappingWhitePoint = 1.0;\n\t\n\t\t\t// morphs\n\t\n\t\t\tthis.maxMorphTargets = 8;\n\t\t\tthis.maxMorphNormals = 4;\n\t\n\t\t\t// internal properties\n\t\n\t\t\tvar _this = this,\n\t\n\t\t\t\t_isContextLost = false,\n\t\n\t\t\t\t// internal state cache\n\t\n\t\t\t\t_currentRenderTarget = null,\n\t\t\t\t_currentFramebuffer = null,\n\t\t\t\t_currentMaterialId = - 1,\n\t\t\t\t_currentGeometryProgram = '',\n\t\n\t\t\t\t_currentCamera = null,\n\t\t\t\t_currentArrayCamera = null,\n\t\n\t\t\t\t_currentViewport = new Vector4(),\n\t\t\t\t_currentScissor = new Vector4(),\n\t\t\t\t_currentScissorTest = null,\n\t\n\t\t\t\t//\n\t\n\t\t\t\t_usedTextureUnits = 0,\n\t\n\t\t\t\t//\n\t\n\t\t\t\t_width = _canvas.width,\n\t\t\t\t_height = _canvas.height,\n\t\n\t\t\t\t_pixelRatio = 1,\n\t\n\t\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t\t_scissorTest = false,\n\t\n\t\t\t\t// frustum\n\t\n\t\t\t\t_frustum = new Frustum(),\n\t\n\t\t\t\t// clipping\n\t\n\t\t\t\t_clipping = new WebGLClipping(),\n\t\t\t\t_clippingEnabled = false,\n\t\t\t\t_localClippingEnabled = false,\n\t\n\t\t\t\t// camera matrices cache\n\t\n\t\t\t\t_projScreenMatrix = new Matrix4(),\n\t\n\t\t\t\t_vector3 = new Vector3(),\n\t\n\t\t\t\t// info\n\t\n\t\t\t\t_infoMemory = {\n\t\t\t\t\tgeometries: 0,\n\t\t\t\t\ttextures: 0\n\t\t\t\t},\n\t\n\t\t\t\t_infoRender = {\n\t\n\t\t\t\t\tframe: 0,\n\t\t\t\t\tcalls: 0,\n\t\t\t\t\tvertices: 0,\n\t\t\t\t\tfaces: 0,\n\t\t\t\t\tpoints: 0\n\t\n\t\t\t\t};\n\t\n\t\t\tthis.info = {\n\t\n\t\t\t\trender: _infoRender,\n\t\t\t\tmemory: _infoMemory,\n\t\t\t\tprograms: null\n\t\n\t\t\t};\n\t\n\t\t\tfunction getTargetPixelRatio() {\n\t\n\t\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\n\t\t\t}\n\t\n\t\t\t// initialize\n\t\n\t\t\tvar _gl;\n\t\n\t\t\ttry {\n\t\n\t\t\t\tvar contextAttributes = {\n\t\t\t\t\talpha: _alpha,\n\t\t\t\t\tdepth: _depth,\n\t\t\t\t\tstencil: _stencil,\n\t\t\t\t\tantialias: _antialias,\n\t\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t\t};\n\t\n\t\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\t\n\t\t\t\tif ( _gl === null ) {\n\t\n\t\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\t\n\t\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthrow 'Error creating WebGL context.';\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\t\n\t\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\t\n\t\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\n\t\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\t\n\t\t\t\t\t};\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\n\t\t\t} catch ( error ) {\n\t\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\t\n\t\t\t}\n\t\n\t\t\tvar extensions, capabilities, state;\n\t\t\tvar properties, textures, attributes, geometries, objects, lights;\n\t\t\tvar programCache, renderLists;\n\t\n\t\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\t\tvar flareRenderer, spriteRenderer;\n\t\n\t\t\tvar utils;\n\t\n\t\t\tfunction initGLContext() {\n\t\n\t\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_float_linear' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\t\n\t\t\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\t\n\t\t\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tutils = new WebGLUtils( _gl, extensions );\n\t\n\t\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\t\n\t\t\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\t\n\t\t\t\tproperties = new WebGLProperties();\n\t\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );\n\t\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\t\tgeometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\t\t\tobjects = new WebGLObjects( geometries, _infoRender );\n\t\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\t\t\tlights = new WebGLLights();\n\t\t\t\trenderLists = new WebGLRenderLists();\n\t\n\t\t\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\t\n\t\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\t\n\t\t\t\tflareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );\n\t\t\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\t\n\t\t\t\t_this.info.programs = programCache.programs;\n\t\n\t\t\t\t_this.context = _gl;\n\t\t\t\t_this.capabilities = capabilities;\n\t\t\t\t_this.extensions = extensions;\n\t\t\t\t_this.properties = properties;\n\t\t\t\t_this.renderLists = renderLists;\n\t\t\t\t_this.state = state;\n\t\n\t\t\t}\n\t\n\t\t\tinitGLContext();\n\t\n\t\t\t// vr\n\t\n\t\t\tvar vr = new WebVRManager( _this );\n\t\n\t\t\tthis.vr = vr;\n\t\n\t\t\t// shadow map\n\t\n\t\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\t\n\t\t\tthis.shadowMap = shadowMap;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getContext = function () {\n\t\n\t\t\t\treturn _gl;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getContextAttributes = function () {\n\t\n\t\t\t\treturn _gl.getContextAttributes();\n\t\n\t\t\t};\n\t\n\t\t\tthis.forceContextLoss = function () {\n\t\n\t\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\t\tif ( extension ) extension.loseContext();\n\t\n\t\t\t};\n\t\n\t\t\tthis.forceContextRestore = function () {\n\t\n\t\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\t\tif ( extension ) extension.restoreContext();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getPixelRatio = function () {\n\t\n\t\t\t\treturn _pixelRatio;\n\t\n\t\t\t};\n\t\n\t\t\tthis.setPixelRatio = function ( value ) {\n\t\n\t\t\t\tif ( value === undefined ) return;\n\t\n\t\t\t\t_pixelRatio = value;\n\t\n\t\t\t\tthis.setSize( _width, _height, false );\n\t\n\t\t\t};\n\t\n\t\t\tthis.getSize = function () {\n\t\n\t\t\t\treturn {\n\t\t\t\t\twidth: _width,\n\t\t\t\t\theight: _height\n\t\t\t\t};\n\t\n\t\t\t};\n\t\n\t\t\tthis.setSize = function ( width, height, updateStyle ) {\n\t\n\t\t\t\tvar device = vr.getDevice();\n\t\n\t\t\t\tif ( device && device.isPresenting ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_width = width;\n\t\t\t\t_height = height;\n\t\n\t\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t\t_canvas.height = height * _pixelRatio;\n\t\n\t\t\t\tif ( updateStyle !== false ) {\n\t\n\t\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t\t_canvas.style.height = height + 'px';\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.setViewport( 0, 0, width, height );\n\t\n\t\t\t};\n\t\n\t\t\tthis.getDrawingBufferSize = function () {\n\t\n\t\t\t\treturn {\n\t\t\t\t\twidth: _width * _pixelRatio,\n\t\t\t\t\theight: _height * _pixelRatio\n\t\t\t\t};\n\t\n\t\t\t};\n\t\n\t\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\t\n\t\t\t\t_width = width;\n\t\t\t\t_height = height;\n\t\n\t\t\t\t_pixelRatio = pixelRatio;\n\t\n\t\t\t\t_canvas.width = width * pixelRatio;\n\t\t\t\t_canvas.height = height * pixelRatio;\n\t\n\t\t\t\tthis.setViewport( 0, 0, width, height );\n\t\n\t\t\t};\n\t\n\t\t\tthis.setViewport = function ( x, y, width, height ) {\n\t\n\t\t\t\t_viewport.set( x, _height - y - height, width, height );\n\t\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\t\n\t\t\t};\n\t\n\t\t\tthis.setScissor = function ( x, y, width, height ) {\n\t\n\t\t\t\t_scissor.set( x, _height - y - height, width, height );\n\t\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\n\t\t\t};\n\t\n\t\t\tthis.setScissorTest = function ( boolean ) {\n\t\n\t\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\t\n\t\t\t};\n\t\n\t\t\t// Clearing\n\t\n\t\t\tthis.getClearColor = background.getClearColor;\n\t\t\tthis.setClearColor = background.setClearColor;\n\t\t\tthis.getClearAlpha = background.getClearAlpha;\n\t\t\tthis.setClearAlpha = background.setClearAlpha;\n\t\n\t\t\tthis.clear = function ( color, depth, stencil ) {\n\t\n\t\t\t\tvar bits = 0;\n\t\n\t\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\t\n\t\t\t\t_gl.clear( bits );\n\t\n\t\t\t};\n\t\n\t\t\tthis.clearColor = function () {\n\t\n\t\t\t\tthis.clear( true, false, false );\n\t\n\t\t\t};\n\t\n\t\t\tthis.clearDepth = function () {\n\t\n\t\t\t\tthis.clear( false, true, false );\n\t\n\t\t\t};\n\t\n\t\t\tthis.clearStencil = function () {\n\t\n\t\t\t\tthis.clear( false, false, true );\n\t\n\t\t\t};\n\t\n\t\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\t\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\t\tthis.clear( color, depth, stencil );\n\t\n\t\t\t};\n\t\n\t\t\t//\n\t\n\t\t\tthis.dispose = function () {\n\t\n\t\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\n\t\t\t\trenderLists.dispose();\n\t\n\t\t\t\tvr.dispose();\n\t\n\t\t\t};\n\t\n\t\t\t// Events\n\t\n\t\t\tfunction onContextLost( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\t\n\t\t\t\t_isContextLost = true;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onContextRestore( event ) {\n\t\n\t\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\t\n\t\t\t\t_isContextLost = false;\n\t\n\t\t\t\tinitGLContext();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMaterialDispose( event ) {\n\t\n\t\t\t\tvar material = event.target;\n\t\n\t\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\t\n\t\t\t\tdeallocateMaterial( material );\n\t\n\t\t\t}\n\t\n\t\t\t// Buffer deallocation\n\t\n\t\t\tfunction deallocateMaterial( material ) {\n\t\n\t\t\t\treleaseMaterialProgramReference( material );\n\t\n\t\t\t\tproperties.remove( material );\n\t\n\t\t\t}\n\t\n\t\n\t\t\tfunction releaseMaterialProgramReference( material ) {\n\t\n\t\t\t\tvar programInfo = properties.get( material ).program;\n\t\n\t\t\t\tmaterial.program = undefined;\n\t\n\t\t\t\tif ( programInfo !== undefined ) {\n\t\n\t\t\t\t\tprogramCache.releaseProgram( programInfo );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// Buffer rendering\n\t\n\t\t\tfunction renderObjectImmediate( object, program, material ) {\n\t\n\t\t\t\tobject.render( function ( object ) {\n\t\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\t\n\t\t\t\t} );\n\t\n\t\t\t}\n\t\n\t\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\t\n\t\t\t\tstate.initAttributes();\n\t\n\t\t\t\tvar buffers = properties.get( object );\n\t\n\t\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\t\n\t\t\t\tvar programAttributes = program.getAttributes();\n\t\n\t\t\t\tif ( object.hasPositions ) {\n\t\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\t\n\t\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( object.hasNormals ) {\n\t\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\n\t\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\t\t\tmaterial.flatShading === true ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\t\n\t\t\t\t\t\t\tvar array = object.normalArray;\n\t\n\t\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\t\n\t\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\t\n\t\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\t\n\t\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\t\n\t\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\n\t\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( object.hasUvs && material.map ) {\n\t\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\t\n\t\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\n\t\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\t\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\t\n\t\t\t\t\tstate.enableAttribute( programAttributes.color );\n\t\n\t\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.disableUnusedAttributes();\n\t\n\t\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\t\n\t\t\t\tobject.count = 0;\n\t\n\t\t\t};\n\t\n\t\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\t\n\t\t\t\tstate.setMaterial( material );\n\t\n\t\t\t\tvar program = setProgram( camera, fog, material, object );\n\t\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\t\n\t\t\t\tvar updateBuffers = false;\n\t\n\t\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\t\n\t\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\t\tupdateBuffers = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( object.morphTargetInfluences ) {\n\t\n\t\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\t\n\t\t\t\t\tupdateBuffers = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar rangeFactor = 1;\n\t\n\t\t\t\tif ( material.wireframe === true ) {\n\t\n\t\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\t\trangeFactor = 2;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar attribute;\n\t\t\t\tvar renderer = bufferRenderer;\n\t\n\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\tattribute = attributes.get( index );\n\t\n\t\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\t\trenderer.setIndex( attribute );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( updateBuffers ) {\n\t\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\t\n\t\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar dataCount = 0;\n\t\n\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\tdataCount = index.count;\n\t\n\t\t\t\t} else if ( position !== undefined ) {\n\t\n\t\t\t\t\tdataCount = position.count;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\t\n\t\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\n\t\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\t\n\t\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\t\n\t\t\t\tif ( drawCount === 0 ) return;\n\t\n\t\t\t\t//\n\t\n\t\t\t\tif ( object.isMesh ) {\n\t\n\t\t\t\t\tif ( material.wireframe === true ) {\n\t\n\t\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\t\trenderer.setMode( _gl.LINES );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tswitch ( object.drawMode ) {\n\t\n\t\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\n\t\t\t\t} else if ( object.isLine ) {\n\t\n\t\t\t\t\tvar lineWidth = material.linewidth;\n\t\n\t\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\t\n\t\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\t\n\t\t\t\t\tif ( object.isLineSegments ) {\n\t\n\t\t\t\t\t\trenderer.setMode( _gl.LINES );\n\t\n\t\t\t\t\t} else if ( object.isLineLoop ) {\n\t\n\t\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( object.isPoints ) {\n\t\n\t\t\t\t\trenderer.setMode( _gl.POINTS );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\t\n\t\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\t\n\t\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\trenderer.render( drawStart, drawCount );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\t\n\t\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\t\n\t\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\t\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\t\n\t\t\t\tstate.initAttributes();\n\t\n\t\t\t\tvar geometryAttributes = geometry.attributes;\n\t\n\t\t\t\tvar programAttributes = program.getAttributes();\n\t\n\t\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\t\n\t\t\t\tfor ( var name in programAttributes ) {\n\t\n\t\t\t\t\tvar programAttribute = programAttributes[ name ];\n\t\n\t\t\t\t\tif ( programAttribute >= 0 ) {\n\t\n\t\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\t\n\t\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\n\t\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\t\n\t\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\t\n\t\t\t\t\t\t\tif ( attribute === undefined ) continue;\n\t\n\t\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\t\n\t\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\t\n\t\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\t\n\t\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\t\n\t\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\t\n\t\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\t\n\t\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\t\n\t\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\t\n\t\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\t\n\t\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\t\n\t\t\t\t\t\t\tif ( value !== undefined ) {\n\t\n\t\t\t\t\t\t\t\tswitch ( value.length ) {\n\t\n\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.disableUnusedAttributes();\n\t\n\t\t\t}\n\t\n\t\t\t// Compile\n\t\n\t\t\tthis.compile = function ( scene, camera ) {\n\t\n\t\t\t\tlightsArray.length = 0;\n\t\t\t\tshadowsArray.length = 0;\n\t\n\t\t\t\tscene.traverse( function ( object ) {\n\t\n\t\t\t\t\tif ( object.isLight ) {\n\t\n\t\t\t\t\t\tlightsArray.push( object );\n\t\n\t\t\t\t\t\tif ( object.castShadow ) {\n\t\n\t\t\t\t\t\t\tshadowsArray.push( object );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} );\n\t\n\t\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\t\n\t\t\t\tscene.traverse( function ( object ) {\n\t\n\t\t\t\t\tif ( object.material ) {\n\t\n\t\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\t\n\t\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} );\n\t\n\t\t\t};\n\t\n\t\t\t// Animation Loop\n\t\n\t\t\tvar isAnimating = false;\n\t\t\tvar onAnimationFrame = null;\n\t\n\t\t\tfunction start() {\n\t\n\t\t\t\tif ( isAnimating ) return;\n\t\t\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\t\t\t\tisAnimating = true;\n\t\n\t\t\t}\n\t\n\t\t\tfunction loop( time ) {\n\t\n\t\t\t\tif ( onAnimationFrame !== null ) onAnimationFrame( time );\n\t\t\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\t\n\t\t\t}\n\t\n\t\t\tthis.animate = function ( callback ) {\n\t\n\t\t\t\tonAnimationFrame = callback;\n\t\t\t\tstart();\n\t\n\t\t\t};\n\t\n\t\t\t// Rendering\n\t\n\t\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\t\n\t\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( _isContextLost ) return;\n\t\n\t\t\t\t// reset caching for this frame\n\t\n\t\t\t\t_currentGeometryProgram = '';\n\t\t\t\t_currentMaterialId = - 1;\n\t\t\t\t_currentCamera = null;\n\t\n\t\t\t\t// update scene graph\n\t\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\n\t\t\t\t// update camera matrices and frustum\n\t\n\t\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\t\n\t\t\t\tif ( vr.enabled ) {\n\t\n\t\t\t\t\tcamera = vr.getCamera( camera );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\t\n\t\t\t\tlightsArray.length = 0;\n\t\t\t\tshadowsArray.length = 0;\n\t\n\t\t\t\tspritesArray.length = 0;\n\t\t\t\tflaresArray.length = 0;\n\t\n\t\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\t\n\t\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\t\tcurrentRenderList.init();\n\t\n\t\t\t\tprojectObject( scene, camera, _this.sortObjects );\n\t\n\t\t\t\tif ( _this.sortObjects === true ) {\n\t\n\t\t\t\t\tcurrentRenderList.sort();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\t\n\t\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\t\n\t\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\t\n\t\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\t\n\t\t\t\t//\n\t\n\t\t\t\t_infoRender.frame ++;\n\t\t\t\t_infoRender.calls = 0;\n\t\t\t\t_infoRender.vertices = 0;\n\t\t\t\t_infoRender.faces = 0;\n\t\t\t\t_infoRender.points = 0;\n\t\n\t\t\t\tif ( renderTarget === undefined ) {\n\t\n\t\t\t\t\trenderTarget = null;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\t\n\t\t\t\t//\n\t\n\t\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\t\n\t\t\t\t// render scene\n\t\n\t\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\t\tvar transparentObjects = currentRenderList.transparent;\n\t\n\t\t\t\tif ( scene.overrideMaterial ) {\n\t\n\t\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\t\n\t\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// opaque pass (front-to-back order)\n\t\n\t\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\t\n\t\t\t\t\t// transparent pass (back-to-front order)\n\t\n\t\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// custom renderers\n\t\n\t\t\t\tspriteRenderer.render( spritesArray, scene, camera );\n\t\t\t\tflareRenderer.render( flaresArray, scene, camera, _currentViewport );\n\t\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\t\n\t\t\t\tif ( renderTarget ) {\n\t\n\t\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\t\n\t\t\t\tstate.buffers.depth.setTest( true );\n\t\t\t\tstate.buffers.depth.setMask( true );\n\t\t\t\tstate.buffers.color.setMask( true );\n\t\n\t\t\t\tstate.setPolygonOffset( false );\n\t\n\t\t\t\tif ( vr.enabled ) {\n\t\n\t\t\t\t\tvr.submitFrame();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// _gl.finish();\n\t\n\t\t\t};\n\t\n\t\t\t/*\n\t\t\t// TODO Duplicated code (Frustum)\n\t\n\t\t\tvar _sphere = new Sphere();\n\t\n\t\t\tfunction isObjectViewable( object ) {\n\t\n\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\t\tapplyMatrix4( object.matrixWorld );\n\t\n\t\t\t\treturn isSphereViewable( _sphere );\n\t\n\t\t\t}\n\t\n\t\t\tfunction isSpriteViewable( sprite ) {\n\t\n\t\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\t\n\t\t\t\treturn isSphereViewable( _sphere );\n\t\n\t\t\t}\n\t\n\t\t\tfunction isSphereViewable( sphere ) {\n\t\n\t\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\t\n\t\t\t\tvar numPlanes = _clipping.numPlanes;\n\t\n\t\t\t\tif ( numPlanes === 0 ) return true;\n\t\n\t\t\t\tvar planes = _this.clippingPlanes,\n\t\n\t\t\t\t\tcenter = sphere.center,\n\t\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\t\ti = 0;\n\t\n\t\t\t\tdo {\n\t\n\t\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\t\n\t\t\t\t} while ( ++ i !== numPlanes );\n\t\n\t\t\t\treturn true;\n\t\n\t\t\t}\n\t\t\t*/\n\t\n\t\t\tfunction projectObject( object, camera, sortObjects ) {\n\t\n\t\t\t\tif ( ! object.visible ) return;\n\t\n\t\t\t\tvar visible = object.layers.test( camera.layers );\n\t\n\t\t\t\tif ( visible ) {\n\t\n\t\t\t\t\tif ( object.isLight ) {\n\t\n\t\t\t\t\t\tlightsArray.push( object );\n\t\n\t\t\t\t\t\tif ( object.castShadow ) {\n\t\n\t\t\t\t\t\t\tshadowsArray.push( object );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( object.isSprite ) {\n\t\n\t\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\t\n\t\t\t\t\t\t\tspritesArray.push( object );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( object.isLensFlare ) {\n\t\n\t\t\t\t\t\tflaresArray.push( object );\n\t\n\t\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\t\n\t\t\t\t\t\tif ( sortObjects ) {\n\t\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\t\n\t\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\t\n\t\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\t\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\t\n\t\t\t\t\t\t\tif ( sortObjects ) {\n\t\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\t\tvar material = object.material;\n\t\n\t\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\t\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\t\n\t\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\t\n\t\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else if ( material.visible ) {\n\t\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar children = object.children;\n\t\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\t\n\t\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar renderItem = renderList[ i ];\n\t\n\t\t\t\t\tvar object = renderItem.object;\n\t\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\t\tvar group = renderItem.group;\n\t\n\t\t\t\t\tif ( camera.isArrayCamera ) {\n\t\n\t\t\t\t\t\t_currentArrayCamera = camera;\n\t\n\t\t\t\t\t\tvar cameras = camera.cameras;\n\t\n\t\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\t\n\t\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\t\n\t\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\t\n\t\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\t\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\t\n\t\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t_currentArrayCamera = null;\n\t\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\t\n\t\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\t\n\t\t\t\tif ( object.isImmediateRenderObject ) {\n\t\n\t\t\t\t\tstate.setMaterial( material );\n\t\n\t\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\t\n\t\t\t\t\t_currentGeometryProgram = '';\n\t\n\t\t\t\t\trenderObjectImmediate( object, program, material );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\n\t\t\t}\n\t\n\t\t\tfunction initMaterial( material, fog, object ) {\n\t\n\t\t\t\tvar materialProperties = properties.get( material );\n\t\n\t\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\n\t\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\t\n\t\t\t\tvar program = materialProperties.program;\n\t\t\t\tvar programChange = true;\n\t\n\t\t\t\tif ( program === undefined ) {\n\t\n\t\t\t\t\t// new material\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\t\n\t\t\t\t} else if ( program.code !== code ) {\n\t\n\t\t\t\t\t// changed glsl or parameters\n\t\t\t\t\treleaseMaterialProgramReference( material );\n\t\n\t\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\t\n\t\t\t\t\t// same glsl and uniform list\n\t\t\t\t\treturn;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// only rebuild uniform list\n\t\t\t\t\tprogramChange = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( programChange ) {\n\t\n\t\t\t\t\tif ( parameters.shaderID ) {\n\t\n\t\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\t\n\t\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\t\n\t\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\t\n\t\t\t\t\tmaterialProperties.program = program;\n\t\t\t\t\tmaterial.program = program;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar programAttributes = program.getAttributes();\n\t\n\t\t\t\tif ( material.morphTargets ) {\n\t\n\t\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\t\n\t\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\t\n\t\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\t\n\t\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.morphNormals ) {\n\t\n\t\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\t\n\t\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\t\n\t\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\t\n\t\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\t\n\t\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\t\tmaterial.clipping === true ) {\n\t\n\t\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tmaterialProperties.fog = fog;\n\t\n\t\t\t\t// store the light setup it was created for\n\t\n\t\t\t\tmaterialProperties.lightsHash = lights.state.hash;\n\t\n\t\t\t\tif ( material.lights ) {\n\t\n\t\t\t\t\t// wire up the material to this renderer's lighting state\n\t\n\t\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\n\t\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\t\tuniformsList =\n\t\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\t\n\t\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\n\t\t\t}\n\t\n\t\t\tfunction setProgram( camera, fog, material, object ) {\n\t\n\t\t\t\t_usedTextureUnits = 0;\n\t\n\t\t\t\tvar materialProperties = properties.get( material );\n\t\n\t\t\t\tif ( _clippingEnabled ) {\n\t\n\t\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\t\n\t\t\t\t\t\tvar useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\t\n\t\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\t\tcamera, materialProperties, useCache );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.needsUpdate === false ) {\n\t\n\t\t\t\t\tif ( materialProperties.program === undefined ) {\n\t\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\n\t\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\t\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\n\t\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\t\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\n\t\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\t\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.needsUpdate ) {\n\t\n\t\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\t\tmaterial.needsUpdate = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar refreshProgram = false;\n\t\t\t\tvar refreshMaterial = false;\n\t\t\t\tvar refreshLights = false;\n\t\n\t\t\t\tvar program = materialProperties.program,\n\t\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\t\n\t\t\t\tif ( state.useProgram( program.program ) ) {\n\t\n\t\t\t\t\trefreshProgram = true;\n\t\t\t\t\trefreshMaterial = true;\n\t\t\t\t\trefreshLights = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.id !== _currentMaterialId ) {\n\t\n\t\t\t\t\t_currentMaterialId = material.id;\n\t\n\t\t\t\t\trefreshMaterial = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\t\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\n\t\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\t\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\t\n\t\t\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\t\n\t\t\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\t\n\t\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t\t// the next material that does gets activated:\n\t\n\t\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// load material specific uniforms\n\t\t\t\t\t// (shader material also gets them for the sake of genericity)\n\t\n\t\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\t\tmaterial.envMap ) {\n\t\n\t\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\t\n\t\t\t\t\t\tif ( uCamPos !== undefined ) {\n\t\n\t\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\t\tmaterial.skinning ) {\n\t\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t\t// not sure why, but otherwise weird things happen\n\t\n\t\t\t\tif ( material.skinning ) {\n\t\n\t\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\t\n\t\t\t\t\tvar skeleton = object.skeleton;\n\t\n\t\t\t\t\tif ( skeleton ) {\n\t\n\t\t\t\t\t\tvar bones = skeleton.bones;\n\t\n\t\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\t\n\t\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\t\n\t\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\n\t\n\t\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\t\n\t\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\t\n\t\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\n\t\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( refreshMaterial ) {\n\t\n\t\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\t\n\t\t\t\t\tif ( material.lights ) {\n\t\n\t\t\t\t\t\t// the current material requires lighting info\n\t\n\t\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t\t// values\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t\t// the GL state when required\n\t\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// refresh uniforms common to several materials\n\t\n\t\t\t\t\tif ( fog && material.fog ) {\n\t\n\t\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\n\t\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\t\n\t\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\n\t\t\t\t\t\tif ( material.isMeshToonMaterial ) {\n\t\n\t\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\n\t\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\t\n\t\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\t\n\t\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\t\n\t\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\t\n\t\t\t\t\t} else if ( material.isLineBasicMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\n\t\t\t\t\t\tif ( material.isLineDashedMaterial ) {\n\t\n\t\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( material.isPointsMaterial ) {\n\t\n\t\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\t\n\t\t\t\t\t} else if ( material.isShadowMaterial ) {\n\t\n\t\t\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// RectAreaLight Texture\n\t\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\t\n\t\t\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\t\n\t\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\t// common matrices\n\t\n\t\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\t\n\t\t\t\treturn program;\n\t\n\t\t\t}\n\t\n\t\t\t// Uniforms (refresh uniforms objects)\n\t\n\t\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\t\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\n\t\t\t\tif ( material.color ) {\n\t\n\t\t\t\t\tuniforms.diffuse.value = material.color;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.emissive ) {\n\t\n\t\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.map ) {\n\t\n\t\t\t\t\tuniforms.map.value = material.map;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.alphaMap ) {\n\t\n\t\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.specularMap ) {\n\t\n\t\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.envMap ) {\n\t\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\t\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.lightMap ) {\n\t\n\t\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.aoMap ) {\n\t\n\t\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\t\n\t\t\t\tvar uvScaleMap;\n\t\n\t\t\t\tif ( material.map ) {\n\t\n\t\t\t\t\tuvScaleMap = material.map;\n\t\n\t\t\t\t} else if ( material.specularMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\t\n\t\t\t\t} else if ( material.displacementMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\t\n\t\t\t\t} else if ( material.normalMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\t\n\t\t\t\t} else if ( material.bumpMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\t\n\t\t\t\t} else if ( material.roughnessMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\n\t\t\t\t} else if ( material.metalnessMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\n\t\t\t\t} else if ( material.alphaMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\t\n\t\t\t\t} else if ( material.emissiveMap ) {\n\t\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\t\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\t\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\t\tvar repeat = uvScaleMap.repeat;\n\t\n\t\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsLine( uniforms, material ) {\n\t\n\t\t\t\tuniforms.diffuse.value = material.color;\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsDash( uniforms, material ) {\n\t\n\t\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\t\tuniforms.scale.value = material.scale;\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\t\n\t\t\t\tuniforms.diffuse.value = material.color;\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\t\tuniforms.scale.value = _height * 0.5;\n\t\n\t\t\t\tuniforms.map.value = material.map;\n\t\n\t\t\t\tif ( material.map !== null ) {\n\t\n\t\t\t\t\tvar offset = material.map.offset;\n\t\t\t\t\tvar repeat = material.map.repeat;\n\t\n\t\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\t\n\t\t\t\tuniforms.fogColor.value = fog.color;\n\t\n\t\t\t\tif ( fog.isFog ) {\n\t\n\t\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\n\t\t\t\t} else if ( fog.isFogExp2 ) {\n\t\n\t\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\t\n\t\t\t\tif ( material.emissiveMap ) {\n\t\n\t\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\t\n\t\t\t\tuniforms.specular.value = material.specular;\n\t\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\t\n\t\t\t\tif ( material.emissiveMap ) {\n\t\n\t\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.bumpMap ) {\n\t\n\t\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.normalMap ) {\n\t\n\t\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.displacementMap ) {\n\t\n\t\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsToon( uniforms, material ) {\n\t\n\t\t\t\trefreshUniformsPhong( uniforms, material );\n\t\n\t\t\t\tif ( material.gradientMap ) {\n\t\n\t\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\t\n\t\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\t\tuniforms.metalness.value = material.metalness;\n\t\n\t\t\t\tif ( material.roughnessMap ) {\n\t\n\t\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.metalnessMap ) {\n\t\n\t\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.emissiveMap ) {\n\t\n\t\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.bumpMap ) {\n\t\n\t\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.normalMap ) {\n\t\n\t\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.displacementMap ) {\n\t\n\t\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.envMap ) {\n\t\n\t\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\t\n\t\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\t\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\t\n\t\t\t\tif ( material.displacementMap ) {\n\t\n\t\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\t\n\t\t\t\tif ( material.displacementMap ) {\n\t\n\t\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\n\t\t\t}\n\t\n\t\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\t\n\t\t\t\tif ( material.bumpMap ) {\n\t\n\t\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.normalMap ) {\n\t\n\t\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( material.displacementMap ) {\n\t\n\t\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\t\n\t\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\t\n\t\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\n\t\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\n\t\t\t}\n\t\n\t\t\t// GL state setting\n\t\n\t\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\t\n\t\t\t\tstate.setCullFace( cullFace );\n\t\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\t\n\t\t\t};\n\t\n\t\t\t// Textures\n\t\n\t\t\tfunction allocTextureUnit() {\n\t\n\t\t\t\tvar textureUnit = _usedTextureUnits;\n\t\n\t\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_usedTextureUnits += 1;\n\t\n\t\t\t\treturn textureUnit;\n\t\n\t\t\t}\n\t\n\t\t\tthis.allocTextureUnit = allocTextureUnit;\n\t\n\t\t\t// this.setTexture2D = setTexture2D;\n\t\t\tthis.setTexture2D = ( function () {\n\t\n\t\t\t\tvar warned = false;\n\t\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\treturn function setTexture2D( texture, slot ) {\n\t\n\t\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\t\n\t\t\t\t\t\tif ( ! warned ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\t\twarned = true;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttexture = texture.texture;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttextures.setTexture2D( texture, slot );\n\t\n\t\t\t\t};\n\t\n\t\t\t}() );\n\t\n\t\t\tthis.setTexture = ( function () {\n\t\n\t\t\t\tvar warned = false;\n\t\n\t\t\t\treturn function setTexture( texture, slot ) {\n\t\n\t\t\t\t\tif ( ! warned ) {\n\t\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\t\twarned = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttextures.setTexture2D( texture, slot );\n\t\n\t\t\t\t};\n\t\n\t\t\t}() );\n\t\n\t\t\tthis.setTextureCube = ( function () {\n\t\n\t\t\t\tvar warned = false;\n\t\n\t\t\t\treturn function setTextureCube( texture, slot ) {\n\t\n\t\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\t\n\t\t\t\t\t\tif ( ! warned ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\t\twarned = true;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttexture = texture.texture;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t\t// TODO: unify these code paths\n\t\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\t\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\n\t\n\t\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\n\t\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}() );\n\t\n\t\t\tthis.getRenderTarget = function () {\n\t\n\t\t\t\treturn _currentRenderTarget;\n\t\n\t\t\t};\n\t\n\t\t\tthis.setRenderTarget = function ( renderTarget ) {\n\t\n\t\t\t\t_currentRenderTarget = renderTarget;\n\t\n\t\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\t\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar framebuffer = null;\n\t\t\t\tvar isCube = false;\n\t\n\t\t\t\tif ( renderTarget ) {\n\t\n\t\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\n\t\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\t\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\t\t\tisCube = true;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t\t_currentScissorTest = _scissorTest;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\t\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t\t_currentFramebuffer = framebuffer;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tstate.viewport( _currentViewport );\n\t\t\t\tstate.scissor( _currentScissor );\n\t\t\t\tstate.setScissorTest( _currentScissorTest );\n\t\n\t\t\t\tif ( isCube ) {\n\t\n\t\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\t\n\t\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\n\t\t\t\tif ( framebuffer ) {\n\t\n\t\t\t\t\tvar restore = false;\n\t\n\t\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\t\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\n\t\t\t\t\t\trestore = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\t\tvar textureType = texture.type;\n\t\n\t\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\t\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\t\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\t\n\t\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\n\t\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\t\n\t\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} finally {\n\t\n\t\t\t\t\t\tif ( restore ) {\n\t\n\t\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction FogExp2 ( color, density ) {\n\t\n\t\t\tthis.name = '';\n\t\n\t\t\tthis.color = new Color( color );\n\t\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\t\n\t\t}\n\t\n\t\tFogExp2.prototype.isFogExp2 = true;\n\t\n\t\tFogExp2.prototype.clone = function () {\n\t\n\t\t\treturn new FogExp2( this.color.getHex(), this.density );\n\t\n\t\t};\n\t\n\t\tFogExp2.prototype.toJSON = function ( meta ) {\n\t\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Fog ( color, near, far ) {\n\t\n\t\t\tthis.name = '';\n\t\n\t\t\tthis.color = new Color( color );\n\t\n\t\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\t\n\t\t}\n\t\n\t\tFog.prototype.isFog = true;\n\t\n\t\tFog.prototype.clone = function () {\n\t\n\t\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\t\n\t\t};\n\t\n\t\tFog.prototype.toJSON = function ( meta ) {\n\t\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Scene () {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Scene';\n\t\n\t\t\tthis.background = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\t\n\t\t}\n\t\n\t\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Scene,\n\t\n\t\t\tcopy: function ( source, recursive ) {\n\t\n\t\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\t\n\t\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\t\n\t\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\t\n\t\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction LensFlare( texture, size, distance, blending, color ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.lensFlares = [];\n\t\n\t\t\tthis.positionScreen = new Vector3();\n\t\t\tthis.customUpdateCallback = undefined;\n\t\n\t\t\tif ( texture !== undefined ) {\n\t\n\t\t\t\tthis.add( texture, size, distance, blending, color );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: LensFlare,\n\t\n\t\t\tisLensFlare: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tObject3D.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\t\n\t\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\t\n\t\t\t\tif ( size === undefined ) size = - 1;\n\t\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\t\n\t\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\t\n\t\t\t\tthis.lensFlares.push( {\n\t\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\t\tcolor: color,\t\t// color\n\t\t\t\t\tblending: blending\t// blending\n\t\t\t\t} );\n\t\n\t\t\t},\n\t\n\t\t\t/*\n\t\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t\t */\n\t\n\t\t\tupdateLensFlares: function () {\n\t\n\t\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\t\tvar flare;\n\t\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\t\tvar vecY = - this.positionScreen.y * 2;\n\t\n\t\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\t\n\t\t\t\t\tflare = this.lensFlares[ f ];\n\t\n\t\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\t\n\t\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  opacity: <float>,\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *\tuvOffset: new THREE.Vector2(),\n\t\t *\tuvScale: new THREE.Vector2()\n\t\t * }\n\t\t */\n\t\n\t\tfunction SpriteMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'SpriteMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff );\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.rotation = 0;\n\t\n\t\t\tthis.fog = false;\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\t\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\t\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\t\n\t\tSpriteMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.rotation = source.rotation;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Sprite( material ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Sprite';\n\t\n\t\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\t\n\t\t}\n\t\n\t\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Sprite,\n\t\n\t\t\tisSprite: true,\n\t\n\t\t\traycast: ( function () {\n\t\n\t\t\t\tvar intersectPoint = new Vector3();\n\t\t\t\tvar worldPosition = new Vector3();\n\t\t\t\tvar worldScale = new Vector3();\n\t\n\t\t\t\treturn function raycast( raycaster, intersects ) {\n\t\n\t\t\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\t\n\t\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\t\n\t\t\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\t\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\t\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\t\n\t\t\t\t\tintersects.push( {\n\t\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: this\n\t\n\t\t\t\t\t} );\n\t\n\t\t\t\t};\n\t\n\t\t\t}() ),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.material ).copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction LOD() {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'LOD';\n\t\n\t\t\tObject.defineProperties( this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t}\n\t\n\t\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: LOD,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tObject3D.prototype.copy.call( this, source, false );\n\t\n\t\t\t\tvar levels = source.levels;\n\t\n\t\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar level = levels[ i ];\n\t\n\t\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\taddLevel: function ( object, distance ) {\n\t\n\t\t\t\tif ( distance === undefined ) distance = 0;\n\t\n\t\t\t\tdistance = Math.abs( distance );\n\t\n\t\t\t\tvar levels = this.levels;\n\t\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\t\n\t\t\t\t\tif ( distance < levels[ l ].distance ) {\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\t\n\t\t\t\tthis.add( object );\n\t\n\t\t\t},\n\t\n\t\t\tgetObjectForDistance: function ( distance ) {\n\t\n\t\t\t\tvar levels = this.levels;\n\t\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tif ( distance < levels[ i ].distance ) {\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn levels[ i - 1 ].object;\n\t\n\t\t\t},\n\t\n\t\t\traycast: ( function () {\n\t\n\t\t\t\tvar matrixPosition = new Vector3();\n\t\n\t\t\t\treturn function raycast( raycaster, intersects ) {\n\t\n\t\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\t\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\t\n\t\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\t\n\t\t\t\t};\n\t\n\t\t\t}() ),\n\t\n\t\t\tupdate: function () {\n\t\n\t\t\t\tvar v1 = new Vector3();\n\t\t\t\tvar v2 = new Vector3();\n\t\n\t\t\t\treturn function update( camera ) {\n\t\n\t\t\t\t\tvar levels = this.levels;\n\t\n\t\t\t\t\tif ( levels.length > 1 ) {\n\t\n\t\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\t\n\t\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\t\n\t\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\t\n\t\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\t\n\t\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\t\n\t\t\t\tdata.object.levels = [];\n\t\n\t\t\t\tvar levels = this.levels;\n\t\n\t\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar level = levels[ i ];\n\t\n\t\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\t\tdistance: level.distance\n\t\t\t\t\t} );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author michael guerrero / http://realitymeltdown.com\n\t\t * @author ikerr / http://verold.com\n\t\t */\n\t\n\t\tfunction Skeleton( bones, boneInverses ) {\n\t\n\t\t\t// copy the bone array\n\t\n\t\t\tbones = bones || [];\n\t\n\t\t\tthis.bones = bones.slice( 0 );\n\t\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\t\n\t\t\t// use the supplied bone inverses or calculate the inverses\n\t\n\t\t\tif ( boneInverses === undefined ) {\n\t\n\t\t\t\tthis.calculateInverses();\n\t\n\t\t\t} else {\n\t\n\t\t\t\tif ( this.bones.length === boneInverses.length ) {\n\t\n\t\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\t\n\t\t\t\t\tthis.boneInverses = [];\n\t\n\t\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tObject.assign( Skeleton.prototype, {\n\t\n\t\t\tcalculateInverses: function () {\n\t\n\t\t\t\tthis.boneInverses = [];\n\t\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar inverse = new Matrix4();\n\t\n\t\t\t\t\tif ( this.bones[ i ] ) {\n\t\n\t\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.boneInverses.push( inverse );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tpose: function () {\n\t\n\t\t\t\tvar bone, i, il;\n\t\n\t\t\t\t// recover the bind-time world matrices\n\t\n\t\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tbone = this.bones[ i ];\n\t\n\t\t\t\t\tif ( bone ) {\n\t\n\t\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// compute the local matrices, positions, rotations and scales\n\t\n\t\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tbone = this.bones[ i ];\n\t\n\t\t\t\t\tif ( bone ) {\n\t\n\t\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\t\n\t\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tupdate: ( function () {\n\t\n\t\t\t\tvar offsetMatrix = new Matrix4();\n\t\t\t\tvar identityMatrix = new Matrix4();\n\t\n\t\t\t\treturn function update() {\n\t\n\t\t\t\t\tvar bones = this.bones;\n\t\t\t\t\tvar boneInverses = this.boneInverses;\n\t\t\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\t\t\tvar boneTexture = this.boneTexture;\n\t\n\t\t\t\t\t// flatten bone matrices to array\n\t\n\t\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\t// compute the offset between the current and the original transform\n\t\n\t\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\t\n\t\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( boneTexture !== undefined ) {\n\t\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t} )(),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author ikerr / http://verold.com\n\t\t */\n\t\n\t\tfunction Bone() {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Bone';\n\t\n\t\t}\n\t\n\t\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Bone,\n\t\n\t\t\tisBone: true\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mikael emtinger / http://gomo.se/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author ikerr / http://verold.com\n\t\t */\n\t\n\t\tfunction SkinnedMesh( geometry, material ) {\n\t\n\t\t\tMesh.call( this, geometry, material );\n\t\n\t\t\tthis.type = 'SkinnedMesh';\n\t\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\n\t\t\tvar bones = this.initBones();\n\t\t\tvar skeleton = new Skeleton( bones );\n\t\n\t\t\tthis.bind( skeleton, this.matrixWorld );\n\t\n\t\t\tthis.normalizeSkinWeights();\n\t\n\t\t}\n\t\n\t\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\t\n\t\t\tconstructor: SkinnedMesh,\n\t\n\t\t\tisSkinnedMesh: true,\n\t\n\t\t\tinitBones: function () {\n\t\n\t\t\t\tvar bones = [], bone, gbone;\n\t\t\t\tvar i, il;\n\t\n\t\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\t\n\t\t\t\t\t// first, create array of 'Bone' objects from geometry data\n\t\n\t\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\t\n\t\t\t\t\t\t// create new 'Bone' object\n\t\n\t\t\t\t\t\tbone = new Bone();\n\t\t\t\t\t\tbones.push( bone );\n\t\n\t\t\t\t\t\t// apply values\n\t\n\t\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// second, create bone hierarchy\n\t\n\t\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\t\n\t\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\t\n\t\t\t\t\t\t\t// subsequent bones in the hierarchy\n\t\n\t\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\t\n\t\t\t\t\t\t\tthis.add( bones[ i ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t\t\t// let's update the corresponding matrices\n\t\n\t\t\t\tthis.updateMatrixWorld( true );\n\t\n\t\t\t\treturn bones;\n\t\n\t\t\t},\n\t\n\t\t\tbind: function ( skeleton, bindMatrix ) {\n\t\n\t\t\t\tthis.skeleton = skeleton;\n\t\n\t\t\t\tif ( bindMatrix === undefined ) {\n\t\n\t\t\t\t\tthis.updateMatrixWorld( true );\n\t\n\t\t\t\t\tthis.skeleton.calculateInverses();\n\t\n\t\t\t\t\tbindMatrix = this.matrixWorld;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\t\n\t\t\t},\n\t\n\t\t\tpose: function () {\n\t\n\t\t\t\tthis.skeleton.pose();\n\t\n\t\t\t},\n\t\n\t\t\tnormalizeSkinWeights: function () {\n\t\n\t\t\t\tvar scale, i;\n\t\n\t\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\t\n\t\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\t\n\t\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\t\n\t\t\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\t\n\t\t\t\t\t\tif ( scale !== Infinity ) {\n\t\n\t\t\t\t\t\t\tsw.multiplyScalar( scale );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\tvar vec = new Vector4();\n\t\n\t\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\t\n\t\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\t\n\t\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\t\tvec.w = skinWeight.getW( i );\n\t\n\t\t\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\t\n\t\t\t\t\t\tif ( scale !== Infinity ) {\n\t\n\t\t\t\t\t\t\tvec.multiplyScalar( scale );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tupdateMatrixWorld: function ( force ) {\n\t\n\t\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\t\n\t\t\t\tif ( this.bindMode === 'attached' ) {\n\t\n\t\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\t\n\t\t\t\t} else if ( this.bindMode === 'detached' ) {\n\t\n\t\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  linewidth: <float>,\n\t\t *  linecap: \"round\",\n\t\t *  linejoin: \"round\"\n\t\t * }\n\t\t */\n\t\n\t\tfunction LineBasicMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff );\n\t\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\t\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\t\n\t\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\t\n\t\tLineBasicMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.color.copy( source.color );\n\t\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Line( geometry, material, mode ) {\n\t\n\t\t\tif ( mode === 1 ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\t\treturn new LineSegments( geometry, material );\n\t\n\t\t\t}\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Line';\n\t\n\t\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\t\n\t\t}\n\t\n\t\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Line,\n\t\n\t\t\tisLine: true,\n\t\n\t\t\traycast: ( function () {\n\t\n\t\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\t\tvar ray = new Ray();\n\t\t\t\tvar sphere = new Sphere();\n\t\n\t\t\t\treturn function raycast( raycaster, intersects ) {\n\t\n\t\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\t\tvar precisionSq = precision * precision;\n\t\n\t\t\t\t\tvar geometry = this.geometry;\n\t\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\n\t\t\t\t\t// Checking boundingSphere distance to ray\n\t\n\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\n\t\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\n\t\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\t\n\t\t\t\t\t//\n\t\n\t\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\t\n\t\t\t\t\tvar vStart = new Vector3();\n\t\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\t\tvar interRay = new Vector3();\n\t\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\t\n\t\t\t\t\tif ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\t\t\tvar indices = index.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\t\n\t\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\t\n\t\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\t\n\t\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\t\n\t\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\t\n\t\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\t\n\t\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\t\n\t\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\t\n\t\t\t\t\t\t\t\tintersects.push( {\n\t\n\t\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\t\tobject: this\n\t\n\t\t\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\t\n\t\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\t\n\t\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\t\n\t\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\t\n\t\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\t\n\t\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\t\n\t\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\t\n\t\t\t\t\t\t\t\tintersects.push( {\n\t\n\t\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\t\tobject: this\n\t\n\t\t\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( geometry.isGeometry ) {\n\t\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\t\tvar nbVertices = vertices.length;\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\t\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\t\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\t\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\t\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\t\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\t\n\t\t\t\t\t\t\tintersects.push( {\n\t\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\t\n\t\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}() ),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction LineSegments( geometry, material ) {\n\t\n\t\t\tLine.call( this, geometry, material );\n\t\n\t\t\tthis.type = 'LineSegments';\n\t\n\t\t}\n\t\n\t\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\t\n\t\t\tconstructor: LineSegments,\n\t\n\t\t\tisLineSegments: true\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mgreter / http://github.com/mgreter\n\t\t */\n\t\n\t\tfunction LineLoop( geometry, material ) {\n\t\n\t\t\tLine.call( this, geometry, material );\n\t\n\t\t\tthis.type = 'LineLoop';\n\t\n\t\t}\n\t\n\t\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\t\n\t\t\tconstructor: LineLoop,\n\t\n\t\t\tisLineLoop: true,\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  opacity: <float>,\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  size: <float>,\n\t\t *  sizeAttenuation: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction PointsMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'PointsMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff );\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tPointsMaterial.prototype = Object.create( Material.prototype );\n\t\tPointsMaterial.prototype.constructor = PointsMaterial;\n\t\n\t\tPointsMaterial.prototype.isPointsMaterial = true;\n\t\n\t\tPointsMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.color.copy( source.color );\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Points( geometry, material ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Points';\n\t\n\t\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\t\n\t\t}\n\t\n\t\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Points,\n\t\n\t\t\tisPoints: true,\n\t\n\t\t\traycast: ( function () {\n\t\n\t\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\t\tvar ray = new Ray();\n\t\t\t\tvar sphere = new Sphere();\n\t\n\t\t\t\treturn function raycast( raycaster, intersects ) {\n\t\n\t\t\t\t\tvar object = this;\n\t\t\t\t\tvar geometry = this.geometry;\n\t\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\t\n\t\t\t\t\t// Checking boundingSphere distance to ray\n\t\n\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\n\t\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\t\tsphere.radius += threshold;\n\t\n\t\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\t\n\t\t\t\t\t//\n\t\n\t\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\t\n\t\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\t\tvar position = new Vector3();\n\t\n\t\t\t\t\tfunction testPoint( point, index ) {\n\t\n\t\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\t\n\t\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\t\n\t\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\t\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\t\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\t\n\t\t\t\t\t\t\tintersects.push( {\n\t\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tobject: object\n\t\n\t\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\t\t\tvar indices = index.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\n\t\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\t\n\t\t\t\t\t\t\t\ttestPoint( position, a );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\t\n\t\t\t\t\t\t\t\ttestPoint( position, i );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t}() ),\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Group() {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Group';\n\t\n\t\t}\n\t\n\t\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Group\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\t\n\t\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\t\n\t\t\tthis.generateMipmaps = false;\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tfunction update() {\n\t\n\t\t\t\trequestAnimationFrame( update );\n\t\n\t\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\t\n\t\t\t\t\tscope.needsUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tupdate();\n\t\n\t\t}\n\t\n\t\tVideoTexture.prototype = Object.create( Texture.prototype );\n\t\tVideoTexture.prototype.constructor = VideoTexture;\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\t\n\t\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\t\n\t\t\tthis.image = { width: width, height: height };\n\t\t\tthis.mipmaps = mipmaps;\n\t\n\t\t\t// no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\t\n\t\t\tthis.flipY = false;\n\t\n\t\t\t// can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\t\n\t\t\tthis.generateMipmaps = false;\n\t\n\t\t}\n\t\n\t\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\t\tCompressedTexture.prototype.constructor = CompressedTexture;\n\t\n\t\tCompressedTexture.prototype.isCompressedTexture = true;\n\t\n\t\t/**\n\t\t * @author Matt DesLauriers / @mattdesl\n\t\t * @author atix / arthursilber.de\n\t\t */\n\t\n\t\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\t\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\t\n\t\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\t\n\t\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\t\n\t\t\t}\n\t\n\t\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\t\n\t\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\t\n\t\t\tthis.image = { width: width, height: height };\n\t\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps\t= false;\n\t\n\t\t}\n\t\n\t\tDepthTexture.prototype = Object.create( Texture.prototype );\n\t\tDepthTexture.prototype.constructor = DepthTexture;\n\t\tDepthTexture.prototype.isDepthTexture = true;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\tfunction WireframeGeometry( geometry ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'WireframeGeometry';\n\t\n\t\t\t// buffer\n\t\n\t\t\tvar vertices = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar i, j, l, o, ol;\n\t\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\t\tvar vertex;\n\t\n\t\t\t// different logic for Geometry and BufferGeometry\n\t\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\t\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\t\n\t\t\t\tvar faces = geometry.faces;\n\t\n\t\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\t\n\t\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\t\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\t\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\t\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// generate vertices\n\t\n\t\t\t\tfor ( key in edges ) {\n\t\n\t\t\t\t\te = edges[ key ];\n\t\n\t\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t}\n\t\n\t\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\t\n\t\t\t\tvar position, indices, groups;\n\t\t\t\tvar group, start, count;\n\t\t\t\tvar index1, index2;\n\t\n\t\t\t\tvertex = new Vector3();\n\t\n\t\t\t\tif ( geometry.index !== null ) {\n\t\n\t\t\t\t\t// indexed BufferGeometry\n\t\n\t\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\t\tindices = geometry.index;\n\t\t\t\t\tgroups = geometry.groups;\n\t\n\t\t\t\t\tif ( groups.length === 0 ) {\n\t\n\t\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// create a data structure that contains all eges without duplicates\n\t\n\t\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\t\n\t\t\t\t\t\tgroup = groups[ o ];\n\t\n\t\t\t\t\t\tstart = group.start;\n\t\t\t\t\t\tcount = group.count;\n\t\n\t\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\t\n\t\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\t\n\t\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\t\n\t\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\t\n\t\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// generate vertices\n\t\n\t\t\t\t\tfor ( key in edges ) {\n\t\n\t\t\t\t\t\te = edges[ key ];\n\t\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// non-indexed BufferGeometry\n\t\n\t\t\t\t\tposition = geometry.attributes.position;\n\t\n\t\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\t\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\t\n\t\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\n\t\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\n\t\t}\n\t\n\t\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\t\n\t\t/**\n\t\t * @author zz85 / https://github.com/zz85\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t *\n\t\t * Parametric Surfaces Geometry\n\t\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t\t */\n\t\n\t\t// ParametricGeometry\n\t\n\t\tfunction ParametricGeometry( func, slices, stacks ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'ParametricGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tfunc: func,\n\t\t\t\tslices: slices,\n\t\t\t\tstacks: stacks\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\t\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\t\n\t\t// ParametricBufferGeometry\n\t\n\t\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'ParametricBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tfunc: func,\n\t\t\t\tslices: slices,\n\t\t\t\tstacks: stacks\n\t\t\t};\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\tvar EPS = 0.00001;\n\t\n\t\t\tvar normal = new Vector3();\n\t\n\t\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\t\tvar pu = new Vector3(), pv = new Vector3();\n\t\n\t\t\tvar i, j;\n\t\n\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\tvar sliceCount = slices + 1;\n\t\n\t\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\t\n\t\t\t\tvar v = i / stacks;\n\t\n\t\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\t\n\t\t\t\t\tvar u = j / slices;\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tp0 = func( u, v, p0 );\n\t\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\t// approximate tangent vectors via finite differences\n\t\n\t\t\t\t\tif ( u - EPS >= 0 ) {\n\t\n\t\t\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\t\t\tpu.subVectors( p0, p1 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\t\t\tpu.subVectors( p1, p0 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( v - EPS >= 0 ) {\n\t\n\t\t\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\t\t\tpv.subVectors( p0, p1 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\t\t\tpv.subVectors( p1, p0 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// cross product of tangent vectors returns surface normal\n\t\n\t\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuvs.push( u, v );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// generate indices\n\t\n\t\t\tfor ( i = 0; i < stacks; i ++ ) {\n\t\n\t\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\t\n\t\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\t\n\t\t\t\t\t// faces one and two\n\t\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t}\n\t\n\t\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\t\n\t\t/**\n\t\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t\t * @author timothypratley / https://github.com/timothypratley\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// PolyhedronGeometry\n\t\n\t\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\t\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\t\n\t\t// PolyhedronBufferGeometry\n\t\n\t\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'PolyhedronBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t\tradius = radius || 1;\n\t\t\tdetail = detail || 0;\n\t\n\t\t\t// default buffer data\n\t\n\t\t\tvar vertexBuffer = [];\n\t\t\tvar uvBuffer = [];\n\t\n\t\t\t// the subdivision creates the vertex buffer data\n\t\n\t\t\tsubdivide( detail );\n\t\n\t\t\t// all vertices should lie on a conceptual sphere with a given radius\n\t\n\t\t\tappplyRadius( radius );\n\t\n\t\t\t// finally, create the uv data\n\t\n\t\t\tgenerateUVs();\n\t\n\t\t\t// build non-indexed geometry\n\t\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\t\n\t\t\tif ( detail === 0 ) {\n\t\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\n\t\t\t} else {\n\t\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\n\t\t\t}\n\t\n\t\t\t// helper functions\n\t\n\t\t\tfunction subdivide( detail ) {\n\t\n\t\t\t\tvar a = new Vector3();\n\t\t\t\tvar b = new Vector3();\n\t\t\t\tvar c = new Vector3();\n\t\n\t\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\t\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\t\n\t\t\t\t\t// get the vertices of the face\n\t\n\t\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\t\n\t\t\t\t\t// perform subdivision\n\t\n\t\t\t\t\tsubdivideFace( a, b, c, detail );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction subdivideFace( a, b, c, detail ) {\n\t\n\t\t\t\tvar cols = Math.pow( 2, detail );\n\t\n\t\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\t\n\t\t\t\tvar v = [];\n\t\n\t\t\t\tvar i, j;\n\t\n\t\t\t\t// construct all of the vertices for this subdivision\n\t\n\t\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\t\n\t\t\t\t\tv[ i ] = [];\n\t\n\t\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\t\n\t\t\t\t\tvar rows = cols - i;\n\t\n\t\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\t\n\t\t\t\t\t\tif ( j === 0 && i === cols ) {\n\t\n\t\t\t\t\t\t\tv[ i ][ j ] = aj;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// construct all of the faces\n\t\n\t\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\t\n\t\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\t\n\t\t\t\t\t\tvar k = Math.floor( j / 2 );\n\t\n\t\t\t\t\t\tif ( j % 2 === 0 ) {\n\t\n\t\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction appplyRadius( radius ) {\n\t\n\t\t\t\tvar vertex = new Vector3();\n\t\n\t\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\t\n\t\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\t\n\t\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\t\n\t\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\t\n\t\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction generateUVs() {\n\t\n\t\t\t\tvar vertex = new Vector3();\n\t\n\t\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\t\n\t\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\t\n\t\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push( u, 1 - v );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tcorrectUVs();\n\t\n\t\t\t\tcorrectSeam();\n\t\n\t\t\t}\n\t\n\t\t\tfunction correctSeam() {\n\t\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\n\t\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\t\n\t\t\t\t\t// uv data of a single face\n\t\n\t\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\t\n\t\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\t\n\t\t\t\t\t// 0.9 is somewhat arbitrary\n\t\n\t\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\t\n\t\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushVertex( vertex ) {\n\t\n\t\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t}\n\t\n\t\t\tfunction getVertexByIndex( index, vertex ) {\n\t\n\t\t\t\tvar stride = index * 3;\n\t\n\t\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\t\tvertex.z = vertices[ stride + 2 ];\n\t\n\t\t\t}\n\t\n\t\t\tfunction correctUVs() {\n\t\n\t\t\t\tvar a = new Vector3();\n\t\t\t\tvar b = new Vector3();\n\t\t\t\tvar c = new Vector3();\n\t\n\t\t\t\tvar centroid = new Vector3();\n\t\n\t\t\t\tvar uvA = new Vector2();\n\t\t\t\tvar uvB = new Vector2();\n\t\t\t\tvar uvC = new Vector2();\n\t\n\t\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\t\n\t\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\t\n\t\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\t\n\t\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\t\n\t\t\t\t\tvar azi = azimuth( centroid );\n\t\n\t\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\t\n\t\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\t\n\t\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\t\n\t\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\t\n\t\t\tfunction azimuth( vector ) {\n\t\n\t\t\t\treturn Math.atan2( vector.z, - vector.x );\n\t\n\t\t\t}\n\t\n\t\n\t\t\t// Angle above the XZ plane.\n\t\n\t\t\tfunction inclination( vector ) {\n\t\n\t\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\t\n\t\t/**\n\t\t * @author timothypratley / https://github.com/timothypratley\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// TetrahedronGeometry\n\t\n\t\tfunction TetrahedronGeometry( radius, detail ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\t\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\t\n\t\t// TetrahedronBufferGeometry\n\t\n\t\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\t\n\t\t\tvar vertices = [\n\t\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t\t];\n\t\n\t\t\tvar indices = [\n\t\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t\t];\n\t\n\t\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\t\n\t\t\tthis.type = 'TetrahedronBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\t\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\t\n\t\t/**\n\t\t * @author timothypratley / https://github.com/timothypratley\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// OctahedronGeometry\n\t\n\t\tfunction OctahedronGeometry( radius, detail ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\t\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\t\n\t\t// OctahedronBufferGeometry\n\t\n\t\tfunction OctahedronBufferGeometry( radius, detail ) {\n\t\n\t\t\tvar vertices = [\n\t\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t\t];\n\t\n\t\t\tvar indices = [\n\t\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t\t];\n\t\n\t\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\t\n\t\t\tthis.type = 'OctahedronBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\t\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\t\n\t\t/**\n\t\t * @author timothypratley / https://github.com/timothypratley\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// IcosahedronGeometry\n\t\n\t\tfunction IcosahedronGeometry( radius, detail ) {\n\t\n\t\t \tGeometry.call( this );\n\t\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\t\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\t\n\t\t// IcosahedronBufferGeometry\n\t\n\t\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\t\n\t\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\n\t\t\tvar vertices = [\n\t\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t\t];\n\t\n\t\t\tvar indices = [\n\t\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t\t];\n\t\n\t\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\t\n\t\t\tthis.type = 'IcosahedronBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\t\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\t\n\t\t/**\n\t\t * @author Abe Pazos / https://hamoid.com\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// DodecahedronGeometry\n\t\n\t\tfunction DodecahedronGeometry( radius, detail ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\t\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\t\n\t\t// DodecahedronBufferGeometry\n\t\n\t\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\t\n\t\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\t\tvar r = 1 / t;\n\t\n\t\t\tvar vertices = [\n\t\n\t\t\t\t// (±1, ±1, ±1)\n\t\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t\t\t  1,  1, - 1,     1,  1,  1,\n\t\n\t\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t\t 0,  r, - t,     0,  r,  t,\n\t\n\t\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t\t r, - t,  0,     r,  t,  0,\n\t\n\t\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t\t- t,  0,  r,     t,  0,  r\n\t\t\t];\n\t\n\t\t\tvar indices = [\n\t\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t\t];\n\t\n\t\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\t\n\t\t\tthis.type = 'DodecahedronBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\t\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\t\n\t\t/**\n\t\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t\t * @author WestLangley / https://github.com/WestLangley\n\t\t * @author zz85 / https://github.com/zz85\n\t\t * @author miningold / https://github.com/miningold\n\t\t * @author jonobr1 / https://github.com/jonobr1\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t *\n\t\t */\n\t\n\t\t// TubeGeometry\n\t\n\t\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'TubeGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\n\t\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\t\n\t\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\t\n\t\t\t// expose internals\n\t\n\t\t\tthis.tangents = bufferGeometry.tangents;\n\t\t\tthis.normals = bufferGeometry.normals;\n\t\t\tthis.binormals = bufferGeometry.binormals;\n\t\n\t\t\t// create geometry\n\t\n\t\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\t\tTubeGeometry.prototype.constructor = TubeGeometry;\n\t\n\t\t// TubeBufferGeometry\n\t\n\t\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'TubeBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\n\t\t\ttubularSegments = tubularSegments || 64;\n\t\t\tradius = radius || 1;\n\t\t\tradialSegments = radialSegments || 8;\n\t\t\tclosed = closed || false;\n\t\n\t\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\t\n\t\t\t// expose internals\n\t\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals;\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3();\n\t\t\tvar uv = new Vector2();\n\t\n\t\t\tvar i, j;\n\t\n\t\t\t// buffer\n\t\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\t\tvar indices = [];\n\t\n\t\t\t// create buffer data\n\t\n\t\t\tgenerateBufferData();\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t\t// functions\n\t\n\t\t\tfunction generateBufferData() {\n\t\n\t\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\t\n\t\t\t\t\tgenerateSegment( i );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\t\n\t\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\t\n\t\t\t\t// uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\t\n\t\t\t\tgenerateUVs();\n\t\n\t\t\t\t// finally create faces\n\t\n\t\t\t\tgenerateIndices();\n\t\n\t\t\t}\n\t\n\t\t\tfunction generateSegment( i ) {\n\t\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\n\t\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\t\n\t\t\t\t// retrieve corresponding normal and binormal\n\t\n\t\t\t\tvar N = frames.normals[ i ];\n\t\t\t\tvar B = frames.binormals[ i ];\n\t\n\t\t\t\t// generate normals and vertices for the current segment\n\t\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\t\n\t\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\n\t\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\t\tvar cos = - Math.cos( v );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\t\tnormal.normalize();\n\t\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction generateIndices() {\n\t\n\t\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\t\n\t\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\t\n\t\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\t\n\t\t\t\t\t\t// faces\n\t\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction generateUVs() {\n\t\n\t\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\t\n\t\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\t\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\n\t\t\t\t\t\tuvs.push( uv.x, uv.y );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\t\n\t\t/**\n\t\t * @author oosmoxiecode\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t *\n\t\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t\t */\n\t\n\t\t// TorusKnotGeometry\n\t\n\t\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\n\t\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\t\n\t\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\t\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\t\n\t\t// TorusKnotBufferGeometry\n\t\n\t\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'TorusKnotBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\n\t\t\tradius = radius || 100;\n\t\t\ttube = tube || 40;\n\t\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\t\tp = p || 2;\n\t\t\tq = q || 3;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar i, j;\n\t\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3();\n\t\n\t\t\tvar P1 = new Vector3();\n\t\t\tvar P2 = new Vector3();\n\t\n\t\t\tvar B = new Vector3();\n\t\t\tvar T = new Vector3();\n\t\t\tvar N = new Vector3();\n\t\n\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\t\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\n\t\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\t\n\t\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\t\n\t\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\t\n\t\t\t\t// calculate orthonormal basis\n\t\n\t\t\t\tT.subVectors( P2, P1 );\n\t\t\t\tN.addVectors( P2, P1 );\n\t\t\t\tB.crossVectors( T, N );\n\t\t\t\tN.crossVectors( B, T );\n\t\n\t\t\t\t// normalize B, N. T can be ignored, we don't use it\n\t\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\t\n\t\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\t\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\n\t\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\t\tvar cy = tube * Math.sin( v );\n\t\n\t\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\t\n\t\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\n\t\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\t\tuvs.push( j / radialSegments );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// generate indices\n\t\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\t\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\t\n\t\t\t\t\t// indices\n\t\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\t\n\t\t\t\t\t// faces\n\t\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t\t// this function calculates the current position on the torus curve\n\t\n\t\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\t\n\t\t\t\tvar cu = Math.cos( u );\n\t\t\t\tvar su = Math.sin( u );\n\t\t\t\tvar quOverP = q / p * u;\n\t\t\t\tvar cs = Math.cos( quOverP );\n\t\n\t\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\t\n\t\t/**\n\t\t * @author oosmoxiecode\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// TorusGeometry\n\t\n\t\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'TorusGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\t\tTorusGeometry.prototype.constructor = TorusGeometry;\n\t\n\t\t// TorusBufferGeometry\n\t\n\t\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'TorusBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\n\t\t\tradius = radius || 100;\n\t\t\ttube = tube || 40;\n\t\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\t\tarc = arc || Math.PI * 2;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar center = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3();\n\t\n\t\t\tvar j, i;\n\t\n\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\t\n\t\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\t\n\t\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\t\tvertex.z = tube * Math.sin( v );\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\t\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\t\tuvs.push( j / radialSegments );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// generate indices\n\t\n\t\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\t\n\t\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\t\n\t\t\t\t\t// indices\n\t\n\t\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\t\n\t\t\t\t\t// faces\n\t\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t}\n\t\n\t\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t */\n\t\n\t\tvar ShapeUtils = {\n\t\n\t\t\t// calculate area of the contour polygon\n\t\n\t\t\tarea: function ( contour ) {\n\t\n\t\t\t\tvar n = contour.length;\n\t\t\t\tvar a = 0.0;\n\t\n\t\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\t\n\t\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn a * 0.5;\n\t\n\t\t\t},\n\t\n\t\t\ttriangulate: ( function () {\n\t\n\t\t\t\t/**\n\t\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t\t * See original code and more information here:\n\t\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t\t *\n\t\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t\t * www.actionsnippet.com\n\t\t\t\t *\n\t\t\t\t * ported to javascript by Joshua Koo\n\t\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t\t *\n\t\t\t\t */\n\t\n\t\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\t\n\t\t\t\t\tvar p;\n\t\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\t\tvar cx, cy, px, py;\n\t\n\t\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\t\tay = contour[ verts[ u ] ].y;\n\t\n\t\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\t\tby = contour[ verts[ v ] ].y;\n\t\n\t\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\t\tcy = contour[ verts[ w ] ].y;\n\t\n\t\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\t\n\t\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\t\n\t\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\t\tcX = bx - ax;  cY = by - ay;\n\t\n\t\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\t\n\t\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\t\n\t\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\t\n\t\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\t\n\t\t\t\t\t\t// see if p is inside triangle abc\n\t\n\t\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\t\n\t\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// takes in an contour array and returns\n\t\n\t\t\t\treturn function triangulate( contour, indices ) {\n\t\n\t\t\t\t\tvar n = contour.length;\n\t\n\t\t\t\t\tif ( n < 3 ) return null;\n\t\n\t\t\t\t\tvar result = [],\n\t\t\t\t\t\tverts = [],\n\t\t\t\t\t\tvertIndices = [];\n\t\n\t\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\t\n\t\t\t\t\tvar u, v, w;\n\t\n\t\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\t\n\t\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar nv = n;\n\t\n\t\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\t\n\t\t\t\t\tvar count = 2 * nv;   /* error detection */\n\t\n\t\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\t\n\t\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\t\n\t\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\t\n\t\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\t\n\t\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\t\n\t\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\t\treturn result;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\t\n\t\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\t\n\t\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\t\n\t\t\t\t\t\t\tvar a, b, c, s, t;\n\t\n\t\t\t\t\t\t\t/* true names of the vertices */\n\t\n\t\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\t\tc = verts[ w ];\n\t\n\t\t\t\t\t\t\t/* output Triangle */\n\t\n\t\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\t\tcontour[ c ] ] );\n\t\n\t\n\t\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\t\n\t\t\t\t\t\t\t/* remove v from the remaining polygon */\n\t\n\t\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\t\n\t\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tnv --;\n\t\n\t\t\t\t\t\t\t/* reset error detection counter */\n\t\n\t\t\t\t\t\t\tcount = 2 * nv;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\treturn result;\n\t\n\t\t\t\t};\n\t\n\t\t\t} )(),\n\t\n\t\t\ttriangulateShape: function ( contour, holes ) {\n\t\n\t\t\t\tfunction removeDupEndPts(points) {\n\t\n\t\t\t\t\tvar l = points.length;\n\t\n\t\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\t\n\t\t\t\t\t\tpoints.pop();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tremoveDupEndPts( contour );\n\t\t\t\tholes.forEach( removeDupEndPts );\n\t\n\t\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\t\n\t\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\t\n\t\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\t\n\t\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\t\n\t\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\t\n\t\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\t\n\t\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\t\n\t\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\t\n\t\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\t\n\t\t\t\t\t\t// not parallel\n\t\n\t\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\t\tif ( limit > 0 ) {\n\t\n\t\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\t\n\t\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( perpSeg2 === limit ) {\n\t\n\t\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\t\n\t\t\t\t\t\t// return real intersection point\n\t\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\t\n\t\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t\t// both segments are points\n\t\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\t\n\t\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\t\tif ( seg1Pt ) {\n\t\n\t\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\t\tif ( seg2Pt ) {\n\t\n\t\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\t\tif ( seg1dx !== 0 ) {\n\t\n\t\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\t\n\t\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\t\n\t\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\t\n\t\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\t\n\t\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\t\n\t\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\t\n\t\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\t\treturn [ seg2min ];\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\t\n\t\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\t\treturn [ seg1min ];\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\t\n\t\t\t\t\t// The order of legs is important\n\t\n\t\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\t\n\t\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\t\n\t\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\t\n\t\t\t\t\t\t// angle != 180 deg.\n\t\n\t\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\t\n\t\t\t\t\t\tif ( from2toAngle > 0 ) {\n\t\n\t\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\tfunction removeHoles( contour, holes ) {\n\t\n\t\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\t\tvar hole;\n\t\n\t\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\t\n\t\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\t\n\t\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\t\n\t\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\t\n\t\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\t\tif ( ! insideAngle ) {\n\t\n\t\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\t\treturn\tfalse;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\t\n\t\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\t\n\t\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\t\n\t\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\t\tif ( ! insideAngle ) {\n\t\n\t\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\t\treturn\tfalse;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn\ttrue;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\t\n\t\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\t\n\t\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn\tfalse;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar indepHoles = [];\n\t\n\t\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\t\n\t\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\t\n\t\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ] ];\n\t\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\t\n\t\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\tfalse;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\t\ttmpHole1, tmpHole2;\n\t\n\t\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\t\t\tindepHoles.push( h );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\t\twhile ( indepHoles.length > 0 ) {\n\t\n\t\t\t\t\t\tcounter --;\n\t\t\t\t\t\tif ( counter < 0 ) {\n\t\n\t\t\t\t\t\t\tconsole.log( 'THREE.ShapeUtils: Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!' );\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\t\n\t\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\t\tholeIndex\t= - 1;\n\t\n\t\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\t\n\t\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\t\n\t\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\t\tcutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;\n\t\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\t\n\t\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\t\n\t\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\t\n\t\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\t\n\t\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\t\n\t\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\t\n\t\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\t\n\t\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\tvar i, il, f, face,\n\t\t\t\t\tkey, index,\n\t\t\t\t\tallPointsMap = {};\n\t\n\t\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\t\n\t\t\t\tvar allpoints = contour.concat();\n\t\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\t\n\t\t\t\t// prepare all points map\n\t\n\t\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tkey = allpoints[ i ].x + ':' + allpoints[ i ].y;\n\t\n\t\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Duplicate point', key, i );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tallPointsMap[ key ] = i;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\t\n\t\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\t\n\t\t\t\t// check all face vertices against all points map\n\t\n\t\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tface = triangles[ i ];\n\t\n\t\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\t\n\t\t\t\t\t\tkey = face[ f ].x + ':' + face[ f ].y;\n\t\n\t\t\t\t\t\tindex = allPointsMap[ key ];\n\t\n\t\t\t\t\t\tif ( index !== undefined ) {\n\t\n\t\t\t\t\t\t\tface[ f ] = index;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn triangles.concat();\n\t\n\t\t\t},\n\t\n\t\t\tisClockWise: function ( pts ) {\n\t\n\t\t\t\treturn ShapeUtils.area( pts ) < 0;\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t * Creates extruded geometry from a path shape.\n\t\t *\n\t\t * parameters = {\n\t\t *\n\t\t *  curveSegments: <int>, // number of points on the curves\n\t\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t\t *  amount: <int>, // Depth to extrude the shape\n\t\t *\n\t\t *  bevelEnabled: <bool>, // turn on bevel\n\t\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t\t *  bevelSegments: <int>, // number of bevel layers\n\t\t *\n\t\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t\t *\n\t\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t\t *\n\t\t * }\n\t\t */\n\t\n\t\t// ExtrudeGeometry\n\t\n\t\tfunction ExtrudeGeometry( shapes, options ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\t\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\t\n\t\t// ExtrudeBufferGeometry\n\t\n\t\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\t\n\t\t\tif ( typeof ( shapes ) === \"undefined\" ) {\n\t\n\t\t\t\treturn;\n\t\n\t\t\t}\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'ExtrudeBufferGeometry';\n\t\n\t\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\t\n\t\t\tthis.addShapeList( shapes, options );\n\t\n\t\t\tthis.computeVertexNormals();\n\t\n\t\t\t// can't really use automatic vertex normals\n\t\t\t// as then front and back sides get smoothed too\n\t\t\t// should do separate smoothing just for sides\n\t\n\t\t\t//this.computeVertexNormals();\n\t\n\t\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\t\n\t\t}\n\t\n\t\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\t\n\t\tExtrudeBufferGeometry.prototype.getArrays = function () {\n\t\n\t\t\tvar positionAttribute = this.getAttribute( \"position\" );\n\t\t\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\t\n\t\t\tvar uvAttribute = this.getAttribute( \"uv\" );\n\t\t\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\t\n\t\t\tvar IndexAttribute = this.index;\n\t\t\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\t\n\t\t\treturn {\n\t\t\t\tposition: verticesArray,\n\t\t\t\tuv: uvArray,\n\t\t\t\tindex: indicesArray\n\t\t\t};\n\t\n\t\t};\n\t\n\t\tExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\t\n\t\t\tvar sl = shapes.length;\n\t\t\toptions.arrays = this.getArrays();\n\t\n\t\t\tfor ( var s = 0; s < sl; s ++ ) {\n\t\n\t\t\t\tvar shape = shapes[ s ];\n\t\t\t\tthis.addShape( shape, options );\n\t\n\t\t\t}\n\t\n\t\t\tthis.setIndex( options.arrays.index );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\t\n\t\t};\n\t\n\t\tExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\t\n\t\t\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\t\t\tvar verticesArray = arrays.position;\n\t\t\tvar indicesArray = arrays.index;\n\t\t\tvar uvArray = arrays.uv;\n\t\n\t\t\tvar placeholder = [];\n\t\n\t\n\t\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\t\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\t\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\n\t\t\tvar extrudePath = options.extrudePath;\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\n\t\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\t\n\t\t\tvar splineTube, binormal, normal, position2;\n\t\t\tif ( extrudePath ) {\n\t\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\t\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\n\t\t\t\t// SETUP TNB variables\n\t\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\t\n\t\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\t\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\t\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\t\n\t\t\t}\n\t\n\t\t\t// Safeguards if bevels are not enabled\n\t\n\t\t\tif ( ! bevelEnabled ) {\n\t\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\n\t\t\t}\n\t\n\t\t\t// Variables initialization\n\t\n\t\t\tvar ahole, h, hl; // looping of holes\n\t\t\tvar scope = this;\n\t\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\t\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\t\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\t\n\t\t\tif ( reverse ) {\n\t\n\t\t\t\tvertices = vertices.reverse();\n\t\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\t\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\t\tahole = holes[ h ];\n\t\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\t\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\t\n\t\t\t/* Vertices */\n\t\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\t\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\tahole = holes[ h ];\n\t\n\t\t\t\tvertices = vertices.concat( ahole );\n\t\n\t\t\t}\n\t\n\t\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\t\n\t\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\t\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\t\n\t\t\t}\n\t\n\t\t\tvar b, bs, t, z,\n\t\t\t\tvert, vlen = vertices.length,\n\t\t\t\tface, flen = faces.length;\n\t\n\t\n\t\t\t// Find directions for point movement\n\t\n\t\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\t\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\t\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\t\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\t\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\t\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\t\n\t\t\t\t\t// not collinear\n\t\n\t\t\t\t\t// length of vectors for normalizing\n\t\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\t\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\t\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\t\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\t\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\t\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\t\n\t\t\t\t\t// vector from inPt to intersection point\n\t\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\t\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\t\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// handle special case of collinear edges\n\t\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\t\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\t\n\t\t\t\t\t\t\tdirection_eq = true;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\t\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\t\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\t\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( direction_eq ) {\n\t\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\t\n\t\t\t}\n\t\n\t\n\t\t\tvar contourMovements = [];\n\t\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\t\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\t\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\t\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\t\n\t\t\t}\n\t\n\t\t\tvar holesMovements = [],\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\t\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\tahole = holes[ h ];\n\t\n\t\t\t\toneHoleMovements = [];\n\t\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\t\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\t\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\t\n\t\t\t}\n\t\n\t\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\t\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\t\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\t\n\t\t\t\t// contract shape\n\t\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// expand holes\n\t\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\t\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\t\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tbs = bevelSize;\n\t\n\t\t\t// Back facing vertices\n\t\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\t\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\t\n\t\t\t\tif ( ! extrudeByPath ) {\n\t\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\t\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\t\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\t\n\t\t\tvar s;\n\t\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\n\t\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\t\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\t\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\t\n\t\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\t\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\t\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\n\t\t\t// Add bevel segments planes\n\t\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\t\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\t\n\t\t\t\t// contract shape\n\t\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// expand holes\n\t\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\t\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\t\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\t\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\t\n\t\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t/* Faces */\n\t\n\t\t\t// Top and bottom faces\n\t\n\t\t\tbuildLidFaces();\n\t\n\t\t\t// Sides faces\n\t\n\t\t\tbuildSideFaces();\n\t\n\t\n\t\t\t/////  Internal functions\n\t\n\t\t\tfunction buildLidFaces() {\n\t\n\t\t\t\tvar start = verticesArray.length/3;\n\t\n\t\t\t\tif ( bevelEnabled ) {\n\t\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\t\n\t\t\t\t\t// Bottom faces\n\t\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\t\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\t\n\t\t\t\t\t// Top faces\n\t\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\t\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Bottom faces\n\t\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\t\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Top faces\n\t\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\t\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\t\n\t\t\t}\n\t\n\t\t\t// Create faces for the z-sides of the shape\n\t\n\t\t\tfunction buildSideFaces() {\n\t\n\t\t\t\tvar start = verticesArray.length/3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\t\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\t\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\t\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\t\n\t\t\t\t}\n\t\n\t\n\t\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\t\n\t\n\t\t\t}\n\t\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\t\n\t\t\t\tvar j, k;\n\t\t\t\ti = contour.length;\n\t\n\t\t\t\twhile ( -- i >= 0 ) {\n\t\n\t\t\t\t\tj = i;\n\t\t\t\t\tk = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\t\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\t\n\t\t\t\t\tvar s = 0,\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\n\t\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\t\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\t\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\n\t\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction v( x, y, z ) {\n\t\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\t\n\t\t\t}\n\t\n\t\n\t\t\tfunction f3( a, b, c ) {\n\t\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\t\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\n\t\t\t}\n\t\n\t\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\t\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\t\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\t\n\t\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\t\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\t\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\t\n\t\t\t}\n\t\n\t\t\tfunction addVertex( index ) {\n\t\n\t\t\t\tindicesArray.push( verticesArray.length / 3 );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\t\n\t\t\t}\n\t\n\t\n\t\t\tfunction addUV( vector2 ) {\n\t\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\t\n\t\t\t}\n\t\n\t\t\tif ( ! options.arrays ) {\n\t\n\t\t\t\tthis.setIndex( indicesArray );\n\t\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tExtrudeGeometry.WorldUVGenerator = {\n\t\n\t\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\t\n\t\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t\t];\n\t\n\t\t\t},\n\t\n\t\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\t\n\t\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\t\n\t\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\t\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t\t];\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t\t];\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * Text = 3D Text\n\t\t *\n\t\t * parameters = {\n\t\t *  font: <THREE.Font>, // font\n\t\t *\n\t\t *  size: <float>, // size of the text\n\t\t *  height: <float>, // thickness to extrude text\n\t\t *  curveSegments: <int>, // number of points on the curves\n\t\t *\n\t\t *  bevelEnabled: <bool>, // turn on bevel\n\t\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t\t *  bevelSize: <float> // how far from text outline is bevel\n\t\t * }\n\t\t */\n\t\n\t\t// TextGeometry\n\t\n\t\tfunction TextGeometry(  text, parameters ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'TextGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\ttext: text,\n\t\t\t\tparameters: parameters\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\t\tTextGeometry.prototype.constructor = TextGeometry;\n\t\n\t\t// TextBufferGeometry\n\t\n\t\tfunction TextBufferGeometry( text, parameters ) {\n\t\n\t\t\tparameters = parameters || {};\n\t\n\t\t\tvar font = parameters.font;\n\t\n\t\t\tif ( ! ( font && font.isFont ) ) {\n\t\n\t\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\t\treturn new Geometry();\n\t\n\t\t\t}\n\t\n\t\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\t\n\t\t\t// translate parameters to ExtrudeGeometry API\n\t\n\t\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\t\n\t\t\t// defaults\n\t\n\t\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\t\n\t\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\t\n\t\t\tthis.type = 'TextBufferGeometry';\n\t\n\t\t}\n\t\n\t\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\t\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// SphereGeometry\n\t\n\t\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'SphereGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\t\tSphereGeometry.prototype.constructor = SphereGeometry;\n\t\n\t\t// SphereBufferGeometry\n\t\n\t\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'SphereBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tradius = radius || 50;\n\t\n\t\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\t\n\t\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\t\n\t\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\t\n\t\t\tvar thetaEnd = thetaStart + thetaLength;\n\t\n\t\t\tvar ix, iy;\n\t\n\t\t\tvar index = 0;\n\t\t\tvar grid = [];\n\t\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar normal = new Vector3();\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\t\n\t\t\t\tvar verticesRow = [];\n\t\n\t\t\t\tvar v = iy / heightSegments;\n\t\n\t\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\t\n\t\t\t\t\tvar u = ix / widthSegments;\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuvs.push( u, 1 - v );\n\t\n\t\t\t\t\tverticesRow.push( index ++ );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tgrid.push( verticesRow );\n\t\n\t\t\t}\n\t\n\t\t\t// indices\n\t\n\t\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\t\n\t\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\t\n\t\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\t\n\t\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t}\n\t\n\t\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\t\n\t\t/**\n\t\t * @author Kaleb Murphy\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// RingGeometry\n\t\n\t\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'RingGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\t\tRingGeometry.prototype.constructor = RingGeometry;\n\t\n\t\t// RingBufferGeometry\n\t\n\t\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'RingBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tinnerRadius = innerRadius || 20;\n\t\t\touterRadius = outerRadius || 50;\n\t\n\t\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// some helper variables\n\t\n\t\t\tvar segment;\n\t\t\tvar radius = innerRadius;\n\t\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar uv = new Vector2();\n\t\t\tvar j, i;\n\t\n\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\t\n\t\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\t\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\n\t\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\tnormals.push( 0, 0, 1 );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// increase the radius for next row of vertices\n\t\n\t\t\t\tradius += radiusStep;\n\t\n\t\t\t}\n\t\n\t\t\t// indices\n\t\n\t\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\t\n\t\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\t\n\t\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\t\n\t\t\t\t\tsegment = i + thetaSegmentLevel;\n\t\n\t\t\t\t\tvar a = segment;\n\t\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\t\tvar d = segment + 1;\n\t\n\t\t\t\t\t// faces\n\t\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t}\n\t\n\t\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\t\n\t\t/**\n\t\t * @author astrodud / http://astrodud.isgreat.org/\n\t\t * @author zz85 / https://github.com/zz85\n\t\t * @author bhouston / http://clara.io\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// LatheGeometry\n\t\n\t\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'LatheGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\t\tLatheGeometry.prototype.constructor = LatheGeometry;\n\t\n\t\t// LatheBufferGeometry\n\t\n\t\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'LatheBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\n\t\t\tsegments = Math.floor( segments ) || 12;\n\t\t\tphiStart = phiStart || 0;\n\t\t\tphiLength = phiLength || Math.PI * 2;\n\t\n\t\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\t\n\t\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\t\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar base;\n\t\t\tvar inverseSegments = 1.0 / segments;\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar uv = new Vector2();\n\t\t\tvar i, j;\n\t\n\t\t\t// generate vertices and uvs\n\t\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\t\n\t\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\t\n\t\t\t\tvar sin = Math.sin( phi );\n\t\t\t\tvar cos = Math.cos( phi );\n\t\n\t\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\t\tvertex.z = points[ j ].x * cos;\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / ( points.length - 1 );\n\t\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\t\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// indices\n\t\n\t\t\tfor ( i = 0; i < segments; i ++ ) {\n\t\n\t\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\t\n\t\t\t\t\tbase = j + i * points.length;\n\t\n\t\t\t\t\tvar a = base;\n\t\t\t\t\tvar b = base + points.length;\n\t\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\t\tvar d = base + 1;\n\t\n\t\t\t\t\t// faces\n\t\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t\t// generate normals\n\t\n\t\t\tthis.computeVertexNormals();\n\t\n\t\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\t\n\t\t\tif ( phiLength === Math.PI * 2 ) {\n\t\n\t\t\t\tvar normals = this.attributes.normal.array;\n\t\t\t\tvar n1 = new Vector3();\n\t\t\t\tvar n2 = new Vector3();\n\t\t\t\tvar n = new Vector3();\n\t\n\t\t\t\t// this is the buffer offset for the last line of vertices\n\t\n\t\t\t\tbase = segments * points.length * 3;\n\t\n\t\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\t\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\n\t\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\t\tn1.z = normals[ j + 2 ];\n\t\n\t\t\t\t\t// select the normal of the vertex in the last line\n\t\n\t\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\t\tn2.z = normals[ base + j + 2 ];\n\t\n\t\t\t\t\t// average normals\n\t\n\t\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\t\n\t\t\t\t\t// assign the new values to both normals\n\t\n\t\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\t\n\t\t/**\n\t\t * @author jonobr1 / http://jonobr1.com\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// ShapeGeometry\n\t\n\t\tfunction ShapeGeometry( shapes, curveSegments ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'ShapeGeometry';\n\t\n\t\t\tif ( typeof curveSegments === 'object' ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\t\n\t\t\t\tcurveSegments = curveSegments.curveSegments;\n\t\n\t\t\t}\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\t\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\t\n\t\t// ShapeBufferGeometry\n\t\n\t\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'ShapeBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t};\n\t\n\t\t\tcurveSegments = curveSegments || 12;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar groupStart = 0;\n\t\t\tvar groupCount = 0;\n\t\n\t\t\t// allow single and array values for \"shapes\" parameter\n\t\n\t\t\tif ( Array.isArray( shapes ) === false ) {\n\t\n\t\t\t\taddShape( shapes );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\t\n\t\t\t\t\taddShape( shapes[ i ] );\n\t\n\t\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\t\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\n\t\t\t// helper functions\n\t\n\t\t\tfunction addShape( shape ) {\n\t\n\t\t\t\tvar i, l, shapeHole;\n\t\n\t\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\t\tvar points = shape.extractPoints( curveSegments );\n\t\n\t\t\t\tvar shapeVertices = points.shape;\n\t\t\t\tvar shapeHoles = points.holes;\n\t\n\t\t\t\t// check direction of vertices\n\t\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\t\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\n\t\t\t\t\t// also check if holes are in the opposite direction\n\t\n\t\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\n\t\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\t\n\t\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\t\n\t\t\t\t// join vertices of inner and outer paths to a single array\n\t\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// vertices, normals, uvs\n\t\n\t\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar vertex = shapeVertices[ i ];\n\t\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// incides\n\t\n\t\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\t\n\t\t\t\t\tindices.push( a, b, c );\n\t\t\t\t\tgroupCount += 3;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'EdgesGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\t\n\t\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\t\n\t\t\t// buffer\n\t\n\t\t\tvar vertices = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\n\t\t\t// prepare source geometry\n\t\n\t\t\tvar geometry2;\n\t\n\t\t\tif ( geometry.isBufferGeometry ) {\n\t\n\t\t\t\tgeometry2 = new Geometry();\n\t\t\t\tgeometry2.fromBufferGeometry( geometry );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tgeometry2 = geometry.clone();\n\t\n\t\t\t}\n\t\n\t\t\tgeometry2.mergeVertices();\n\t\t\tgeometry2.computeFaceNormals();\n\t\n\t\t\tvar sourceVertices = geometry2.vertices;\n\t\t\tvar faces = geometry2.faces;\n\t\n\t\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\t\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\t\n\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\t\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\t\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\t\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\t\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tedges[ key ].face2 = i;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// generate vertices\n\t\n\t\t\tfor ( key in edges ) {\n\t\n\t\t\t\tvar e = edges[ key ];\n\t\n\t\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\t\n\t\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\t\n\t\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\n\t\t}\n\t\n\t\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\t// CylinderGeometry\n\t\n\t\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'CylinderGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\t\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\t\n\t\t// CylinderBufferGeometry\n\t\n\t\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'CylinderBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\t\theight = height !== undefined ? height : 100;\n\t\n\t\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\n\t\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar index = 0;\n\t\t\tvar indexArray = [];\n\t\t\tvar halfHeight = height / 2;\n\t\t\tvar groupStart = 0;\n\t\n\t\t\t// generate geometry\n\t\n\t\t\tgenerateTorso();\n\t\n\t\t\tif ( openEnded === false ) {\n\t\n\t\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t\tfunction generateTorso() {\n\t\n\t\t\t\tvar x, y;\n\t\t\t\tvar normal = new Vector3();\n\t\t\t\tvar vertex = new Vector3();\n\t\n\t\t\t\tvar groupCount = 0;\n\t\n\t\t\t\t// this will be used to calculate the normal\n\t\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\t\n\t\t\t\t// generate vertices, normals and uvs\n\t\n\t\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\t\n\t\t\t\t\tvar indexRow = [];\n\t\n\t\t\t\t\tvar v = y / heightSegments;\n\t\n\t\t\t\t\t// calculate the radius of the current row\n\t\n\t\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\t\n\t\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\t\n\t\t\t\t\t\tvar u = x / radialSegments;\n\t\n\t\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\t\n\t\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\n\t\t\t\t\t\t// vertex\n\t\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t\t// normal\n\t\n\t\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\n\t\t\t\t\t\t// uv\n\t\n\t\t\t\t\t\tuvs.push( u, 1 - v );\n\t\n\t\t\t\t\t\t// save index of vertex in respective row\n\t\n\t\t\t\t\t\tindexRow.push( index ++ );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// now save vertices of the row in our index array\n\t\n\t\t\t\t\tindexArray.push( indexRow );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// generate indices\n\t\n\t\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\t\n\t\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\t\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\n\t\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\t\n\t\t\t\t\t\t// faces\n\t\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\n\t\t\t\t\t\t// update group counter\n\t\n\t\t\t\t\t\tgroupCount += 6;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\n\t\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\t\n\t\t\t\t// calculate new start value for groups\n\t\n\t\t\t\tgroupStart += groupCount;\n\t\n\t\t\t}\n\t\n\t\t\tfunction generateCap( top ) {\n\t\n\t\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\t\n\t\t\t\tvar uv = new Vector2();\n\t\t\t\tvar vertex = new Vector3();\n\t\n\t\t\t\tvar groupCount = 0;\n\t\n\t\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\t\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tcenterIndexStart = index;\n\t\n\t\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\t\n\t\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\tnormals.push( 0, sign, 0 );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuvs.push( 0.5, 0.5 );\n\t\n\t\t\t\t\t// increase index\n\t\n\t\t\t\t\tindex ++;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// save the index of the last center vertex\n\t\n\t\t\t\tcenterIndexEnd = index;\n\t\n\t\t\t\t// now we generate the surrounding vertices, normals and uvs\n\t\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\t\n\t\t\t\t\tvar u = x / radialSegments;\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\t\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\n\t\t\t\t\t// vertex\n\t\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t\t// normal\n\t\n\t\t\t\t\tnormals.push( 0, sign, 0 );\n\t\n\t\t\t\t\t// uv\n\t\n\t\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\t\n\t\t\t\t\t// increase index\n\t\n\t\t\t\t\tindex ++;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// generate indices\n\t\n\t\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\t\n\t\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\t\tvar i = centerIndexEnd + x;\n\t\n\t\t\t\t\tif ( top === true ) {\n\t\n\t\t\t\t\t\t// face top\n\t\n\t\t\t\t\t\tindices.push( i, i + 1, c );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// face bottom\n\t\n\t\t\t\t\t\tindices.push( i + 1, i, c );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgroupCount += 3;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\n\t\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\t\n\t\t\t\t// calculate new start value for groups\n\t\n\t\t\t\tgroupStart += groupCount;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\t\n\t\t/**\n\t\t * @author abelnation / http://github.com/abelnation\n\t\t */\n\t\n\t\t// ConeGeometry\n\t\n\t\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\t\n\t\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\t\n\t\t\tthis.type = 'ConeGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\t\tConeGeometry.prototype.constructor = ConeGeometry;\n\t\n\t\t// ConeBufferGeometry\n\t\n\t\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\t\n\t\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\t\n\t\t\tthis.type = 'ConeBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\t\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\t\n\t\t/**\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t * @author hughes\n\t\t */\n\t\n\t\t// CircleGeometry\n\t\n\t\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\t\n\t\t\tGeometry.call( this );\n\t\n\t\t\tthis.type = 'CircleGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\t\tthis.mergeVertices();\n\t\n\t\t}\n\t\n\t\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\t\tCircleGeometry.prototype.constructor = CircleGeometry;\n\t\n\t\t// CircleBufferGeometry\n\t\n\t\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'CircleBufferGeometry';\n\t\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\n\t\t\tradius = radius || 50;\n\t\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\t\n\t\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\t\n\t\t\t// buffers\n\t\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\t// helper variables\n\t\n\t\t\tvar i, s;\n\t\t\tvar vertex = new Vector3();\n\t\t\tvar uv = new Vector2();\n\t\n\t\t\t// center point\n\t\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( 0.5, 0.5 );\n\t\n\t\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\t\n\t\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\t\n\t\t\t\t// vertex\n\t\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\t\n\t\t\t\t// normal\n\t\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\n\t\t\t\t// uvs\n\t\n\t\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\t\n\t\t\t\tuvs.push( uv.x, uv.y );\n\t\n\t\t\t}\n\t\n\t\t\t// indices\n\t\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\t\tindices.push( i, i + 1, 0 );\n\t\n\t\t\t}\n\t\n\t\t\t// build geometry\n\t\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\n\t\t}\n\t\n\t\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\t\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\t\n\t\n\t\n\t\tvar Geometries = Object.freeze({\n\t\t\tWireframeGeometry: WireframeGeometry,\n\t\t\tParametricGeometry: ParametricGeometry,\n\t\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\t\tOctahedronGeometry: OctahedronGeometry,\n\t\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\t\tTubeGeometry: TubeGeometry,\n\t\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\t\tTorusGeometry: TorusGeometry,\n\t\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\t\tTextGeometry: TextGeometry,\n\t\t\tTextBufferGeometry: TextBufferGeometry,\n\t\t\tSphereGeometry: SphereGeometry,\n\t\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\t\tRingGeometry: RingGeometry,\n\t\t\tRingBufferGeometry: RingBufferGeometry,\n\t\t\tPlaneGeometry: PlaneGeometry,\n\t\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\t\tLatheGeometry: LatheGeometry,\n\t\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\t\tShapeGeometry: ShapeGeometry,\n\t\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\t\tEdgesGeometry: EdgesGeometry,\n\t\t\tConeGeometry: ConeGeometry,\n\t\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\t\tCylinderGeometry: CylinderGeometry,\n\t\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\t\tCircleGeometry: CircleGeometry,\n\t\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\t\tBoxGeometry: BoxGeometry,\n\t\t\tBoxBufferGeometry: BoxBufferGeometry\n\t\t});\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <THREE.Color>,\n\t\t *  opacity: <float>\n\t\t * }\n\t\t */\n\t\n\t\tfunction ShadowMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'ShadowMaterial';\n\t\n\t\t\tthis.color = new Color( 0x000000 );\n\t\t\tthis.opacity = 1.0;\n\t\n\t\t\tthis.lights = true;\n\t\t\tthis.transparent = true;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tShadowMaterial.prototype = Object.create( Material.prototype );\n\t\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\t\n\t\tShadowMaterial.prototype.isShadowMaterial = true;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction RawShaderMaterial( parameters ) {\n\t\n\t\t\tShaderMaterial.call( this, parameters );\n\t\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\n\t\t}\n\t\n\t\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\t\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\t\n\t\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  roughness: <float>,\n\t\t *  metalness: <float>,\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  lightMap: new THREE.Texture( <Image> ),\n\t\t *  lightMapIntensity: <float>\n\t\t *\n\t\t *  aoMap: new THREE.Texture( <Image> ),\n\t\t *  aoMapIntensity: <float>\n\t\t *\n\t\t *  emissive: <hex>,\n\t\t *  emissiveIntensity: <float>\n\t\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  bumpMap: new THREE.Texture( <Image> ),\n\t\t *  bumpScale: <float>,\n\t\t *\n\t\t *  normalMap: new THREE.Texture( <Image> ),\n\t\t *  normalScale: <Vector2>,\n\t\t *\n\t\t *  displacementMap: new THREE.Texture( <Image> ),\n\t\t *  displacementScale: <float>,\n\t\t *  displacementBias: <float>,\n\t\t *\n\t\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  alphaMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t\t *  envMapIntensity: <float>\n\t\t *\n\t\t *  refractionRatio: <float>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>,\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>,\n\t\t *  morphNormals: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshStandardMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.defines = { 'STANDARD': '' };\n\t\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\t\tthis.roughness = 0.5;\n\t\t\tthis.metalness = 0.5;\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\t\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\n\t\t\tthis.roughnessMap = null;\n\t\n\t\t\tthis.metalnessMap = null;\n\t\n\t\t\tthis.alphaMap = null;\n\t\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\n\t\t\tthis.refractionRatio = 0.98;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\t\n\t\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\t\n\t\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.defines = { 'STANDARD': '' };\n\t\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\t\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t *\n\t\t * parameters = {\n\t\t *  reflectivity: <float>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshPhysicalMaterial( parameters ) {\n\t\n\t\t\tMeshStandardMaterial.call( this );\n\t\n\t\t\tthis.defines = { 'PHYSICAL': '' };\n\t\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\n\t\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\t\n\t\t\tthis.clearCoat = 0.0;\n\t\t\tthis.clearCoatRoughness = 0.0;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\t\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\t\n\t\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\t\n\t\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.defines = { 'PHYSICAL': '' };\n\t\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\n\t\t\tthis.clearCoat = source.clearCoat;\n\t\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  specular: <hex>,\n\t\t *  shininess: <float>,\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  lightMap: new THREE.Texture( <Image> ),\n\t\t *  lightMapIntensity: <float>\n\t\t *\n\t\t *  aoMap: new THREE.Texture( <Image> ),\n\t\t *  aoMapIntensity: <float>\n\t\t *\n\t\t *  emissive: <hex>,\n\t\t *  emissiveIntensity: <float>\n\t\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  bumpMap: new THREE.Texture( <Image> ),\n\t\t *  bumpScale: <float>,\n\t\t *\n\t\t *  normalMap: new THREE.Texture( <Image> ),\n\t\t *  normalScale: <Vector2>,\n\t\t *\n\t\t *  displacementMap: new THREE.Texture( <Image> ),\n\t\t *  displacementScale: <float>,\n\t\t *  displacementBias: <float>,\n\t\t *\n\t\t *  specularMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  alphaMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t\t *  combine: THREE.Multiply,\n\t\t *  reflectivity: <float>,\n\t\t *  refractionRatio: <float>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>,\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>,\n\t\t *  morphNormals: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshPhongMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\t\tthis.specular = new Color( 0x111111 );\n\t\t\tthis.shininess = 30;\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\t\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\n\t\t\tthis.specularMap = null;\n\t\n\t\t\tthis.alphaMap = null;\n\t\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\t\n\t\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\t\n\t\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.specular.copy( source.specular );\n\t\t\tthis.shininess = source.shininess;\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\t\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\n\t\t\tthis.specularMap = source.specularMap;\n\t\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author takahirox / http://github.com/takahirox\n\t\t *\n\t\t * parameters = {\n\t\t *  gradientMap: new THREE.Texture( <Image> )\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshToonMaterial( parameters ) {\n\t\n\t\t\tMeshPhongMaterial.call( this );\n\t\n\t\t\tthis.defines = { 'TOON': '' };\n\t\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\n\t\t\tthis.gradientMap = null;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\t\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\t\n\t\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\t\n\t\tMeshToonMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t *\n\t\t * parameters = {\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  bumpMap: new THREE.Texture( <Image> ),\n\t\t *  bumpScale: <float>,\n\t\t *\n\t\t *  normalMap: new THREE.Texture( <Image> ),\n\t\t *  normalScale: <Vector2>,\n\t\t *\n\t\t *  displacementMap: new THREE.Texture( <Image> ),\n\t\t *  displacementScale: <float>,\n\t\t *  displacementBias: <float>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>,\n\t\t *  morphNormals: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshNormalMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalScale = new Vector2( 1, 1 );\n\t\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\n\t\t\tthis.fog = false;\n\t\t\tthis.lights = false;\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\t\n\t\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\t\n\t\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalScale.copy( source.normalScale );\n\t\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  map: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  lightMap: new THREE.Texture( <Image> ),\n\t\t *  lightMapIntensity: <float>\n\t\t *\n\t\t *  aoMap: new THREE.Texture( <Image> ),\n\t\t *  aoMapIntensity: <float>\n\t\t *\n\t\t *  emissive: <hex>,\n\t\t *  emissiveIntensity: <float>\n\t\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  specularMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  alphaMap: new THREE.Texture( <Image> ),\n\t\t *\n\t\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t\t *  combine: THREE.Multiply,\n\t\t *  reflectivity: <float>,\n\t\t *  refractionRatio: <float>,\n\t\t *\n\t\t *  wireframe: <boolean>,\n\t\t *  wireframeLinewidth: <float>,\n\t\t *\n\t\t *  skinning: <bool>,\n\t\t *  morphTargets: <bool>,\n\t\t *  morphNormals: <bool>\n\t\t * }\n\t\t */\n\t\n\t\tfunction MeshLambertMaterial( parameters ) {\n\t\n\t\t\tMaterial.call( this );\n\t\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\n\t\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\n\t\t\tthis.map = null;\n\t\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\n\t\t\tthis.emissive = new Color( 0x000000 );\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\n\t\t\tthis.specularMap = null;\n\t\n\t\t\tthis.alphaMap = null;\n\t\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\n\t\t\tthis.skinning = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\t\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\t\n\t\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\t\n\t\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.color.copy( source.color );\n\t\n\t\t\tthis.map = source.map;\n\t\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\n\t\t\tthis.emissive.copy( source.emissive );\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\n\t\t\tthis.specularMap = source.specularMap;\n\t\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\n\t\t\tthis.skinning = source.skinning;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t *\n\t\t * parameters = {\n\t\t *  color: <hex>,\n\t\t *  opacity: <float>,\n\t\t *\n\t\t *  linewidth: <float>,\n\t\t *\n\t\t *  scale: <float>,\n\t\t *  dashSize: <float>,\n\t\t *  gapSize: <float>\n\t\t * }\n\t\t */\n\t\n\t\tfunction LineDashedMaterial( parameters ) {\n\t\n\t\t\tLineBasicMaterial.call( this );\n\t\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\n\t\t\tthis.setValues( parameters );\n\t\n\t\t}\n\t\n\t\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\t\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\t\n\t\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\t\n\t\tLineDashedMaterial.prototype.copy = function ( source ) {\n\t\n\t\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\t\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\n\t\n\t\tvar Materials = Object.freeze({\n\t\t\tShadowMaterial: ShadowMaterial,\n\t\t\tSpriteMaterial: SpriteMaterial,\n\t\t\tRawShaderMaterial: RawShaderMaterial,\n\t\t\tShaderMaterial: ShaderMaterial,\n\t\t\tPointsMaterial: PointsMaterial,\n\t\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\t\tMeshToonMaterial: MeshToonMaterial,\n\t\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\t\tLineDashedMaterial: LineDashedMaterial,\n\t\t\tLineBasicMaterial: LineBasicMaterial,\n\t\t\tMaterial: Material\n\t\t});\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tvar Cache = {\n\t\n\t\t\tenabled: false,\n\t\n\t\t\tfiles: {},\n\t\n\t\t\tadd: function ( key, file ) {\n\t\n\t\t\t\tif ( this.enabled === false ) return;\n\t\n\t\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\t\n\t\t\t\tthis.files[ key ] = file;\n\t\n\t\t\t},\n\t\n\t\t\tget: function ( key ) {\n\t\n\t\t\t\tif ( this.enabled === false ) return;\n\t\n\t\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\t\n\t\t\t\treturn this.files[ key ];\n\t\n\t\t\t},\n\t\n\t\t\tremove: function ( key ) {\n\t\n\t\t\t\tdelete this.files[ key ];\n\t\n\t\t\t},\n\t\n\t\t\tclear: function () {\n\t\n\t\t\t\tthis.files = {};\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\t\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\t\n\t\t\tthis.itemStart = function ( url ) {\n\t\n\t\t\t\titemsTotal ++;\n\t\n\t\t\t\tif ( isLoading === false ) {\n\t\n\t\t\t\t\tif ( scope.onStart !== undefined ) {\n\t\n\t\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tisLoading = true;\n\t\n\t\t\t};\n\t\n\t\t\tthis.itemEnd = function ( url ) {\n\t\n\t\t\t\titemsLoaded ++;\n\t\n\t\t\t\tif ( scope.onProgress !== undefined ) {\n\t\n\t\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( itemsLoaded === itemsTotal ) {\n\t\n\t\t\t\t\tisLoading = false;\n\t\n\t\t\t\t\tif ( scope.onLoad !== undefined ) {\n\t\n\t\t\t\t\t\tscope.onLoad();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.itemError = function ( url ) {\n\t\n\t\t\t\tif ( scope.onError !== undefined ) {\n\t\n\t\t\t\t\tscope.onError( url );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tvar DefaultLoadingManager = new LoadingManager();\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction FileLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( FileLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tif ( url === undefined ) url = '';\n\t\n\t\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar cached = Cache.get( url );\n\t\n\t\t\t\tif ( cached !== undefined ) {\n\t\n\t\t\t\t\tscope.manager.itemStart( url );\n\t\n\t\t\t\t\tsetTimeout( function () {\n\t\n\t\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\t\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t\t}, 0 );\n\t\n\t\t\t\t\treturn cached;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Check for data: URI\n\t\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\t\n\t\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\t\tif ( dataUriRegexResult ) {\n\t\n\t\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\t\n\t\t\t\t\tdata = window.decodeURIComponent( data );\n\t\n\t\t\t\t\tif ( isBase64 ) data = window.atob( data );\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\tvar response;\n\t\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\t\n\t\t\t\t\t\tswitch ( responseType ) {\n\t\n\t\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\t\tcase 'blob':\n\t\n\t\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\t\n\t\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\t\n\t\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'document':\n\t\n\t\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'json':\n\t\n\t\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tdefault: // 'text' or other\n\t\n\t\t\t\t\t\t\t\tresponse = data;\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\t\twindow.setTimeout( function () {\n\t\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\t\n\t\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t\t\t}, 0 );\n\t\n\t\t\t\t\t} catch ( error ) {\n\t\n\t\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\t\twindow.setTimeout( function () {\n\t\n\t\t\t\t\t\t\tif ( onError ) onError( error );\n\t\n\t\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\t\tscope.manager.itemError( url );\n\t\n\t\t\t\t\t\t}, 0 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\t\trequest.open( 'GET', url, true );\n\t\n\t\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\t\n\t\t\t\t\t\tvar response = event.target.response;\n\t\n\t\t\t\t\t\tCache.add( url, response );\n\t\n\t\t\t\t\t\tif ( this.status === 200 ) {\n\t\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\t\n\t\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t\t\t} else if ( this.status === 0 ) {\n\t\n\t\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\t\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\t\n\t\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( onError ) onError( event );\n\t\n\t\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\t\tscope.manager.itemError( url );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}, false );\n\t\n\t\t\t\t\tif ( onProgress !== undefined ) {\n\t\n\t\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\t\n\t\t\t\t\t\t\tonProgress( event );\n\t\n\t\t\t\t\t\t}, false );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\t\n\t\t\t\t\t\tif ( onError ) onError( event );\n\t\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\n\t\t\t\t\t}, false );\n\t\n\t\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\t\n\t\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\t\n\t\t\t\t\tfor ( var header in this.requestHeader ) {\n\t\n\t\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\trequest.send( null );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.manager.itemStart( url );\n\t\n\t\t\t\treturn request;\n\t\n\t\t\t},\n\t\n\t\t\tsetPath: function ( value ) {\n\t\n\t\t\t\tthis.path = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetResponseType: function ( value ) {\n\t\n\t\t\t\tthis.responseType = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetWithCredentials: function ( value ) {\n\t\n\t\t\t\tthis.withCredentials = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetMimeType: function ( value ) {\n\t\n\t\t\t\tthis.mimeType = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetRequestHeader: function ( value ) {\n\t\n\t\t\t\tthis.requestHeader = value;\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t *\n\t\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t\t */\n\t\n\t\tfunction CompressedTextureLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t\t// override in sub classes\n\t\t\tthis._parser = null;\n\t\n\t\t}\n\t\n\t\tObject.assign( CompressedTextureLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar images = [];\n\t\n\t\t\t\tvar texture = new CompressedTexture();\n\t\t\t\ttexture.image = images;\n\t\n\t\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\n\t\t\t\tfunction loadTexture( i ) {\n\t\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\t\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\t\n\t\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tloaded += 1;\n\t\n\t\t\t\t\t\tif ( loaded === 6 ) {\n\t\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( Array.isArray( url ) ) {\n\t\n\t\t\t\t\tvar loaded = 0;\n\t\n\t\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\t\n\t\t\t\t\t\tloadTexture( i );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\n\t\t\t\t\tloader.load( url, function ( buffer ) {\n\t\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\t\n\t\t\t\t\t\tif ( texDatas.isCubemap ) {\n\t\n\t\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\t\n\t\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\t\n\t\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\t\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\t\n\t\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t},\n\t\n\t\t\tsetPath: function ( value ) {\n\t\n\t\t\t\tthis.path = value;\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author Nikos M. / https://github.com/foo123/\n\t\t *\n\t\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t\t */\n\t\n\t\tfunction DataTextureLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t\t// override in sub classes\n\t\t\tthis._parser = null;\n\t\n\t\t}\n\t\n\t\tObject.assign( DataTextureLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar texture = new DataTexture();\n\t\n\t\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\n\t\t\t\tloader.load( url, function ( buffer ) {\n\t\n\t\t\t\t\tvar texData = scope._parser( buffer );\n\t\n\t\t\t\t\tif ( ! texData ) return;\n\t\n\t\t\t\t\tif ( undefined !== texData.image ) {\n\t\n\t\t\t\t\t\ttexture.image = texData.image;\n\t\n\t\t\t\t\t} else if ( undefined !== texData.data ) {\n\t\n\t\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\t\ttexture.image.data = texData.data;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\t\n\t\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\t\n\t\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\t\n\t\t\t\t\tif ( undefined !== texData.format ) {\n\t\n\t\t\t\t\t\ttexture.format = texData.format;\n\t\n\t\t\t\t\t}\n\t\t\t\t\tif ( undefined !== texData.type ) {\n\t\n\t\t\t\t\t\ttexture.type = texData.type;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\t\n\t\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\t\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction ImageLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( ImageLoader.prototype, {\n\t\n\t\t\tcrossOrigin: 'Anonymous',\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tif ( url === undefined ) url = '';\n\t\n\t\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar cached = Cache.get( url );\n\t\n\t\t\t\tif ( cached !== undefined ) {\n\t\n\t\t\t\t\tscope.manager.itemStart( url );\n\t\n\t\t\t\t\tsetTimeout( function () {\n\t\n\t\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\t\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t\t}, 0 );\n\t\n\t\t\t\t\treturn cached;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\t\n\t\t\t\timage.addEventListener( 'load', function () {\n\t\n\t\t\t\t\tCache.add( url, this );\n\t\n\t\t\t\t\tif ( onLoad ) onLoad( this );\n\t\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t}, false );\n\t\n\t\t\t\t/*\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\n\t\n\t\t\t\t\tif ( onProgress ) onProgress( event );\n\t\n\t\t\t\t}, false );\n\t\t\t\t*/\n\t\n\t\t\t\timage.addEventListener( 'error', function ( event ) {\n\t\n\t\t\t\t\tif ( onError ) onError( event );\n\t\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\t\n\t\t\t\t}, false );\n\t\n\t\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\t\n\t\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.manager.itemStart( url );\n\t\n\t\t\t\timage.src = url;\n\t\n\t\t\t\treturn image;\n\t\n\t\t\t},\n\t\n\t\t\tsetCrossOrigin: function ( value ) {\n\t\n\t\t\t\tthis.crossOrigin = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetPath: function ( value ) {\n\t\n\t\t\t\tthis.path = value;\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction CubeTextureLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( CubeTextureLoader.prototype, {\n\t\n\t\t\tcrossOrigin: 'Anonymous',\n\t\n\t\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar texture = new CubeTexture();\n\t\n\t\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\t\tloader.setPath( this.path );\n\t\n\t\t\t\tvar loaded = 0;\n\t\n\t\t\t\tfunction loadTexture( i ) {\n\t\n\t\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\t\n\t\t\t\t\t\ttexture.images[ i ] = image;\n\t\n\t\t\t\t\t\tloaded ++;\n\t\n\t\t\t\t\t\tif ( loaded === 6 ) {\n\t\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}, undefined, onError );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\t\n\t\t\t\t\tloadTexture( i );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t},\n\t\n\t\t\tsetCrossOrigin: function ( value ) {\n\t\n\t\t\t\tthis.crossOrigin = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetPath: function ( value ) {\n\t\n\t\t\t\tthis.path = value;\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction TextureLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( TextureLoader.prototype, {\n\t\n\t\t\tcrossOrigin: 'Anonymous',\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\t\tloader.setPath( this.path );\n\t\n\t\t\t\tvar texture = new Texture();\n\t\t\t\ttexture.image = loader.load( url, function () {\n\t\n\t\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\t\n\t\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\tif ( onLoad !== undefined ) {\n\t\n\t\t\t\t\t\tonLoad( texture );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t},\n\t\n\t\t\tsetCrossOrigin: function ( value ) {\n\t\n\t\t\t\tthis.crossOrigin = value;\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetPath: function ( value ) {\n\t\n\t\t\t\tthis.path = value;\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Light( color, intensity ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Light';\n\t\n\t\t\tthis.color = new Color( color );\n\t\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\t\n\t\t\tthis.receiveShadow = undefined;\n\t\n\t\t}\n\t\n\t\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Light,\n\t\n\t\t\tisLight: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tObject3D.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.color.copy( source.color );\n\t\t\t\tthis.intensity = source.intensity;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\t\n\t\t\t\tdata.object.color = this.color.getHex();\n\t\t\t\tdata.object.intensity = this.intensity;\n\t\n\t\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\t\n\t\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\t\n\t\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\t\n\t\t\tLight.call( this, skyColor, intensity );\n\t\n\t\t\tthis.type = 'HemisphereLight';\n\t\n\t\t\tthis.castShadow = undefined;\n\t\n\t\t\tthis.position.copy( Object3D.DefaultUp );\n\t\t\tthis.updateMatrix();\n\t\n\t\t\tthis.groundColor = new Color( groundColor );\n\t\n\t\t}\n\t\n\t\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\t\n\t\t\tconstructor: HemisphereLight,\n\t\n\t\t\tisHemisphereLight: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tLight.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.groundColor.copy( source.groundColor );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction LightShadow( camera ) {\n\t\n\t\t\tthis.camera = camera;\n\t\n\t\t\tthis.bias = 0;\n\t\t\tthis.radius = 1;\n\t\n\t\t\tthis.mapSize = new Vector2( 512, 512 );\n\t\n\t\t\tthis.map = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\n\t\t}\n\t\n\t\tObject.assign( LightShadow.prototype, {\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.camera = source.camera.clone();\n\t\n\t\t\t\tthis.bias = source.bias;\n\t\t\t\tthis.radius = source.radius;\n\t\n\t\t\t\tthis.mapSize.copy( source.mapSize );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function () {\n\t\n\t\t\t\tvar object = {};\n\t\n\t\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\t\n\t\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\t\tdelete object.camera.matrix;\n\t\n\t\t\t\treturn object;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction SpotLightShadow() {\n\t\n\t\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\t\n\t\t}\n\t\n\t\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\t\n\t\t\tconstructor: SpotLightShadow,\n\t\n\t\t\tisSpotLightShadow: true,\n\t\n\t\t\tupdate: function ( light ) {\n\t\n\t\t\t\tvar camera = this.camera;\n\t\n\t\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\t\tvar far = light.distance || camera.far;\n\t\n\t\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\t\n\t\t\t\t\tcamera.fov = fov;\n\t\t\t\t\tcamera.aspect = aspect;\n\t\t\t\t\tcamera.far = far;\n\t\t\t\t\tcamera.updateProjectionMatrix();\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\t\n\t\t\tLight.call( this, color, intensity );\n\t\n\t\t\tthis.type = 'SpotLight';\n\t\n\t\t\tthis.position.copy( Object3D.DefaultUp );\n\t\t\tthis.updateMatrix();\n\t\n\t\t\tthis.target = new Object3D();\n\t\n\t\t\tObject.defineProperty( this, 'power', {\n\t\t\t\tget: function () {\n\t\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t\t},\n\t\t\t\tset: function ( power ) {\n\t\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\t\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\n\t\t}\n\t\n\t\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\t\n\t\t\tconstructor: SpotLight,\n\t\n\t\t\tisSpotLight: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tLight.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.distance = source.distance;\n\t\t\t\tthis.angle = source.angle;\n\t\t\t\tthis.penumbra = source.penumbra;\n\t\t\t\tthis.decay = source.decay;\n\t\n\t\t\t\tthis.target = source.target.clone();\n\t\n\t\t\t\tthis.shadow = source.shadow.clone();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\n\t\tfunction PointLight( color, intensity, distance, decay ) {\n\t\n\t\t\tLight.call( this, color, intensity );\n\t\n\t\t\tthis.type = 'PointLight';\n\t\n\t\t\tObject.defineProperty( this, 'power', {\n\t\t\t\tget: function () {\n\t\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\t\treturn this.intensity * 4 * Math.PI;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( power ) {\n\t\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\t\n\t\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\t\n\t\t}\n\t\n\t\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\t\n\t\t\tconstructor: PointLight,\n\t\n\t\t\tisPointLight: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tLight.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.distance = source.distance;\n\t\t\t\tthis.decay = source.decay;\n\t\n\t\t\t\tthis.shadow = source.shadow.clone();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction DirectionalLightShadow( ) {\n\t\n\t\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\t\n\t\t}\n\t\n\t\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\t\n\t\t\tconstructor: DirectionalLightShadow\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction DirectionalLight( color, intensity ) {\n\t\n\t\t\tLight.call( this, color, intensity );\n\t\n\t\t\tthis.type = 'DirectionalLight';\n\t\n\t\t\tthis.position.copy( Object3D.DefaultUp );\n\t\t\tthis.updateMatrix();\n\t\n\t\t\tthis.target = new Object3D();\n\t\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\n\t\t}\n\t\n\t\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\t\n\t\t\tconstructor: DirectionalLight,\n\t\n\t\t\tisDirectionalLight: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tLight.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.target = source.target.clone();\n\t\n\t\t\t\tthis.shadow = source.shadow.clone();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction AmbientLight( color, intensity ) {\n\t\n\t\t\tLight.call( this, color, intensity );\n\t\n\t\t\tthis.type = 'AmbientLight';\n\t\n\t\t\tthis.castShadow = undefined;\n\t\n\t\t}\n\t\n\t\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\t\n\t\t\tconstructor: AmbientLight,\n\t\n\t\t\tisAmbientLight: true\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author abelnation / http://github.com/abelnation\n\t\t */\n\t\n\t\tfunction RectAreaLight( color, intensity, width, height ) {\n\t\n\t\t\tLight.call( this, color, intensity );\n\t\n\t\t\tthis.type = 'RectAreaLight';\n\t\n\t\t\tthis.position.set( 0, 1, 0 );\n\t\t\tthis.updateMatrix();\n\t\n\t\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\t\tthis.height = ( height !== undefined ) ? height : 10;\n\t\n\t\t\t// TODO (abelnation): distance/decay\n\t\n\t\t\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\t\n\t\t\t// TODO (abelnation): shadows\n\t\n\t\t}\n\t\n\t\t// TODO (abelnation): RectAreaLight update when light shape is changed\n\t\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\t\n\t\t\tconstructor: RectAreaLight,\n\t\n\t\t\tisRectAreaLight: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tLight.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.width = source.width;\n\t\t\t\tthis.height = source.height;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( meta ) {\n\t\n\t\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\t\n\t\t\t\tdata.object.width = this.width;\n\t\t\t\tdata.object.height = this.height;\n\t\n\t\t\t\treturn data;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author tschw\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t */\n\t\n\t\tvar AnimationUtils = {\n\t\n\t\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\t\tarraySlice: function ( array, from, to ) {\n\t\n\t\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\t\n\t\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn array.slice( from, to );\n\t\n\t\t\t},\n\t\n\t\t\t// converts an array to a specific type\n\t\t\tconvertArray: function ( array, type, forceClone ) {\n\t\n\t\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\t\n\t\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\t\n\t\t\t\t\treturn new type( array ); // create typed array\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\t\n\t\t\t},\n\t\n\t\t\tisTypedArray: function ( object ) {\n\t\n\t\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t\t! ( object instanceof DataView );\n\t\n\t\t\t},\n\t\n\t\t\t// returns an array by which times and values can be sorted\n\t\t\tgetKeyframeOrder: function ( times ) {\n\t\n\t\t\t\tfunction compareTime( i, j ) {\n\t\n\t\t\t\t\treturn times[ i ] - times[ j ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar n = times.length;\n\t\t\t\tvar result = new Array( n );\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\t\n\t\t\t\tresult.sort( compareTime );\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t},\n\t\n\t\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\t\tsortedArray: function ( values, stride, order ) {\n\t\n\t\t\t\tvar nValues = values.length;\n\t\t\t\tvar result = new values.constructor( nValues );\n\t\n\t\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\t\n\t\t\t\t\tvar srcOffset = order[ i ] * stride;\n\t\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\t\n\t\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t},\n\t\n\t\t\t// function for parsing AOS keyframe formats\n\t\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\t\n\t\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\t\n\t\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\t\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( key === undefined ) return; // no data\n\t\n\t\t\t\tvar value = key[ valuePropertyName ];\n\t\t\t\tif ( value === undefined ) return; // no data\n\t\n\t\t\t\tif ( Array.isArray( value ) ) {\n\t\n\t\t\t\t\tdo {\n\t\n\t\t\t\t\t\tvalue = key[ valuePropertyName ];\n\t\n\t\t\t\t\t\tif ( value !== undefined ) {\n\t\n\t\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\t\n\t\t\t\t\t} while ( key !== undefined );\n\t\n\t\t\t\t} else if ( value.toArray !== undefined ) {\n\t\n\t\t\t\t\t// ...assume THREE.Math-ish\n\t\n\t\t\t\t\tdo {\n\t\n\t\t\t\t\t\tvalue = key[ valuePropertyName ];\n\t\n\t\t\t\t\t\tif ( value !== undefined ) {\n\t\n\t\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\t\tvalue.toArray( values, values.length );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\t\n\t\t\t\t\t} while ( key !== undefined );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// otherwise push as-is\n\t\n\t\t\t\t\tdo {\n\t\n\t\t\t\t\t\tvalue = key[ valuePropertyName ];\n\t\n\t\t\t\t\t\tif ( value !== undefined ) {\n\t\n\t\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\t\tvalues.push( value );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\t\n\t\t\t\t\t} while ( key !== undefined );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * Abstract base class of interpolants over parametric samples.\n\t\t *\n\t\t * The parameter domain is one dimensional, typically the time or a path\n\t\t * along a curve defined by the data.\n\t\t *\n\t\t * The sample values can have any dimensionality and derived classes may\n\t\t * apply special interpretations to the data.\n\t\t *\n\t\t * This class provides the interval seek in a Template Method, deferring\n\t\t * the actual interpolation to derived classes.\n\t\t *\n\t\t * Time complexity is O(1) for linear access crossing at most two points\n\t\t * and O(log N) for random access, where N is the number of positions.\n\t\t *\n\t\t * References:\n\t\t *\n\t\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t\t *\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\t\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\n\t\t}\n\t\n\t\tObject.assign( Interpolant.prototype, {\n\t\n\t\t\tevaluate: function( t ) {\n\t\n\t\t\t\tvar pp = this.parameterPositions,\n\t\t\t\t\ti1 = this._cachedIndex,\n\t\n\t\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\t\n\t\t\t\tvalidate_interval: {\n\t\n\t\t\t\t\tseek: {\n\t\n\t\t\t\t\t\tvar right;\n\t\n\t\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t\t//-\n\t\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\t\n\t\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\t\n\t\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\t\n\t\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\t\n\t\t\t\t\t\t\t\t\t\t// after end\n\t\n\t\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\t\n\t\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\t\n\t\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\t\n\t\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\t\tbreak seek;\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\t\tbreak linear_scan;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\t\n\t\t\t\t\t\t\t\t// looping?\n\t\n\t\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\t\n\t\t\t\t\t\t\t\tif ( t < t1global ) {\n\t\n\t\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\t\tt0 = t1global;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// linear reverse scan\n\t\n\t\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\t\n\t\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\t\n\t\t\t\t\t\t\t\t\t\t// before start\n\t\n\t\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\t\n\t\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\t\n\t\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\t\n\t\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\t\tbreak seek;\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\t\tbreak linear_scan;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// the interval is valid\n\t\n\t\t\t\t\t\t\tbreak validate_interval;\n\t\n\t\t\t\t\t\t} // linear scan\n\t\n\t\t\t\t\t\t// binary search\n\t\n\t\t\t\t\t\twhile ( i1 < right ) {\n\t\n\t\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\t\n\t\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\t\n\t\t\t\t\t\t\t\tright = mid;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\ti1 = mid + 1;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\t\n\t\t\t\t\t\t// check boundary cases, again\n\t\n\t\t\t\t\t\tif ( t0 === undefined ) {\n\t\n\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( t1 === undefined ) {\n\t\n\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} // seek\n\t\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\n\t\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\t\n\t\t\t\t} // validate_interval\n\t\n\t\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\t\n\t\t\t},\n\t\n\t\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t\t// Note: The indirection allows central control of many interpolants.\n\t\n\t\t\t// --- Protected interface\n\t\n\t\t\tDefaultSettings_: {},\n\t\n\t\t\tgetSettings_: function() {\n\t\n\t\t\t\treturn this.settings || this.DefaultSettings_;\n\t\n\t\t\t},\n\t\n\t\t\tcopySampleValue_: function( index ) {\n\t\n\t\t\t\t// copies a sample value to the result buffer\n\t\n\t\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toffset = index * stride;\n\t\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\t\n\t\t\t\t\tresult[ i ] = values[ offset + i ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t},\n\t\n\t\t\t// Template methods for derived classes:\n\t\n\t\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\t\n\t\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t\t// implementations shall return this.resultBuffer\n\t\n\t\t\t},\n\t\n\t\t\tintervalChanged_: function( i1, t0, t1 ) {\n\t\n\t\t\t\t// empty\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\t\tObject.assign( Interpolant.prototype, {\n\t\n\t\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\t\n\t\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * Fast and simple cubic spline interpolant.\n\t\t *\n\t\t * It was derived from a Hermitian construction setting the first derivative\n\t\t * at each sample position to the linear slope between neighboring positions\n\t\t * over their parameter interval.\n\t\t *\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\t\n\t\t\tInterpolant.call(\n\t\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\t\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\n\t\t}\n\t\n\t\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\t\n\t\t\tconstructor: CubicInterpolant,\n\t\n\t\t\tDefaultSettings_: {\n\t\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\n\t\t\t},\n\t\n\t\t\tintervalChanged_: function( i1, t0, t1 ) {\n\t\n\t\t\t\tvar pp = this.parameterPositions,\n\t\t\t\t\tiPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\n\t\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\t\ttNext = pp[ iNext ];\n\t\n\t\t\t\tif ( tPrev === undefined ) {\n\t\n\t\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\t\n\t\t\t\t\t\tcase ZeroSlopeEnding:\n\t\n\t\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase WrapAroundEnding:\n\t\n\t\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\t\n\t\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\t\ttPrev = t1;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( tNext === undefined ) {\n\t\n\t\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\t\n\t\t\t\t\t\tcase ZeroSlopeEnding:\n\t\n\t\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase WrapAroundEnding:\n\t\n\t\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\t\n\t\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\t\ttNext = t0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\t\tstride = this.valueSize;\n\t\n\t\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\t\tthis._offsetNext = iNext * stride;\n\t\n\t\t\t},\n\t\n\t\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\t\n\t\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\n\t\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\t\n\t\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\t\tpp = p * p,\n\t\t\t\t\tppp = pp * p;\n\t\n\t\t\t\t// evaluate polynomials\n\t\n\t\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\t\n\t\t\t\t// combine data linearly\n\t\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\t\n\t\t\t\t\tresult[ i ] =\n\t\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\t\tsN * values[ oN + i ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\t\n\t\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\t\n\t\t}\n\t\n\t\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\t\n\t\t\tconstructor: LinearInterpolant,\n\t\n\t\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\t\n\t\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\n\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\toffset0 = offset1 - stride,\n\t\n\t\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\t\tweight0 = 1 - weight1;\n\t\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\t\n\t\t\t\t\tresult[ i ] =\n\t\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * Interpolant that evaluates to the sample value at the position preceeding\n\t\t * the parameter.\n\t\t *\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\t\n\t\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\t\n\t\t}\n\t\n\t\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\t\n\t\t\tconstructor: DiscreteInterpolant,\n\t\n\t\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\t\n\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tvar KeyframeTrackPrototype;\n\t\n\t\tKeyframeTrackPrototype = {\n\t\n\t\t\tTimeBufferType: Float32Array,\n\t\t\tValueBufferType: Float32Array,\n\t\n\t\t\tDefaultInterpolation: InterpolateLinear,\n\t\n\t\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\t\n\t\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\t\n\t\t\t},\n\t\n\t\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\t\n\t\t\t\treturn new LinearInterpolant(\n\t\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\t\n\t\t\t},\n\t\n\t\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\t\n\t\t\t\treturn new CubicInterpolant(\n\t\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\t\n\t\t\t},\n\t\n\t\t\tsetInterpolation: function ( interpolation ) {\n\t\n\t\t\t\tvar factoryMethod;\n\t\n\t\t\t\tswitch ( interpolation ) {\n\t\n\t\t\t\t\tcase InterpolateDiscrete:\n\t\n\t\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase InterpolateLinear:\n\t\n\t\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase InterpolateSmooth:\n\t\n\t\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( factoryMethod === undefined ) {\n\t\n\t\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\t\n\t\t\t\t\tif ( this.createInterpolant === undefined ) {\n\t\n\t\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\t\n\t\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.createInterpolant = factoryMethod;\n\t\n\t\t\t},\n\t\n\t\t\tgetInterpolation: function () {\n\t\n\t\t\t\tswitch ( this.createInterpolant ) {\n\t\n\t\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\n\t\t\t\t\t\treturn InterpolateDiscrete;\n\t\n\t\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\n\t\t\t\t\t\treturn InterpolateLinear;\n\t\n\t\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\n\t\t\t\t\t\treturn InterpolateSmooth;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tgetValueSize: function () {\n\t\n\t\t\t\treturn this.values.length / this.times.length;\n\t\n\t\t\t},\n\t\n\t\t\t// move all keyframes either forwards or backwards in time\n\t\t\tshift: function ( timeOffset ) {\n\t\n\t\t\t\tif ( timeOffset !== 0.0 ) {\n\t\n\t\t\t\t\tvar times = this.times;\n\t\n\t\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\ttimes[ i ] += timeOffset;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\t\tscale: function ( timeScale ) {\n\t\n\t\t\t\tif ( timeScale !== 1.0 ) {\n\t\n\t\t\t\t\tvar times = this.times;\n\t\n\t\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\ttimes[ i ] *= timeScale;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\t\ttrim: function ( startTime, endTime ) {\n\t\n\t\t\t\tvar times = this.times,\n\t\t\t\t\tnKeys = times.length,\n\t\t\t\t\tfrom = 0,\n\t\t\t\t\tto = nKeys - 1;\n\t\n\t\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\t\n\t\t\t\t++ to; // inclusive -> exclusive bound\n\t\n\t\t\t\tif ( from !== 0 || to !== nKeys ) {\n\t\n\t\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\t\n\t\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\t\tvalidate: function () {\n\t\n\t\t\t\tvar valid = true;\n\t\n\t\t\t\tvar valueSize = this.getValueSize();\n\t\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\t\t\tvalid = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar times = this.times,\n\t\t\t\t\tvalues = this.values,\n\t\n\t\t\t\t\tnKeys = times.length;\n\t\n\t\t\t\tif ( nKeys === 0 ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\t\t\tvalid = false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar prevTime = null;\n\t\n\t\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\t\n\t\t\t\t\tvar currTime = times[ i ];\n\t\n\t\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\t\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\t\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tprevTime = currTime;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( values !== undefined ) {\n\t\n\t\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\t\tvar value = values[ i ];\n\t\n\t\t\t\t\t\t\tif ( isNaN( value ) ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn valid;\n\t\n\t\t\t},\n\t\n\t\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\t\toptimize: function () {\n\t\n\t\t\t\tvar times = this.times,\n\t\t\t\t\tvalues = this.values,\n\t\t\t\t\tstride = this.getValueSize(),\n\t\n\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\n\t\t\t\t\twriteIndex = 1,\n\t\t\t\t\tlastIndex = times.length - 1;\n\t\n\t\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\t\n\t\t\t\t\tvar keep = false;\n\t\n\t\t\t\t\tvar time = times[ i ];\n\t\t\t\t\tvar timeNext = times[ i + 1 ];\n\t\n\t\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\t\n\t\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\t\n\t\t\t\t\t\tif ( ! smoothInterpolation ) {\n\t\n\t\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\n\t\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\t\n\t\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\t\n\t\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\t\n\t\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\t\n\t\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else keep = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// in-place compaction\n\t\n\t\t\t\t\tif ( keep ) {\n\t\n\t\t\t\t\t\tif ( i !== writeIndex ) {\n\t\n\t\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\t\n\t\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\t\n\t\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\t\n\t\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t++ writeIndex;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// flush last keyframe (compaction looks ahead)\n\t\n\t\t\t\tif ( lastIndex > 0 ) {\n\t\n\t\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\t\n\t\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\t\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\t\n\t\t\t\t\t++ writeIndex;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( writeIndex !== times.length ) {\n\t\n\t\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\t\n\t\t\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\t\n\t\t\tif ( times === undefined || times.length === 0 ) {\n\t\n\t\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\t\n\t\t\t}\n\t\n\t\t\tthis.name = name;\n\t\n\t\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\t\n\t\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\t\n\t\t\tthis.validate();\n\t\t\tthis.optimize();\n\t\n\t\t}\n\t\n\t\t/**\n\t\t *\n\t\t * A Track of vectored keyframe values.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\t\n\t\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\t\n\t\t}\n\t\n\t\tVectorKeyframeTrack.prototype =\n\t\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\t\n\t\t\tconstructor: VectorKeyframeTrack,\n\t\n\t\t\tValueTypeName: 'vector'\n\t\n\t\t\t// ValueBufferType is inherited\n\t\n\t\t\t// DefaultInterpolation is inherited\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * Spherical linear unit quaternion interpolant.\n\t\t *\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\t\n\t\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\t\n\t\t}\n\t\n\t\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\t\n\t\t\tconstructor: QuaternionLinearInterpolant,\n\t\n\t\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\t\n\t\t\t\tvar result = this.resultBuffer,\n\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\tstride = this.valueSize,\n\t\n\t\t\t\t\toffset = i1 * stride,\n\t\n\t\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\t\n\t\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\t\n\t\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A Track of quaternion keyframe values.\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\t\n\t\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\t\n\t\t}\n\t\n\t\tQuaternionKeyframeTrack.prototype =\n\t\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\t\n\t\t\tconstructor: QuaternionKeyframeTrack,\n\t\n\t\t\tValueTypeName: 'quaternion',\n\t\n\t\t\t// ValueBufferType is inherited\n\t\n\t\t\tDefaultInterpolation: InterpolateLinear,\n\t\n\t\t\tInterpolantFactoryMethodLinear: function( result ) {\n\t\n\t\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\t\n\t\t\t},\n\t\n\t\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A Track of numeric keyframe values.\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\t\n\t\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\t\n\t\t}\n\t\n\t\tNumberKeyframeTrack.prototype =\n\t\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\t\n\t\t\tconstructor: NumberKeyframeTrack,\n\t\n\t\t\tValueTypeName: 'number'\n\t\n\t\t\t// ValueBufferType is inherited\n\t\n\t\t\t// DefaultInterpolation is inherited\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A Track that interpolates Strings\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\t\n\t\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\t\n\t\t}\n\t\n\t\tStringKeyframeTrack.prototype =\n\t\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\t\n\t\t\tconstructor: StringKeyframeTrack,\n\t\n\t\t\tValueTypeName: 'string',\n\t\t\tValueBufferType: Array,\n\t\n\t\t\tDefaultInterpolation: InterpolateDiscrete,\n\t\n\t\t\tInterpolantFactoryMethodLinear: undefined,\n\t\n\t\t\tInterpolantFactoryMethodSmooth: undefined\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A Track of Boolean keyframe values.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction BooleanKeyframeTrack( name, times, values ) {\n\t\n\t\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\t\n\t\t}\n\t\n\t\tBooleanKeyframeTrack.prototype =\n\t\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\t\n\t\t\tconstructor: BooleanKeyframeTrack,\n\t\n\t\t\tValueTypeName: 'bool',\n\t\t\tValueBufferType: Array,\n\t\n\t\t\tDefaultInterpolation: InterpolateDiscrete,\n\t\n\t\t\tInterpolantFactoryMethodLinear: undefined,\n\t\t\tInterpolantFactoryMethodSmooth: undefined\n\t\n\t\t\t// Note: Actually this track could have a optimized / compressed\n\t\t\t// representation of a single value and a custom interpolant that\n\t\t\t// computes \"firstValue ^ isOdd( index )\".\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A Track of keyframe values that represent color.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\t\n\t\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\t\n\t\t}\n\t\n\t\tColorKeyframeTrack.prototype =\n\t\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\t\n\t\t\tconstructor: ColorKeyframeTrack,\n\t\n\t\t\tValueTypeName: 'color'\n\t\n\t\t\t// ValueBufferType is inherited\n\t\n\t\t\t// DefaultInterpolation is inherited\n\t\n\t\n\t\t\t// Note: Very basic implementation and nothing special yet.\n\t\t\t// However, this is the place for color space parameterization.\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A timed sequence of keyframes for a specific property.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\t\n\t\t\tKeyframeTrackConstructor.apply( this, arguments );\n\t\n\t\t}\n\t\n\t\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\t\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\t\n\t\t// Static methods:\n\t\n\t\tObject.assign( KeyframeTrack, {\n\t\n\t\t\t// Serialization (in static context, because of constructor invocation\n\t\t\t// and automatic invocation of .toJSON):\n\t\n\t\t\tparse: function( json ) {\n\t\n\t\t\t\tif( json.type === undefined ) {\n\t\n\t\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\t\n\t\t\t\tif ( json.times === undefined ) {\n\t\n\t\t\t\t\tvar times = [], values = [];\n\t\n\t\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\t\n\t\t\t\t\tjson.times = times;\n\t\t\t\t\tjson.values = values;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// derived classes can define a static parse method\n\t\t\t\tif ( trackType.parse !== undefined ) {\n\t\n\t\t\t\t\treturn trackType.parse( json );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\t\t\treturn new trackType(\n\t\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function( track ) {\n\t\n\t\t\t\tvar trackType = track.constructor;\n\t\n\t\t\t\tvar json;\n\t\n\t\t\t\t// derived classes can define a static toJSON method\n\t\t\t\tif ( trackType.toJSON !== undefined ) {\n\t\n\t\t\t\t\tjson = trackType.toJSON( track );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\t\tjson = {\n\t\n\t\t\t\t\t\t'name': track.name,\n\t\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\t\n\t\t\t\t\t};\n\t\n\t\t\t\t\tvar interpolation = track.getInterpolation();\n\t\n\t\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\t\n\t\t\t\t\t\tjson.interpolation = interpolation;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tjson.type = track.ValueTypeName; // mandatory\n\t\n\t\t\t\treturn json;\n\t\n\t\t\t},\n\t\n\t\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\t\n\t\t\t\tswitch( typeName.toLowerCase() ) {\n\t\n\t\t\t\t\tcase \"scalar\":\n\t\t\t\t\tcase \"double\":\n\t\t\t\t\tcase \"float\":\n\t\t\t\t\tcase \"number\":\n\t\t\t\t\tcase \"integer\":\n\t\n\t\t\t\t\t\treturn NumberKeyframeTrack;\n\t\n\t\t\t\t\tcase \"vector\":\n\t\t\t\t\tcase \"vector2\":\n\t\t\t\t\tcase \"vector3\":\n\t\t\t\t\tcase \"vector4\":\n\t\n\t\t\t\t\t\treturn VectorKeyframeTrack;\n\t\n\t\t\t\t\tcase \"color\":\n\t\n\t\t\t\t\t\treturn ColorKeyframeTrack;\n\t\n\t\t\t\t\tcase \"quaternion\":\n\t\n\t\t\t\t\t\treturn QuaternionKeyframeTrack;\n\t\n\t\t\t\t\tcase \"bool\":\n\t\t\t\t\tcase \"boolean\":\n\t\n\t\t\t\t\t\treturn BooleanKeyframeTrack;\n\t\n\t\t\t\t\tcase \"string\":\n\t\n\t\t\t\t\t\treturn StringKeyframeTrack;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * Reusable set of Tracks that represent an animation.\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t */\n\t\n\t\tfunction AnimationClip( name, duration, tracks ) {\n\t\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\t// this means it should figure out its duration by scanning the tracks\n\t\t\tif ( this.duration < 0 ) {\n\t\n\t\t\t\tthis.resetDuration();\n\t\n\t\t\t}\n\t\n\t\t\tthis.optimize();\n\t\n\t\t}\n\t\n\t\tObject.assign( AnimationClip, {\n\t\n\t\t\tparse: function ( json ) {\n\t\n\t\t\t\tvar tracks = [],\n\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\t\n\t\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\t\n\t\t\t},\n\t\n\t\t\ttoJSON: function ( clip ) {\n\t\n\t\t\t\tvar tracks = [],\n\t\t\t\t\tclipTracks = clip.tracks;\n\t\n\t\t\t\tvar json = {\n\t\n\t\t\t\t\t'name': clip.name,\n\t\t\t\t\t'duration': clip.duration,\n\t\t\t\t\t'tracks': tracks\n\t\n\t\t\t\t};\n\t\n\t\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn json;\n\t\n\t\t\t},\n\t\n\t\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\t\n\t\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\t\tvar tracks = [];\n\t\n\t\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\t\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\t\n\t\t\t\t\ttimes.push(\n\t\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\t\n\t\t\t\t\tvalues.push( 0, 1, 0 );\n\t\n\t\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\t\n\t\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\t\n\t\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\t\tvalues.push( values[ 0 ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttracks.push(\n\t\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn new AnimationClip( name, - 1, tracks );\n\t\n\t\t\t},\n\t\n\t\t\tfindByName: function ( objectOrClipArray, name ) {\n\t\n\t\t\t\tvar clipArray = objectOrClipArray;\n\t\n\t\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\t\n\t\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\t\n\t\t\t\t\tif ( clipArray[ i ].name === name ) {\n\t\n\t\t\t\t\t\treturn clipArray[ i ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\n\t\t\t},\n\t\n\t\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\t\n\t\t\t\tvar animationToMorphTargets = {};\n\t\n\t\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\t\n\t\t\t\t// sort morph target names into animation groups based\n\t\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\t\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\t\n\t\t\t\t\tif ( parts && parts.length > 1 ) {\n\t\n\t\t\t\t\t\tvar name = parts[ 1 ];\n\t\n\t\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\t\tif ( ! animationMorphTargets ) {\n\t\n\t\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar clips = [];\n\t\n\t\t\t\tfor ( var name in animationToMorphTargets ) {\n\t\n\t\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn clips;\n\t\n\t\t\t},\n\t\n\t\t\t// parse the animation.hierarchy format\n\t\t\tparseAnimation: function ( animation, bones ) {\n\t\n\t\t\t\tif ( ! animation ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\t\treturn null;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\t\n\t\t\t\t\t// only return track if there are actually keys.\n\t\t\t\t\tif ( animationKeys.length !== 0 ) {\n\t\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\t\n\t\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\t\n\t\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\t\tif ( times.length !== 0 ) {\n\t\n\t\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t\tvar tracks = [];\n\t\n\t\t\t\tvar clipName = animation.name || 'default';\n\t\t\t\t// automatic length determination in AnimationClip.\n\t\t\t\tvar duration = animation.length || - 1;\n\t\t\t\tvar fps = animation.fps || 30;\n\t\n\t\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\t\n\t\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\t\n\t\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\t\n\t\t\t\t\t// skip empty tracks\n\t\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\t\n\t\t\t\t\t// process morph targets\n\t\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\t\n\t\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\t\tvar morphTargetNames = {};\n\t\n\t\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\t\n\t\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\t\n\t\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\t\n\t\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\t\tvar values = [];\n\t\n\t\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\t\n\t\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\t\n\t\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// ...assume skeletal animation\n\t\n\t\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\t\n\t\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\t\n\t\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\t\n\t\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( tracks.length === 0 ) {\n\t\n\t\t\t\t\treturn null;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\t\n\t\t\t\treturn clip;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( AnimationClip.prototype, {\n\t\n\t\t\tresetDuration: function () {\n\t\n\t\t\t\tvar tracks = this.tracks, duration = 0;\n\t\n\t\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tvar track = this.tracks[ i ];\n\t\n\t\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.duration = duration;\n\t\n\t\t\t},\n\t\n\t\t\ttrim: function () {\n\t\n\t\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\t\n\t\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\toptimize: function () {\n\t\n\t\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\t\n\t\t\t\t\tthis.tracks[ i ].optimize();\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction MaterialLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\t\tthis.textures = {};\n\t\n\t\t}\n\t\n\t\tObject.assign( MaterialLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\t\tloader.load( url, function ( text ) {\n\t\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t},\n\t\n\t\t\tsetTextures: function ( value ) {\n\t\n\t\t\t\tthis.textures = value;\n\t\n\t\t\t},\n\t\n\t\t\tparse: function ( json ) {\n\t\n\t\t\t\tvar textures = this.textures;\n\t\n\t\t\t\tfunction getTexture( name ) {\n\t\n\t\t\t\t\tif ( textures[ name ] === undefined ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn textures[ name ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar material = new Materials[ json.type ]();\n\t\n\t\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\n\t\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\t\n\t\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\t\n\t\t\t\t// Deprecated\n\t\n\t\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\n\t\t\t\t// for PointsMaterial\n\t\n\t\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\t\n\t\t\t\t// maps\n\t\n\t\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\n\t\t\t\tif ( json.alphaMap !== undefined ) {\n\t\n\t\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\t\tmaterial.transparent = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\t\n\t\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\t\tif ( json.normalScale !== undefined ) {\n\t\n\t\t\t\t\tvar normalScale = json.normalScale;\n\t\n\t\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\t\n\t\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\n\t\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\t\n\t\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\t\n\t\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\t\n\t\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\n\t\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\n\t\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\n\t\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\t\n\t\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\t\n\t\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\t\n\t\t\t\treturn material;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction BufferGeometryLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( BufferGeometryLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\t\tloader.load( url, function ( text ) {\n\t\n\t\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t},\n\t\n\t\t\tparse: function ( json ) {\n\t\n\t\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\t\tvar index = json.data.index;\n\t\n\t\t\t\tif ( index !== undefined ) {\n\t\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar attributes = json.data.attributes;\n\t\n\t\t\t\tfor ( var key in attributes ) {\n\t\n\t\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\n\t\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\t\n\t\t\t\tif ( groups !== undefined ) {\n\t\n\t\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\tvar group = groups[ i ];\n\t\n\t\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar boundingSphere = json.data.boundingSphere;\n\t\n\t\t\t\tif ( boundingSphere !== undefined ) {\n\t\n\t\t\t\t\tvar center = new Vector3();\n\t\n\t\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\t\n\t\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn geometry;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tvar TYPED_ARRAYS = {\n\t\t\tInt8Array: Int8Array,\n\t\t\tUint8Array: Uint8Array,\n\t\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\t\tInt16Array: Int16Array,\n\t\t\tUint16Array: Uint16Array,\n\t\t\tInt32Array: Int32Array,\n\t\t\tUint32Array: Uint32Array,\n\t\t\tFloat32Array: Float32Array,\n\t\t\tFloat64Array: Float64Array\n\t\t};\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Loader() {\n\t\n\t\t\tthis.onLoadStart = function () {};\n\t\t\tthis.onLoadProgress = function () {};\n\t\t\tthis.onLoadComplete = function () {};\n\t\n\t\t}\n\t\n\t\tLoader.Handlers = {\n\t\n\t\t\thandlers: [],\n\t\n\t\t\tadd: function ( regex, loader ) {\n\t\n\t\t\t\tthis.handlers.push( regex, loader );\n\t\n\t\t\t},\n\t\n\t\t\tget: function ( file ) {\n\t\n\t\t\t\tvar handlers = this.handlers;\n\t\n\t\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\t\n\t\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\t\tvar loader = handlers[ i + 1 ];\n\t\n\t\t\t\t\tif ( regex.test( file ) ) {\n\t\n\t\t\t\t\t\treturn loader;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tObject.assign( Loader.prototype, {\n\t\n\t\t\tcrossOrigin: undefined,\n\t\n\t\t\textractUrlBase: function ( url ) {\n\t\n\t\t\t\tvar parts = url.split( '/' );\n\t\n\t\t\t\tif ( parts.length === 1 ) return './';\n\t\n\t\t\t\tparts.pop();\n\t\n\t\t\t\treturn parts.join( '/' ) + '/';\n\t\n\t\t\t},\n\t\n\t\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\t\n\t\t\t\tvar array = [];\n\t\n\t\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\t\n\t\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn array;\n\t\n\t\t\t},\n\t\n\t\t\tcreateMaterial: ( function () {\n\t\n\t\t\t\tvar BlendingMode = {\n\t\t\t\t\tNoBlending: NoBlending,\n\t\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\t\tCustomBlending: CustomBlending\n\t\t\t\t};\n\t\n\t\t\t\tvar color = new Color();\n\t\t\t\tvar textureLoader = new TextureLoader();\n\t\t\t\tvar materialLoader = new MaterialLoader();\n\t\n\t\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\t\n\t\t\t\t\t// convert from old material format\n\t\n\t\t\t\t\tvar textures = {};\n\t\n\t\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\t\n\t\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\t\n\t\t\t\t\t\tvar texture;\n\t\n\t\t\t\t\t\tif ( loader !== null ) {\n\t\n\t\t\t\t\t\t\ttexture = loader.load( fullPath );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( repeat !== undefined ) {\n\t\n\t\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\t\n\t\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( offset !== undefined ) {\n\t\n\t\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( wrap !== undefined ) {\n\t\n\t\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\t\n\t\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( anisotropy !== undefined ) {\n\t\n\t\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar uuid = _Math.generateUUID();\n\t\n\t\t\t\t\t\ttextures[ uuid ] = texture;\n\t\n\t\t\t\t\t\treturn uuid;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t//\n\t\n\t\t\t\t\tvar json = {\n\t\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( var name in m ) {\n\t\n\t\t\t\t\t\tvar value = m[ name ];\n\t\n\t\t\t\t\t\tswitch ( name ) {\n\t\n\t\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\t\n\t\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\t\n\t\t\t\t\tmaterialLoader.setTextures( textures );\n\t\n\t\t\t\t\treturn materialLoader.parse( json );\n\t\n\t\t\t\t};\n\t\n\t\t\t} )()\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction JSONLoader( manager ) {\n\t\n\t\t\tif ( typeof manager === 'boolean' ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\t\tmanager = undefined;\n\t\n\t\t\t}\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t\tthis.withCredentials = false;\n\t\n\t\t}\n\t\n\t\tObject.assign( JSONLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\t\n\t\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\t\tloader.load( url, function ( text ) {\n\t\n\t\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\t\tvar metadata = json.metadata;\n\t\n\t\t\t\t\tif ( metadata !== undefined ) {\n\t\n\t\t\t\t\t\tvar type = metadata.type;\n\t\n\t\t\t\t\t\tif ( type !== undefined ) {\n\t\n\t\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\t\tonLoad( object.geometry, object.materials );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t},\n\t\n\t\t\tsetTexturePath: function ( value ) {\n\t\n\t\t\t\tthis.texturePath = value;\n\t\n\t\t\t},\n\t\n\t\t\tparse: ( function () {\n\t\n\t\t\t\tfunction parseModel( json, geometry ) {\n\t\n\t\t\t\t\tfunction isBitSet( value, position ) {\n\t\n\t\t\t\t\t\treturn value & ( 1 << position );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar i, j, fi,\n\t\n\t\t\t\t\t\toffset, zLength,\n\t\n\t\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\t\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tisQuad,\n\t\t\t\t\t\thasMaterial,\n\t\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\t\n\t\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\t\n\t\t\t\t\t\tuvLayer, uv, u, v,\n\t\n\t\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\t\tcolors = json.colors,\n\t\n\t\t\t\t\t\tscale = json.scale,\n\t\n\t\t\t\t\t\tnUvLayers = 0;\n\t\n\t\n\t\t\t\t\tif ( json.uvs !== undefined ) {\n\t\n\t\t\t\t\t\t// disregard empty arrays\n\t\n\t\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\t\n\t\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\t\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\toffset = 0;\n\t\t\t\t\tzLength = vertices.length;\n\t\n\t\t\t\t\twhile ( offset < zLength ) {\n\t\n\t\t\t\t\t\tvertex = new Vector3();\n\t\n\t\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\t\n\t\t\t\t\t\tgeometry.vertices.push( vertex );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\toffset = 0;\n\t\t\t\t\tzLength = faces.length;\n\t\n\t\t\t\t\twhile ( offset < zLength ) {\n\t\n\t\t\t\t\t\ttype = faces[ offset ++ ];\n\t\n\t\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\t\n\t\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\t\n\t\t\t\t\t\tif ( isQuad ) {\n\t\n\t\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\t\n\t\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\t\n\t\t\t\t\t\t\toffset += 4;\n\t\n\t\t\t\t\t\t\tif ( hasMaterial ) {\n\t\n\t\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// to get face <=> uv index correspondence\n\t\n\t\t\t\t\t\t\tfi = geometry.faces.length;\n\t\n\t\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\t\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\t\n\t\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\t\n\t\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\t\n\t\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\t\n\t\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( hasFaceNormal ) {\n\t\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\t\n\t\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\t\n\t\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t\t);\n\t\n\t\n\t\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t\tif ( hasFaceColor ) {\n\t\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\t\n\t\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\t\n\t\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\t\tgeometry.faces.push( faceB );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\t\n\t\t\t\t\t\t\tif ( hasMaterial ) {\n\t\n\t\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// to get face <=> uv index correspondence\n\t\n\t\t\t\t\t\t\tfi = geometry.faces.length;\n\t\n\t\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\t\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\n\t\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\t\n\t\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\t\n\t\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\t\n\t\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( hasFaceNormal ) {\n\t\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\t\n\t\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\t\n\t\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t\tif ( hasFaceColor ) {\n\t\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\t\n\t\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tgeometry.faces.push( face );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction parseSkin( json, geometry ) {\n\t\n\t\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\t\n\t\t\t\t\tif ( json.skinWeights ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\t\n\t\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\t\n\t\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( json.skinIndices ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\t\n\t\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\t\n\t\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tgeometry.bones = json.bones;\n\t\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction parseMorphing( json, geometry ) {\n\t\n\t\t\t\t\tvar scale = json.scale;\n\t\n\t\t\t\t\tif ( json.morphTargets !== undefined ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\t\n\t\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\t\n\t\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\t\n\t\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\t\n\t\t\t\t\t\t\t\tdstVertices.push( vertex );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\t\n\t\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction parseAnimations( json, geometry ) {\n\t\n\t\t\t\t\tvar outputAnimations = [];\n\t\n\t\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\t\tvar animations = [];\n\t\n\t\t\t\t\tif ( json.animation !== undefined ) {\n\t\n\t\t\t\t\t\tanimations.push( json.animation );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( json.animations !== undefined ) {\n\t\n\t\t\t\t\t\tif ( json.animations.length ) {\n\t\n\t\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tanimations.push( json.animations );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\t\n\t\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// parse implicit morph animations\n\t\t\t\t\tif ( geometry.morphTargets ) {\n\t\n\t\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn function ( json, texturePath ) {\n\t\n\t\t\t\t\tif ( json.data !== undefined ) {\n\t\n\t\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\t\tjson = json.data;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( json.scale !== undefined ) {\n\t\n\t\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tjson.scale = 1.0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar geometry = new Geometry();\n\t\n\t\t\t\t\tparseModel( json, geometry );\n\t\t\t\t\tparseSkin( json, geometry );\n\t\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\t\tparseAnimations( json, geometry );\n\t\n\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\t\n\t\t\t\t\t\treturn { geometry: geometry };\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\t\n\t\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t} )()\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction ObjectLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\t\tthis.texturePath = '';\n\t\n\t\t}\n\t\n\t\tObject.assign( ObjectLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tif ( this.texturePath === '' ) {\n\t\n\t\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\t\tloader.load( url, function ( text ) {\n\t\n\t\t\t\t\tvar json = null;\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\tjson = JSON.parse( text );\n\t\n\t\t\t\t\t} catch ( error ) {\n\t\n\t\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\t\n\t\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\t\n\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar metadata = json.metadata;\n\t\n\t\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\t\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscope.parse( json, onLoad );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t},\n\t\n\t\t\tsetTexturePath: function ( value ) {\n\t\n\t\t\t\tthis.texturePath = value;\n\t\n\t\t\t},\n\t\n\t\t\tsetCrossOrigin: function ( value ) {\n\t\n\t\t\t\tthis.crossOrigin = value;\n\t\n\t\t\t},\n\t\n\t\t\tparse: function ( json, onLoad ) {\n\t\n\t\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\t\n\t\t\t\tvar images = this.parseImages( json.images, function () {\n\t\n\t\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\t\n\t\t\t\t} );\n\t\n\t\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\t\n\t\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\t\n\t\t\t\tif ( json.animations ) {\n\t\n\t\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\t\n\t\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn object;\n\t\n\t\t\t},\n\t\n\t\t\tparseGeometries: function ( json ) {\n\t\n\t\t\t\tvar geometries = {};\n\t\n\t\t\t\tif ( json !== undefined ) {\n\t\n\t\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\t\n\t\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar geometry;\n\t\t\t\t\t\tvar data = json[ i ];\n\t\n\t\t\t\t\t\tswitch ( data.type ) {\n\t\n\t\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\t\tcase 'RingBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'BufferGeometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tcase 'Geometry':\n\t\n\t\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\t\n\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\t\n\t\t\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\n\t\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\n\t\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn geometries;\n\t\n\t\t\t},\n\t\n\t\t\tparseMaterials: function ( json, textures ) {\n\t\n\t\t\t\tvar materials = {};\n\t\n\t\t\t\tif ( json !== undefined ) {\n\t\n\t\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\t\tloader.setTextures( textures );\n\t\n\t\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar data = json[ i ];\n\t\n\t\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\t\n\t\t\t\t\t\t\t// Deprecated\n\t\n\t\t\t\t\t\t\tvar array = [];\n\t\n\t\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\t\n\t\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn materials;\n\t\n\t\t\t},\n\t\n\t\t\tparseAnimations: function ( json ) {\n\t\n\t\t\t\tvar animations = [];\n\t\n\t\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\t\n\t\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\t\n\t\t\t\t\tanimations.push( clip );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn animations;\n\t\n\t\t\t},\n\t\n\t\t\tparseImages: function ( json, onLoad ) {\n\t\n\t\t\t\tvar scope = this;\n\t\t\t\tvar images = {};\n\t\n\t\t\t\tfunction loadImage( url ) {\n\t\n\t\t\t\t\tscope.manager.itemStart( url );\n\t\n\t\t\t\t\treturn loader.load( url, function () {\n\t\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\n\t\t\t\t\t}, undefined, function () {\n\t\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\n\t\t\t\t\t} );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( json !== undefined && json.length > 0 ) {\n\t\n\t\t\t\t\tvar manager = new LoadingManager( onLoad );\n\t\n\t\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\n\t\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\t\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn images;\n\t\n\t\t\t},\n\t\n\t\t\tparseTextures: function ( json, images ) {\n\t\n\t\t\t\tfunction parseConstant( value, type ) {\n\t\n\t\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\t\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\t\n\t\t\t\t\treturn type[ value ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar textures = {};\n\t\n\t\t\t\tif ( json !== undefined ) {\n\t\n\t\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar data = json[ i ];\n\t\n\t\t\t\t\t\tif ( data.image === undefined ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\t\ttexture.uuid = data.uuid;\n\t\n\t\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\t\n\t\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\n\t\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\t\tif ( data.wrap !== undefined ) {\n\t\n\t\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\t\n\t\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\t\n\t\t\t\t\t\ttextures[ data.uuid ] = texture;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn textures;\n\t\n\t\t\t},\n\t\n\t\t\tparseObject: function () {\n\t\n\t\t\t\tvar matrix = new Matrix4();\n\t\n\t\t\t\treturn function parseObject( data, geometries, materials ) {\n\t\n\t\t\t\t\tvar object;\n\t\n\t\t\t\t\tfunction getGeometry( name ) {\n\t\n\t\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn geometries[ name ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfunction getMaterial( name ) {\n\t\n\t\t\t\t\t\tif ( name === undefined ) return undefined;\n\t\n\t\t\t\t\t\tif ( Array.isArray( name ) ) {\n\t\n\t\t\t\t\t\t\tvar array = [];\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tvar uuid = name[ i ];\n\t\n\t\t\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\t\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\treturn array;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn materials[ name ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tswitch ( data.type ) {\n\t\n\t\t\t\t\t\tcase 'Scene':\n\t\n\t\t\t\t\t\t\tobject = new Scene();\n\t\n\t\t\t\t\t\t\tif ( data.background !== undefined ) {\n\t\n\t\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\t\n\t\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\t\n\t\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\t\n\t\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\t\n\t\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\t\n\t\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'PerspectiveCamera':\n\t\n\t\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\t\n\t\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'OrthographicCamera':\n\t\n\t\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'AmbientLight':\n\t\n\t\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'DirectionalLight':\n\t\n\t\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'PointLight':\n\t\n\t\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'RectAreaLight':\n\t\n\t\t\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'SpotLight':\n\t\n\t\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'HemisphereLight':\n\t\n\t\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'SkinnedMesh':\n\t\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\t\n\t\t\t\t\t\tcase 'Mesh':\n\t\n\t\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\t\tvar material = getMaterial( data.material );\n\t\n\t\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\t\n\t\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'LOD':\n\t\n\t\t\t\t\t\t\tobject = new LOD();\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'Line':\n\t\n\t\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'LineLoop':\n\t\n\t\t\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'LineSegments':\n\t\n\t\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\t\tcase 'Points':\n\t\n\t\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'Sprite':\n\t\n\t\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'Group':\n\t\n\t\t\t\t\t\t\tobject = new Group();\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\t\tobject = new Object3D();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tobject.uuid = data.uuid;\n\t\n\t\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\t\tif ( data.matrix !== undefined ) {\n\t\n\t\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\t\n\t\t\t\t\tif ( data.shadow ) {\n\t\n\t\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\n\t\t\t\t\tif ( data.children !== undefined ) {\n\t\n\t\t\t\t\t\tvar children = data.children;\n\t\n\t\t\t\t\t\tfor ( var  i = 0; i < children.length; i ++ ) {\n\t\n\t\t\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( data.type === 'LOD' ) {\n\t\n\t\t\t\t\t\tvar levels = data.levels;\n\t\n\t\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\t\n\t\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\t\n\t\t\t\t\t\t\tif ( child !== undefined ) {\n\t\n\t\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn object;\n\t\n\t\t\t\t};\n\t\n\t\t\t}()\n\t\n\t\t} );\n\t\n\t\tvar TEXTURE_MAPPING = {\n\t\t\tUVMapping: UVMapping,\n\t\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t\t};\n\t\n\t\tvar TEXTURE_WRAPPING = {\n\t\t\tRepeatWrapping: RepeatWrapping,\n\t\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t\t};\n\t\n\t\tvar TEXTURE_FILTER = {\n\t\t\tNearestFilter: NearestFilter,\n\t\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\t\tLinearFilter: LinearFilter,\n\t\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t\t};\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t * Bezier Curves formulas obtained from\n\t\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t\t */\n\t\n\t\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\t\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction QuadraticBezierP0( t, p ) {\n\t\n\t\t\tvar k = 1 - t;\n\t\t\treturn k * k * p;\n\t\n\t\t}\n\t\n\t\tfunction QuadraticBezierP1( t, p ) {\n\t\n\t\t\treturn 2 * ( 1 - t ) * t * p;\n\t\n\t\t}\n\t\n\t\tfunction QuadraticBezierP2( t, p ) {\n\t\n\t\t\treturn t * t * p;\n\t\n\t\t}\n\t\n\t\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\t\n\t\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\t\tQuadraticBezierP2( t, p2 );\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction CubicBezierP0( t, p ) {\n\t\n\t\t\tvar k = 1 - t;\n\t\t\treturn k * k * k * p;\n\t\n\t\t}\n\t\n\t\tfunction CubicBezierP1( t, p ) {\n\t\n\t\t\tvar k = 1 - t;\n\t\t\treturn 3 * k * k * t * p;\n\t\n\t\t}\n\t\n\t\tfunction CubicBezierP2( t, p ) {\n\t\n\t\t\treturn 3 * ( 1 - t ) * t * t * p;\n\t\n\t\t}\n\t\n\t\tfunction CubicBezierP3( t, p ) {\n\t\n\t\t\treturn t * t * t * p;\n\t\n\t\t}\n\t\n\t\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\t\n\t\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\t\tCubicBezierP3( t, p3 );\n\t\n\t\t}\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * Extensible curve object\n\t\t *\n\t\t * Some common of curve methods:\n\t\t * .getPoint(t), getTangent(t)\n\t\t * .getPointAt(u), getTangentAt(u)\n\t\t * .getPoints(), .getSpacedPoints()\n\t\t * .getLength()\n\t\t * .updateArcLengths()\n\t\t *\n\t\t * This following curves inherit from THREE.Curve:\n\t\t *\n\t\t * -- 2D curves --\n\t\t * THREE.ArcCurve\n\t\t * THREE.CubicBezierCurve\n\t\t * THREE.EllipseCurve\n\t\t * THREE.LineCurve\n\t\t * THREE.QuadraticBezierCurve\n\t\t * THREE.SplineCurve\n\t\t *\n\t\t * -- 3D curves --\n\t\t * THREE.CatmullRomCurve3\n\t\t * THREE.CubicBezierCurve3\n\t\t * THREE.LineCurve3\n\t\t * THREE.QuadraticBezierCurve3\n\t\t *\n\t\t * A series of curves can be represented as a THREE.CurvePath.\n\t\t *\n\t\t **/\n\t\n\t\t/**************************************************************\n\t\t *\tAbstract Curve base class\n\t\t **************************************************************/\n\t\n\t\tfunction Curve() {\n\t\n\t\t\tthis.arcLengthDivisions = 200;\n\t\n\t\t}\n\t\n\t\tObject.assign( Curve.prototype, {\n\t\n\t\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t\t//\t- t [0 .. 1]\n\t\n\t\t\tgetPoint: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\t\treturn null;\n\t\n\t\t\t},\n\t\n\t\t\t// Get point at relative position in curve according to arc length\n\t\t\t// - u [0 .. 1]\n\t\n\t\t\tgetPointAt: function ( u ) {\n\t\n\t\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\t\treturn this.getPoint( t );\n\t\n\t\t\t},\n\t\n\t\t\t// Get sequence of points using getPoint( t )\n\t\n\t\t\tgetPoints: function ( divisions ) {\n\t\n\t\t\t\tif ( divisions === undefined ) divisions = 5;\n\t\n\t\t\t\tvar points = [];\n\t\n\t\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\t\n\t\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn points;\n\t\n\t\t\t},\n\t\n\t\t\t// Get sequence of points using getPointAt( u )\n\t\n\t\t\tgetSpacedPoints: function ( divisions ) {\n\t\n\t\t\t\tif ( divisions === undefined ) divisions = 5;\n\t\n\t\t\t\tvar points = [];\n\t\n\t\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\t\n\t\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn points;\n\t\n\t\t\t},\n\t\n\t\t\t// Get total curve arc length\n\t\n\t\t\tgetLength: function () {\n\t\n\t\t\t\tvar lengths = this.getLengths();\n\t\t\t\treturn lengths[ lengths.length - 1 ];\n\t\n\t\t\t},\n\t\n\t\t\t// Get list of cumulative segment lengths\n\t\n\t\t\tgetLengths: function ( divisions ) {\n\t\n\t\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\t\n\t\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t\t! this.needsUpdate ) {\n\t\n\t\t\t\t\treturn this.cacheArcLengths;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.needsUpdate = false;\n\t\n\t\t\t\tvar cache = [];\n\t\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\t\tvar p, sum = 0;\n\t\n\t\t\t\tcache.push( 0 );\n\t\n\t\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\t\n\t\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\t\tcache.push( sum );\n\t\t\t\t\tlast = current;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.cacheArcLengths = cache;\n\t\n\t\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\n\t\t\t},\n\t\n\t\t\tupdateArcLengths: function () {\n\t\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t\tthis.getLengths();\n\t\n\t\t\t},\n\t\n\t\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\t\n\t\t\tgetUtoTmapping: function ( u, distance ) {\n\t\n\t\t\t\tvar arcLengths = this.getLengths();\n\t\n\t\t\t\tvar i = 0, il = arcLengths.length;\n\t\n\t\t\t\tvar targetArcLength; // The targeted u distance value to get\n\t\n\t\t\t\tif ( distance ) {\n\t\n\t\t\t\t\ttargetArcLength = distance;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// binary search for the index with largest value smaller than target u distance\n\t\n\t\t\t\tvar low = 0, high = il - 1, comparison;\n\t\n\t\t\t\twhile ( low <= high ) {\n\t\n\t\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\t\n\t\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\t\n\t\t\t\t\tif ( comparison < 0 ) {\n\t\n\t\t\t\t\t\tlow = i + 1;\n\t\n\t\t\t\t\t} else if ( comparison > 0 ) {\n\t\n\t\t\t\t\t\thigh = i - 1;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\thigh = i;\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// DONE\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\ti = high;\n\t\n\t\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\t\n\t\t\t\t\treturn i / ( il - 1 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\t\n\t\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\t\n\t\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\t\n\t\t\t\t// determine where we are between the 'before' and 'after' points\n\t\n\t\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\t\n\t\t\t\t// add that fractional amount to t\n\t\n\t\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\t\n\t\t\t\treturn t;\n\t\n\t\t\t},\n\t\n\t\t\t// Returns a unit vector tangent at t\n\t\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t\t// which seems to give a reasonable approximation\n\t\n\t\t\tgetTangent: function ( t ) {\n\t\n\t\t\t\tvar delta = 0.0001;\n\t\t\t\tvar t1 = t - delta;\n\t\t\t\tvar t2 = t + delta;\n\t\n\t\t\t\t// Capping in case of danger\n\t\n\t\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\t\tif ( t2 > 1 ) t2 = 1;\n\t\n\t\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\t\tvar pt2 = this.getPoint( t2 );\n\t\n\t\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\t\treturn vec.normalize();\n\t\n\t\t\t},\n\t\n\t\t\tgetTangentAt: function ( u ) {\n\t\n\t\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\t\treturn this.getTangent( t );\n\t\n\t\t\t},\n\t\n\t\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\t\n\t\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\n\t\t\t\tvar normal = new Vector3();\n\t\n\t\t\t\tvar tangents = [];\n\t\t\t\tvar normals = [];\n\t\t\t\tvar binormals = [];\n\t\n\t\t\t\tvar vec = new Vector3();\n\t\t\t\tvar mat = new Matrix4();\n\t\n\t\t\t\tvar i, u, theta;\n\t\n\t\t\t\t// compute the tangent vectors for each segment on the curve\n\t\n\t\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\t\n\t\t\t\t\tu = i / segments;\n\t\n\t\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\t\ttangents[ i ].normalize();\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t\t// and in the direction of the minimum tangent xyz component\n\t\n\t\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\t\tvar min = Number.MAX_VALUE;\n\t\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\t\n\t\t\t\tif ( tx <= min ) {\n\t\n\t\t\t\t\tmin = tx;\n\t\t\t\t\tnormal.set( 1, 0, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( ty <= min ) {\n\t\n\t\t\t\t\tmin = ty;\n\t\t\t\t\tnormal.set( 0, 1, 0 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( tz <= min ) {\n\t\n\t\t\t\t\tnormal.set( 0, 0, 1 );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\t\n\t\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\t\n\t\n\t\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\t\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\t\n\t\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\t\n\t\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\t\n\t\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\t\n\t\t\t\t\t\tvec.normalize();\n\t\n\t\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\t\n\t\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\t\n\t\t\t\tif ( closed === true ) {\n\t\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\t\ttheta /= segments;\n\t\n\t\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\t\n\t\t\t\t\t\ttheta = - theta;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\t\n\t\t\t\t\t\t// twist a little...\n\t\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\ttangents: tangents,\n\t\t\t\t\tnormals: normals,\n\t\t\t\t\tbinormals: binormals\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tfunction LineCurve( v1, v2 ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\n\t\t}\n\t\n\t\tLineCurve.prototype = Object.create( Curve.prototype );\n\t\tLineCurve.prototype.constructor = LineCurve;\n\t\n\t\tLineCurve.prototype.isLineCurve = true;\n\t\n\t\tLineCurve.prototype.getPoint = function ( t ) {\n\t\n\t\t\tif ( t === 1 ) {\n\t\n\t\t\t\treturn this.v2.clone();\n\t\n\t\t\t}\n\t\n\t\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\t\n\t\t\treturn point;\n\t\n\t\t};\n\t\n\t\t// Line curve is linear, so we can overwrite default getPointAt\n\t\n\t\tLineCurve.prototype.getPointAt = function ( u ) {\n\t\n\t\t\treturn this.getPoint( u );\n\t\n\t\t};\n\t\n\t\tLineCurve.prototype.getTangent = function ( t ) {\n\t\n\t\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\t\n\t\t\treturn tangent.normalize();\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t **/\n\t\n\t\t/**************************************************************\n\t\t *\tCurved Path - a curve path is simply a array of connected\n\t\t *  curves, but retains the api of a curve\n\t\t **************************************************************/\n\t\n\t\tfunction CurvePath() {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.curves = [];\n\t\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\n\t\t}\n\t\n\t\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\t\n\t\t\tconstructor: CurvePath,\n\t\n\t\t\tadd: function ( curve ) {\n\t\n\t\t\t\tthis.curves.push( curve );\n\t\n\t\t\t},\n\t\n\t\t\tclosePath: function () {\n\t\n\t\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\t\n\t\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\t\n\t\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// To get accurate point with reference to\n\t\t\t// entire path distance at time t,\n\t\t\t// following has to be done:\n\t\n\t\t\t// 1. Length of each sub path have to be known\n\t\t\t// 2. Locate and identify type of curve\n\t\t\t// 3. Get t for the curve\n\t\t\t// 4. Return curve.getPointAt(t')\n\t\n\t\t\tgetPoint: function ( t ) {\n\t\n\t\t\t\tvar d = t * this.getLength();\n\t\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\t// To think about boundaries points.\n\t\n\t\t\t\twhile ( i < curveLengths.length ) {\n\t\n\t\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\t\n\t\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\t\tvar curve = this.curves[ i ];\n\t\n\t\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\n\t\t\t\t\t\treturn curve.getPointAt( u );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti ++;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\n\t\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\t\n\t\t\t},\n\t\n\t\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t\t// getPoint() depends on getLength\n\t\n\t\t\tgetLength: function () {\n\t\n\t\t\t\tvar lens = this.getCurveLengths();\n\t\t\t\treturn lens[ lens.length - 1 ];\n\t\n\t\t\t},\n\t\n\t\t\t// cacheLengths must be recalculated.\n\t\t\tupdateArcLengths: function () {\n\t\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t\tthis.cacheLengths = null;\n\t\t\t\tthis.getCurveLengths();\n\t\n\t\t\t},\n\t\n\t\t\t// Compute lengths and cache them\n\t\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\t\n\t\t\tgetCurveLengths: function () {\n\t\n\t\t\t\t// We use cache values if curves and cache array are same length\n\t\n\t\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\t\n\t\t\t\t\treturn this.cacheLengths;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// Get length of sub-curve\n\t\t\t\t// Push sums into cached array\n\t\n\t\t\t\tvar lengths = [], sums = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\t\tlengths.push( sums );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.cacheLengths = lengths;\n\t\n\t\t\t\treturn lengths;\n\t\n\t\t\t},\n\t\n\t\t\tgetSpacedPoints: function ( divisions ) {\n\t\n\t\t\t\tif ( divisions === undefined ) divisions = 40;\n\t\n\t\t\t\tvar points = [];\n\t\n\t\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\t\n\t\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.autoClose ) {\n\t\n\t\t\t\t\tpoints.push( points[ 0 ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn points;\n\t\n\t\t\t},\n\t\n\t\t\tgetPoints: function ( divisions ) {\n\t\n\t\t\t\tdivisions = divisions || 12;\n\t\n\t\t\t\tvar points = [], last;\n\t\n\t\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\t\n\t\t\t\t\tvar curve = curves[ i ];\n\t\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\t\n\t\t\t\t\tvar pts = curve.getPoints( resolution );\n\t\n\t\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\t\n\t\t\t\t\t\tvar point = pts[ j ];\n\t\n\t\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\t\n\t\t\t\t\t\tpoints.push( point );\n\t\t\t\t\t\tlast = point;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\t\n\t\t\t\t\tpoints.push( points[ 0 ] );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn points;\n\t\n\t\t\t},\n\t\n\t\t\t/**************************************************************\n\t\t\t *\tCreate Geometries Helpers\n\t\t\t **************************************************************/\n\t\n\t\t\t/// Generate geometry from path points (for Line or Points objects)\n\t\n\t\t\tcreatePointsGeometry: function ( divisions ) {\n\t\n\t\t\t\tvar pts = this.getPoints( divisions );\n\t\t\t\treturn this.createGeometry( pts );\n\t\n\t\t\t},\n\t\n\t\t\t// Generate geometry from equidistant sampling along the path\n\t\n\t\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\t\n\t\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\t\treturn this.createGeometry( pts );\n\t\n\t\t\t},\n\t\n\t\t\tcreateGeometry: function ( points ) {\n\t\n\t\t\t\tvar geometry = new Geometry();\n\t\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar point = points[ i ];\n\t\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn geometry;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\n\t\t\tthis.aClockwise = aClockwise;\n\t\n\t\t\tthis.aRotation = aRotation || 0;\n\t\n\t\t}\n\t\n\t\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\t\tEllipseCurve.prototype.constructor = EllipseCurve;\n\t\n\t\tEllipseCurve.prototype.isEllipseCurve = true;\n\t\n\t\tEllipseCurve.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar twoPi = Math.PI * 2;\n\t\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\t\n\t\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\t\n\t\t\tif ( deltaAngle < Number.EPSILON ) {\n\t\n\t\t\t\tif ( samePoints ) {\n\t\n\t\t\t\t\tdeltaAngle = 0;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tif ( this.aClockwise === true && ! samePoints ) {\n\t\n\t\t\t\tif ( deltaAngle === twoPi ) {\n\t\n\t\t\t\t\tdeltaAngle = - twoPi;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\t\n\t\t\tif ( this.aRotation !== 0 ) {\n\t\n\t\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\t\tvar sin = Math.sin( this.aRotation );\n\t\n\t\t\t\tvar tx = x - this.aX;\n\t\t\t\tvar ty = y - this.aY;\n\t\n\t\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\n\t\t\t}\n\t\n\t\t\treturn new Vector2( x, y );\n\t\n\t\t};\n\t\n\t\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.points = ( points === undefined ) ? [] : points;\n\t\n\t\t}\n\t\n\t\tSplineCurve.prototype = Object.create( Curve.prototype );\n\t\tSplineCurve.prototype.constructor = SplineCurve;\n\t\n\t\tSplineCurve.prototype.isSplineCurve = true;\n\t\n\t\tSplineCurve.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar points = this.points;\n\t\t\tvar point = ( points.length - 1 ) * t;\n\t\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\t\n\t\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\t\tvar point1 = points[ intPoint ];\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\t\n\t\t\treturn new Vector2(\n\t\t\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\t\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t\t\t);\n\t\n\t\t};\n\t\n\t\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\n\t\t}\n\t\n\t\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\t\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\t\n\t\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\t\n\t\t\treturn new Vector2(\n\t\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t\t);\n\t\n\t\t};\n\t\n\t\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\n\t\t}\n\t\n\t\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\t\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\t\n\t\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\t\n\t\t\treturn new Vector2(\n\t\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t\t);\n\t\n\t\t};\n\t\n\t\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\t\n\t\t\tfromPoints: function ( vectors ) {\n\t\n\t\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\t\n\t\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmoveTo: function ( x, y ) {\n\t\n\t\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\t\n\t\t\t},\n\t\n\t\t\tlineTo: function ( x, y ) {\n\t\n\t\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\t\tthis.curves.push( curve );\n\t\n\t\t\t\tthis.currentPoint.set( x, y );\n\t\n\t\t\t},\n\t\n\t\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\n\t\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\t\tnew Vector2( aX, aY )\n\t\t\t\t);\n\t\n\t\t\t\tthis.curves.push( curve );\n\t\n\t\t\t\tthis.currentPoint.set( aX, aY );\n\t\n\t\t\t},\n\t\n\t\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\n\t\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\t\tnew Vector2( aX, aY )\n\t\t\t\t);\n\t\n\t\t\t\tthis.curves.push( curve );\n\t\n\t\t\t\tthis.currentPoint.set( aX, aY );\n\t\n\t\t\t},\n\t\n\t\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\t\n\t\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\t\n\t\t\t\tvar curve = new SplineCurve( npts );\n\t\t\t\tthis.curves.push( curve );\n\t\n\t\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\t\n\t\t\t},\n\t\n\t\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\t\n\t\t\t\tvar x0 = this.currentPoint.x;\n\t\t\t\tvar y0 = this.currentPoint.y;\n\t\n\t\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\t\n\t\t\t},\n\t\n\t\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\t\n\t\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\t\n\t\t\t},\n\t\n\t\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\t\n\t\t\t\tvar x0 = this.currentPoint.x;\n\t\t\t\tvar y0 = this.currentPoint.y;\n\t\n\t\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\t\n\t\t\t},\n\t\n\t\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\t\n\t\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\t\n\t\t\t\tif ( this.curves.length > 0 ) {\n\t\n\t\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\t\n\t\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\t\n\t\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.curves.push( curve );\n\t\n\t\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\t\tthis.currentPoint.copy( lastPoint );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * Creates free form 2d path using series of points, lines or curves.\n\t\t **/\n\t\n\t\tfunction Path( points ) {\n\t\n\t\t\tCurvePath.call( this );\n\t\t\tthis.currentPoint = new Vector2();\n\t\n\t\t\tif ( points ) {\n\t\n\t\t\t\tthis.fromPoints( points );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tPath.prototype = PathPrototype;\n\t\tPathPrototype.constructor = Path;\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * Defines a 2d shape plane using paths.\n\t\t **/\n\t\n\t\t// STEP 1 Create a path.\n\t\t// STEP 2 Turn path into shape.\n\t\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t\t// STEP 3a - Extract points from each shape, turn to vertices\n\t\t// STEP 3b - Triangulate each shape, add faces.\n\t\n\t\tfunction Shape() {\n\t\n\t\t\tPath.apply( this, arguments );\n\t\n\t\t\tthis.holes = [];\n\t\n\t\t}\n\t\n\t\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\t\n\t\t\tconstructor: Shape,\n\t\n\t\t\tgetPointsHoles: function ( divisions ) {\n\t\n\t\t\t\tvar holesPts = [];\n\t\n\t\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn holesPts;\n\t\n\t\t\t},\n\t\n\t\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\t\n\t\t\textractAllPoints: function ( divisions ) {\n\t\n\t\t\t\treturn {\n\t\n\t\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\t\tholes: this.getPointsHoles( divisions )\n\t\n\t\t\t\t};\n\t\n\t\t\t},\n\t\n\t\t\textractPoints: function ( divisions ) {\n\t\n\t\t\t\treturn this.extractAllPoints( divisions );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t\t **/\n\t\n\t\tfunction ShapePath() {\n\t\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\n\t\t}\n\t\n\t\tObject.assign( ShapePath.prototype, {\n\t\n\t\t\tmoveTo: function ( x, y ) {\n\t\n\t\t\t\tthis.currentPath = new Path();\n\t\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\t\tthis.currentPath.moveTo( x, y );\n\t\n\t\t\t},\n\t\n\t\t\tlineTo: function ( x, y ) {\n\t\n\t\t\t\tthis.currentPath.lineTo( x, y );\n\t\n\t\t\t},\n\t\n\t\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\n\t\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\t\n\t\t\t},\n\t\n\t\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\n\t\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\t\n\t\t\t},\n\t\n\t\t\tsplineThru: function ( pts ) {\n\t\n\t\t\t\tthis.currentPath.splineThru( pts );\n\t\n\t\t\t},\n\t\n\t\t\ttoShapes: function ( isCCW, noHoles ) {\n\t\n\t\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\t\n\t\t\t\t\tvar shapes = [];\n\t\n\t\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\t\n\t\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\n\t\t\t\t\t\tshapes.push( tmpShape );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn shapes;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\t\n\t\t\t\t\tvar polyLen = inPolygon.length;\n\t\n\t\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\t\tvar inside = false;\n\t\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\t\n\t\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\t\n\t\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\t\n\t\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\t\n\t\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\t\n\t\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\t\n\t\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\t\n\t\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t\t// continue;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn\tinside;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\t\n\t\t\t\tvar subPaths = this.subPaths;\n\t\t\t\tif ( subPaths.length === 0 ) return [];\n\t\n\t\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\t\n\t\n\t\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\t\n\t\t\t\tif ( subPaths.length === 1 ) {\n\t\n\t\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\t\ttmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push( tmpShape );\n\t\t\t\t\treturn shapes;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\t\n\t\t\t\t// console.log(\"Holes first\", holesFirst);\n\t\n\t\t\t\tvar betterShapeHoles = [];\n\t\t\t\tvar newShapes = [];\n\t\t\t\tvar newShapeHoles = [];\n\t\t\t\tvar mainIdx = 0;\n\t\t\t\tvar tmpPoints;\n\t\n\t\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\t\n\t\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\t\n\t\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\t\tsolid = isCCW ? ! solid : solid;\n\t\n\t\t\t\t\tif ( solid ) {\n\t\n\t\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\t\n\t\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\t\n\t\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\t\n\t\t\t\t\t\t//console.log('cw', i);\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\t\n\t\t\t\t\t\t//console.log('ccw', i);\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\t\n\t\n\t\t\t\tif ( newShapes.length > 1 ) {\n\t\n\t\t\t\t\tvar ambiguous = false;\n\t\t\t\t\tvar toChange = [];\n\t\n\t\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\t\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\t\n\t\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\t\n\t\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\t\n\t\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\t\tvar hole_unassigned = true;\n\t\n\t\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\t\n\t\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\t\n\t\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\t\n\t\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\t\n\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\t\n\t\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\t\tif ( toChange.length > 0 ) {\n\t\n\t\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar tmpHoles;\n\t\n\t\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\t\n\t\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\t\tshapes.push( tmpShape );\n\t\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\t\n\t\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//console.log(\"shape\", shapes);\n\t\n\t\t\t\treturn shapes;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Font( data ) {\n\t\n\t\t\tthis.data = data;\n\t\n\t\t}\n\t\n\t\tObject.assign( Font.prototype, {\n\t\n\t\t\tisFont: true,\n\t\n\t\t\tgenerateShapes: function ( text, size, divisions ) {\n\t\n\t\t\t\tfunction createPaths( text ) {\n\t\n\t\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\t\n\t\t\t\t\tvar offsetX = 0, offsetY = 0;\n\t\n\t\t\t\t\tvar paths = [];\n\t\n\t\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\t\n\t\t\t\t\t\tvar char = chars[ i ];\n\t\n\t\t\t\t\t\tif ( char === '\\n' ) {\n\t\n\t\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\t\toffsetY -= line_height;\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\t\t\tpaths.push( ret.path );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn paths;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\t\n\t\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\t\n\t\t\t\t\tif ( ! glyph ) return;\n\t\n\t\t\t\t\tvar path = new ShapePath();\n\t\n\t\t\t\t\tvar pts = [];\n\t\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\t\n\t\t\t\t\tif ( glyph.o ) {\n\t\n\t\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\t\n\t\t\t\t\t\t\tvar action = outline[ i ++ ];\n\t\n\t\t\t\t\t\t\tswitch ( action ) {\n\t\n\t\t\t\t\t\t\t\tcase 'm': // moveTo\n\t\n\t\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\t\n\t\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'l': // lineTo\n\t\n\t\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\t\n\t\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\t\n\t\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\n\t\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\t\n\t\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\t\n\t\t\t\t\t\t\t\t\tif ( laste ) {\n\t\n\t\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\t\n\t\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\t\n\t\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\t\n\t\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\t\n\t\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\t\n\t\t\t\t\t\t\t\t\tif ( laste ) {\n\t\n\t\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\t\n\t\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//\n\t\n\t\t\t\tif ( size === undefined ) size = 100;\n\t\t\t\tif ( divisions === undefined ) divisions = 4;\n\t\n\t\t\t\tvar data = this.data;\n\t\n\t\t\t\tvar paths = createPaths( text );\n\t\t\t\tvar shapes = [];\n\t\n\t\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\t\n\t\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn shapes;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction FontLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( FontLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\t\tloader.load( url, function ( text ) {\n\t\n\t\t\t\t\tvar json;\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\tjson = JSON.parse( text );\n\t\n\t\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar font = scope.parse( json );\n\t\n\t\t\t\t\tif ( onLoad ) onLoad( font );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t},\n\t\n\t\t\tparse: function ( json ) {\n\t\n\t\t\t\treturn new Font( json );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tvar context;\n\t\n\t\tvar AudioContext = {\n\t\n\t\t\tgetContext: function () {\n\t\n\t\t\t\tif ( context === undefined ) {\n\t\n\t\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn context;\n\t\n\t\t\t},\n\t\n\t\t\tsetContext: function ( value ) {\n\t\n\t\t\t\tcontext = value;\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t\t */\n\t\n\t\tfunction AudioLoader( manager ) {\n\t\n\t\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\n\t\t}\n\t\n\t\tObject.assign( AudioLoader.prototype, {\n\t\n\t\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\n\t\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\t\tloader.load( url, function ( buffer ) {\n\t\n\t\t\t\t\tvar context = AudioContext.getContext();\n\t\n\t\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\t\n\t\t\t\t\t\tonLoad( audioBuffer );\n\t\n\t\t\t\t\t} );\n\t\n\t\t\t\t}, onProgress, onError );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction StereoCamera() {\n\t\n\t\t\tthis.type = 'StereoCamera';\n\t\n\t\t\tthis.aspect = 1;\n\t\n\t\t\tthis.eyeSep = 0.064;\n\t\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable( 1 );\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable( 2 );\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\n\t\t}\n\t\n\t\tObject.assign( StereoCamera.prototype, {\n\t\n\t\t\tupdate: ( function () {\n\t\n\t\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\t\n\t\t\t\tvar eyeRight = new Matrix4();\n\t\t\t\tvar eyeLeft = new Matrix4();\n\t\n\t\t\t\treturn function update( camera ) {\n\t\n\t\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\t\n\t\t\t\t\tif ( needsUpdate ) {\n\t\n\t\t\t\t\t\tinstance = this;\n\t\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\t\tnear = camera.near;\n\t\t\t\t\t\tfar = camera.far;\n\t\t\t\t\t\tzoom = camera.zoom;\n\t\n\t\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\t\n\t\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\t\tvar xmin, xmax;\n\t\n\t\t\t\t\t\t// translate xOffset\n\t\n\t\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\t\n\t\t\t\t\t\t// for left eye\n\t\n\t\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\t\n\t\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\t\n\t\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\t\n\t\t\t\t\t\t// for right eye\n\t\n\t\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\t\n\t\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\t\n\t\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\t\n\t\t\t\t};\n\t\n\t\t\t} )()\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * Camera for rendering cube maps\n\t\t *\t- renders scene into axis-aligned cube\n\t\t *\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction CubeCamera( near, far, cubeResolution ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'CubeCamera';\n\t\n\t\t\tvar fov = 90, aspect = 1;\n\t\n\t\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\t\tthis.add( cameraPX );\n\t\n\t\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\t\tthis.add( cameraNX );\n\t\n\t\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\t\tthis.add( cameraPY );\n\t\n\t\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\t\tthis.add( cameraNY );\n\t\n\t\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\t\tthis.add( cameraPZ );\n\t\n\t\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\t\tthis.add( cameraNZ );\n\t\n\t\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\t\n\t\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\t\n\t\t\tthis.update = function ( renderer, scene ) {\n\t\n\t\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\t\n\t\t\t\tvar renderTarget = this.renderTarget;\n\t\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\n\t\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\n\t\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\t\n\t\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\t\n\t\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\t\n\t\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\t\n\t\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\t\n\t\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\n\t\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\t\n\t\t\t\trenderer.setRenderTarget( null );\n\t\n\t\t\t};\n\t\n\t\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\t\n\t\t\t\tvar renderTarget = this.renderTarget;\n\t\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\t\n\t\t\t\t\trenderTarget.activeCubeFace = i;\n\t\t\t\t\trenderer.setRenderTarget( renderTarget );\n\t\n\t\t\t\t\trenderer.clear( color, depth, stencil );\n\t\n\t\t\t\t}\n\t\n\t\t\t\trenderer.setRenderTarget( null );\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\t\tCubeCamera.prototype.constructor = CubeCamera;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction AudioListener() {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'AudioListener';\n\t\n\t\t\tthis.context = AudioContext.getContext();\n\t\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect( this.context.destination );\n\t\n\t\t\tthis.filter = null;\n\t\n\t\t}\n\t\n\t\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: AudioListener,\n\t\n\t\t\tgetInput: function () {\n\t\n\t\t\t\treturn this.gain;\n\t\n\t\t\t},\n\t\n\t\t\tremoveFilter: function ( ) {\n\t\n\t\t\t\tif ( this.filter !== null ) {\n\t\n\t\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\t\tthis.filter = null;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tgetFilter: function () {\n\t\n\t\t\t\treturn this.filter;\n\t\n\t\t\t},\n\t\n\t\t\tsetFilter: function ( value ) {\n\t\n\t\t\t\tif ( this.filter !== null ) {\n\t\n\t\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.gain.disconnect( this.context.destination );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.filter = value;\n\t\t\t\tthis.gain.connect( this.filter );\n\t\t\t\tthis.filter.connect( this.context.destination );\n\t\n\t\t\t},\n\t\n\t\t\tgetMasterVolume: function () {\n\t\n\t\t\t\treturn this.gain.gain.value;\n\t\n\t\t\t},\n\t\n\t\t\tsetMasterVolume: function ( value ) {\n\t\n\t\t\t\tthis.gain.gain.value = value;\n\t\n\t\t\t},\n\t\n\t\t\tupdateMatrixWorld: ( function () {\n\t\n\t\t\t\tvar position = new Vector3();\n\t\t\t\tvar quaternion = new Quaternion();\n\t\t\t\tvar scale = new Vector3();\n\t\n\t\t\t\tvar orientation = new Vector3();\n\t\n\t\t\t\treturn function updateMatrixWorld( force ) {\n\t\n\t\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\t\n\t\t\t\t\tvar listener = this.context.listener;\n\t\t\t\t\tvar up = this.up;\n\t\n\t\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\t\n\t\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\t\n\t\t\t\t\tif ( listener.positionX ) {\n\t\n\t\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t} )()\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t\t */\n\t\n\t\tfunction Audio( listener ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.type = 'Audio';\n\t\n\t\t\tthis.context = listener.context;\n\t\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect( listener.getInput() );\n\t\n\t\t\tthis.autoplay = false;\n\t\n\t\t\tthis.buffer = null;\n\t\t\tthis.loop = false;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.sourceType = 'empty';\n\t\n\t\t\tthis.filters = [];\n\t\n\t\t}\n\t\n\t\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\t\n\t\t\tconstructor: Audio,\n\t\n\t\t\tgetOutput: function () {\n\t\n\t\t\t\treturn this.gain;\n\t\n\t\t\t},\n\t\n\t\t\tsetNodeSource: function ( audioNode ) {\n\t\n\t\t\t\tthis.hasPlaybackControl = false;\n\t\t\t\tthis.sourceType = 'audioNode';\n\t\t\t\tthis.source = audioNode;\n\t\t\t\tthis.connect();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetBuffer: function ( audioBuffer ) {\n\t\n\t\t\t\tthis.buffer = audioBuffer;\n\t\t\t\tthis.sourceType = 'buffer';\n\t\n\t\t\t\tif ( this.autoplay ) this.play();\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tplay: function () {\n\t\n\t\t\t\tif ( this.isPlaying === true ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.hasPlaybackControl === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar source = this.context.createBufferSource();\n\t\n\t\t\t\tsource.buffer = this.buffer;\n\t\t\t\tsource.loop = this.loop;\n\t\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\t\t\tsource.start( 0, this.startTime );\n\t\n\t\t\t\tthis.isPlaying = true;\n\t\n\t\t\t\tthis.source = source;\n\t\n\t\t\t\treturn this.connect();\n\t\n\t\t\t},\n\t\n\t\t\tpause: function () {\n\t\n\t\t\t\tif ( this.hasPlaybackControl === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.startTime = this.context.currentTime;\n\t\t\t\tthis.isPlaying = false;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tstop: function () {\n\t\n\t\t\t\tif ( this.hasPlaybackControl === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.startTime = 0;\n\t\t\t\tthis.isPlaying = false;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tconnect: function () {\n\t\n\t\t\t\tif ( this.filters.length > 0 ) {\n\t\n\t\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\t\n\t\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.source.connect( this.getOutput() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tdisconnect: function () {\n\t\n\t\t\t\tif ( this.filters.length > 0 ) {\n\t\n\t\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\t\n\t\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.source.disconnect( this.getOutput() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetFilters: function () {\n\t\n\t\t\t\treturn this.filters;\n\t\n\t\t\t},\n\t\n\t\t\tsetFilters: function ( value ) {\n\t\n\t\t\t\tif ( ! value ) value = [];\n\t\n\t\t\t\tif ( this.isPlaying === true ) {\n\t\n\t\t\t\t\tthis.disconnect();\n\t\t\t\t\tthis.filters = value;\n\t\t\t\t\tthis.connect();\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.filters = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetFilter: function () {\n\t\n\t\t\t\treturn this.getFilters()[ 0 ];\n\t\n\t\t\t},\n\t\n\t\t\tsetFilter: function ( filter ) {\n\t\n\t\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\t\n\t\t\t},\n\t\n\t\t\tsetPlaybackRate: function ( value ) {\n\t\n\t\t\t\tif ( this.hasPlaybackControl === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.playbackRate = value;\n\t\n\t\t\t\tif ( this.isPlaying === true ) {\n\t\n\t\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetPlaybackRate: function () {\n\t\n\t\t\t\treturn this.playbackRate;\n\t\n\t\t\t},\n\t\n\t\t\tonEnded: function () {\n\t\n\t\t\t\tthis.isPlaying = false;\n\t\n\t\t\t},\n\t\n\t\t\tgetLoop: function () {\n\t\n\t\t\t\tif ( this.hasPlaybackControl === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this.loop;\n\t\n\t\t\t},\n\t\n\t\t\tsetLoop: function ( value ) {\n\t\n\t\t\t\tif ( this.hasPlaybackControl === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.loop = value;\n\t\n\t\t\t\tif ( this.isPlaying === true ) {\n\t\n\t\t\t\t\tthis.source.loop = this.loop;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetVolume: function () {\n\t\n\t\t\t\treturn this.gain.gain.value;\n\t\n\t\t\t},\n\t\n\t\t\tsetVolume: function ( value ) {\n\t\n\t\t\t\tthis.gain.gain.value = value;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction PositionalAudio( listener ) {\n\t\n\t\t\tAudio.call( this, listener );\n\t\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.connect( this.gain );\n\t\n\t\t}\n\t\n\t\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\t\n\t\t\tconstructor: PositionalAudio,\n\t\n\t\t\tgetOutput: function () {\n\t\n\t\t\t\treturn this.panner;\n\t\n\t\t\t},\n\t\n\t\t\tgetRefDistance: function () {\n\t\n\t\t\t\treturn this.panner.refDistance;\n\t\n\t\t\t},\n\t\n\t\t\tsetRefDistance: function ( value ) {\n\t\n\t\t\t\tthis.panner.refDistance = value;\n\t\n\t\t\t},\n\t\n\t\t\tgetRolloffFactor: function () {\n\t\n\t\t\t\treturn this.panner.rolloffFactor;\n\t\n\t\t\t},\n\t\n\t\t\tsetRolloffFactor: function ( value ) {\n\t\n\t\t\t\tthis.panner.rolloffFactor = value;\n\t\n\t\t\t},\n\t\n\t\t\tgetDistanceModel: function () {\n\t\n\t\t\t\treturn this.panner.distanceModel;\n\t\n\t\t\t},\n\t\n\t\t\tsetDistanceModel: function ( value ) {\n\t\n\t\t\t\tthis.panner.distanceModel = value;\n\t\n\t\t\t},\n\t\n\t\t\tgetMaxDistance: function () {\n\t\n\t\t\t\treturn this.panner.maxDistance;\n\t\n\t\t\t},\n\t\n\t\t\tsetMaxDistance: function ( value ) {\n\t\n\t\t\t\tthis.panner.maxDistance = value;\n\t\n\t\t\t},\n\t\n\t\t\tupdateMatrixWorld: ( function () {\n\t\n\t\t\t\tvar position = new Vector3();\n\t\n\t\t\t\treturn function updateMatrixWorld( force ) {\n\t\n\t\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\t\n\t\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\t\n\t\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\t\n\t\t\t\t};\n\t\n\t\t\t} )()\n\t\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction AudioAnalyser( audio, fftSize ) {\n\t\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\t\n\t\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\t\n\t\t\taudio.getOutput().connect( this.analyser );\n\t\n\t\t}\n\t\n\t\tObject.assign( AudioAnalyser.prototype, {\n\t\n\t\t\tgetFrequencyData: function () {\n\t\n\t\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\t\n\t\t\t\treturn this.data;\n\t\n\t\t\t},\n\t\n\t\t\tgetAverageFrequency: function () {\n\t\n\t\t\t\tvar value = 0, data = this.getFrequencyData();\n\t\n\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\t\n\t\t\t\t\tvalue += data[ i ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn value / data.length;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * Buffered scene graph property that allows weighted accumulation.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\t\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\n\t\t\tvar bufferType = Float64Array,\n\t\t\t\tmixFunction;\n\t\n\t\t\tswitch ( typeName ) {\n\t\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tbufferType = Array;\n\t\t\t\t\tmixFunction = this._select;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\n\t\t\t}\n\t\n\t\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\n\t\t\tthis.cumulativeWeight = 0;\n\t\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\n\t\t}\n\t\n\t\tObject.assign( PropertyMixer.prototype, {\n\t\n\t\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\t\taccumulate: function ( accuIndex, weight ) {\n\t\n\t\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t\t// the weight and shouldn't have made the call in the first place\n\t\n\t\t\t\tvar buffer = this.buffer,\n\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\n\t\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\t\n\t\t\t\tif ( currentWeight === 0 ) {\n\t\n\t\t\t\t\t// accuN := incoming * weight\n\t\n\t\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\t\n\t\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcurrentWeight = weight;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// accuN := accuN + incoming * weight\n\t\n\t\t\t\t\tcurrentWeight += weight;\n\t\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.cumulativeWeight = currentWeight;\n\t\n\t\t\t},\n\t\n\t\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\t\tapply: function ( accuIndex ) {\n\t\n\t\t\t\tvar stride = this.valueSize,\n\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\n\t\t\t\t\tweight = this.cumulativeWeight,\n\t\n\t\t\t\t\tbinding = this.binding;\n\t\n\t\t\t\tthis.cumulativeWeight = 0;\n\t\n\t\t\t\tif ( weight < 1 ) {\n\t\n\t\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\n\t\t\t\t\tvar originalValueOffset = stride * 3;\n\t\n\t\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\t\n\t\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\t\n\t\t\t\t\t\t// value has changed -> update scene graph\n\t\n\t\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// remember the state of the bound property and copy it to both accus\n\t\t\tsaveOriginalState: function () {\n\t\n\t\t\t\tvar binding = this.binding;\n\t\n\t\t\t\tvar buffer = this.buffer,\n\t\t\t\t\tstride = this.valueSize,\n\t\n\t\t\t\t\toriginalValueOffset = stride * 3;\n\t\n\t\t\t\tbinding.getValue( buffer, originalValueOffset );\n\t\n\t\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\t\n\t\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.cumulativeWeight = 0;\n\t\n\t\t\t},\n\t\n\t\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\t\trestoreOriginalState: function () {\n\t\n\t\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\t\n\t\t\t},\n\t\n\t\n\t\t\t// mix functions\n\t\n\t\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\t\n\t\t\t\tif ( t >= 0.5 ) {\n\t\n\t\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\t\n\t\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\t\n\t\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\t\n\t\t\t},\n\t\n\t\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\t\n\t\t\t\tvar s = 1 - t;\n\t\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\t\n\t\t\t\t\tvar j = dstOffset + i;\n\t\n\t\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A reference to a real property in the scene graph.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\t\n\t\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\t\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\t\n\t\t}\n\t\n\t\tObject.assign( Composite.prototype, {\n\t\n\t\t\tgetValue: function ( array, offset ) {\n\t\n\t\t\t\tthis.bind(); // bind all binding\n\t\n\t\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\t\n\t\t\t\t// and only call .getValue on the first\n\t\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\t\n\t\t\t},\n\t\n\t\t\tsetValue: function ( array, offset ) {\n\t\n\t\t\t\tvar bindings = this._bindings;\n\t\n\t\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tbindings[ i ].setValue( array, offset );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tbind: function () {\n\t\n\t\t\t\tvar bindings = this._bindings;\n\t\n\t\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tbindings[ i ].bind();\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tunbind: function () {\n\t\n\t\t\t\tvar bindings = this._bindings;\n\t\n\t\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tbindings[ i ].unbind();\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\n\t\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\t\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\t\n\t\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\t\n\t\t\tthis.rootNode = rootNode;\n\t\n\t\t}\n\t\n\t\tObject.assign( PropertyBinding, {\n\t\n\t\t\tComposite: Composite,\n\t\n\t\t\tcreate: function ( root, path, parsedPath ) {\n\t\n\t\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\t\n\t\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t\t *\n\t\t\t * @param  {string} name Node name to be sanitized.\n\t\t\t * @return {string}\n\t\t\t */\n\t\t\tsanitizeNodeName: function ( name ) {\n\t\n\t\t\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\t\n\t\t\t},\n\t\n\t\t\tparseTrackName: function () {\n\t\n\t\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t\t\t// be matched to parse the rest of the track name.\n\t\t\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\t\n\t\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\t\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\t\n\t\t\t\t// Object on target node, and accessor. Name may contain only word\n\t\t\t\t// characters. Accessor may contain any character except closing bracket.\n\t\t\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\t\n\t\t\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t\t\t// contain any non-bracket characters.\n\t\t\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\t\n\t\t\t\tvar trackRe = new RegExp(''\n\t\t\t\t\t+ '^'\n\t\t\t\t\t+ directoryRe.source\n\t\t\t\t\t+ nodeRe.source\n\t\t\t\t\t+ objectRe.source\n\t\t\t\t\t+ propertyRe.source\n\t\t\t\t\t+ '$'\n\t\t\t\t);\n\t\n\t\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\t\n\t\t\t\treturn function ( trackName ) {\n\t\n\t\t\t\t\t\tvar matches = trackRe.exec( trackName );\n\t\n\t\t\t\t\t\tif ( ! matches ) {\n\t\n\t\t\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar results = {\n\t\t\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\t\n\t\t\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\t\n\t\t\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\t\n\t\t\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t\t\t// include '.' characters).\n\t\t\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\t\n\t\t\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\t\t\tresults.objectName = objectName;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\t\n\t\t\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn results;\n\t\n\t\t\t\t\t};\n\t\n\t\t\t}(),\n\t\n\t\t\tfindNode: function ( root, nodeName ) {\n\t\n\t\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\t\n\t\t\t\t\treturn root;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// search into skeleton bones.\n\t\t\t\tif ( root.skeleton ) {\n\t\n\t\t\t\t\tvar searchSkeleton = function ( skeleton ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\t\n\t\t\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\t\n\t\t\t\t\t\t\tif ( bone.name === nodeName ) {\n\t\n\t\t\t\t\t\t\t\treturn bone;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t};\n\t\n\t\t\t\t\tvar bone = searchSkeleton( root.skeleton );\n\t\n\t\t\t\t\tif ( bone ) {\n\t\n\t\t\t\t\t\treturn bone;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// search into node subtree.\n\t\t\t\tif ( root.children ) {\n\t\n\t\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\t\n\t\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\t\n\t\t\t\t\t\t\tvar childNode = children[ i ];\n\t\n\t\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\t\n\t\t\t\t\t\t\t\treturn childNode;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\t\n\t\t\t\t\t\t\tif ( result ) return result;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t};\n\t\n\t\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\t\n\t\t\t\t\tif ( subTreeNode ) {\n\t\n\t\t\t\t\t\treturn subTreeNode;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\t\n\t\t\t// these are used to \"bind\" a nonexistent property\n\t\t\t_getValue_unavailable: function () {},\n\t\t\t_setValue_unavailable: function () {},\n\t\n\t\t\tBindingType: {\n\t\t\t\tDirect: 0,\n\t\t\t\tEntireArray: 1,\n\t\t\t\tArrayElement: 2,\n\t\t\t\tHasFromToArray: 3\n\t\t\t},\n\t\n\t\t\tVersioning: {\n\t\t\t\tNone: 0,\n\t\t\t\tNeedsUpdate: 1,\n\t\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t\t},\n\t\n\t\t\tGetterByBindingType: [\n\t\n\t\t\t\tfunction getValue_direct( buffer, offset ) {\n\t\n\t\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\t\n\t\t\t\t},\n\t\n\t\t\t\tfunction getValue_array( buffer, offset ) {\n\t\n\t\t\t\t\tvar source = this.resolvedProperty;\n\t\n\t\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t},\n\t\n\t\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\t\n\t\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\t\n\t\t\t\t},\n\t\n\t\t\t\tfunction getValue_toArray( buffer, offset ) {\n\t\n\t\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\t\n\t\t\t\t}\n\t\n\t\t\t],\n\t\n\t\t\tSetterByBindingTypeAndVersioning: [\n\t\n\t\t\t\t[\n\t\t\t\t\t// Direct\n\t\n\t\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t], [\n\t\n\t\t\t\t\t// EntireArray\n\t\n\t\t\t\t\tfunction setValue_array( buffer, offset ) {\n\t\n\t\t\t\t\t\tvar dest = this.resolvedProperty;\n\t\n\t\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tvar dest = this.resolvedProperty;\n\t\n\t\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tvar dest = this.resolvedProperty;\n\t\n\t\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t], [\n\t\n\t\t\t\t\t// ArrayElement\n\t\n\t\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t], [\n\t\n\t\t\t\t\t// HasToFromArray\n\t\n\t\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\t\n\t\t\t\t\t},\n\t\n\t\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\t\n\t\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t]\n\t\n\t\t\t],\n\t\n\t\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\t\n\t\t\t\tthis.bind();\n\t\t\t\tthis.getValue( targetArray, offset );\n\t\n\t\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t\t// prototype version of these methods with one that represents\n\t\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t\t// become no-ops.\n\t\n\t\t\t},\n\t\n\t\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\t\n\t\t\t\tthis.bind();\n\t\t\t\tthis.setValue( sourceArray, offset );\n\t\n\t\t\t},\n\t\n\t\t\t// create getter / setter pair for a property in the scene graph\n\t\t\tbind: function () {\n\t\n\t\t\t\tvar targetObject = this.node,\n\t\t\t\t\tparsedPath = this.parsedPath,\n\t\n\t\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\t\n\t\t\t\tif ( ! targetObject ) {\n\t\n\t\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\t\n\t\t\t\t\tthis.node = targetObject;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// set fail state so we can just 'return' on error\n\t\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\t\tthis.setValue = this._setValue_unavailable;\n\t\n\t\t\t\t// ensure there is a value node\n\t\t\t\tif ( ! targetObject ) {\n\t\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( objectName ) {\n\t\n\t\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\t\n\t\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\t\tswitch ( objectName ) {\n\t\n\t\t\t\t\t\tcase 'materials':\n\t\n\t\t\t\t\t\t\tif ( ! targetObject.material ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'bones':\n\t\n\t\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t\t// and convert the integer string to a true integer.\n\t\n\t\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\t\n\t\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\t\n\t\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\t\n\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\tif ( objectIndex !== undefined ) {\n\t\n\t\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\t\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// resolve property\n\t\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\t\n\t\t\t\tif ( nodeProperty === undefined ) {\n\t\n\t\t\t\t\tvar nodeName = parsedPath.nodeName;\n\t\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// determine versioning scheme\n\t\t\t\tvar versioning = this.Versioning.None;\n\t\n\t\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\t\n\t\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\t\tthis.targetObject = targetObject;\n\t\n\t\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\t\n\t\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\t\tthis.targetObject = targetObject;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// determine how the property gets bound\n\t\t\t\tvar bindingType = this.BindingType.Direct;\n\t\n\t\t\t\tif ( propertyIndex !== undefined ) {\n\t\n\t\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\n\t\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\n\t\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tif ( ! targetObject.geometry ) {\n\t\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\t\n\t\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\t\n\t\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\t\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\t\treturn;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\t\n\t\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\t\n\t\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\n\t\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\n\t\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\n\t\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\n\t\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\n\t\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\n\t\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\t\n\t\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\n\t\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.propertyName = propertyName;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// select getter / setter\n\t\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\t\n\t\t\t},\n\t\n\t\t\tunbind: function () {\n\t\n\t\t\t\tthis.node = null;\n\t\n\t\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\t\tthis.setValue = this._setValue_unbound;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\t\tObject.assign( PropertyBinding.prototype, {\n\t\n\t\t\t// initial state of these methods that calls 'bind'\n\t\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * A group of objects that receives a shared animation state.\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t\t *\n\t\t * \t-\tInstead pass this object as 'root'.\n\t\t *\n\t\t * \t-\tYou can also add and remove objects later when the mixer\n\t\t * \t\tis running.\n\t\t *\n\t\t * Note:\n\t\t *\n\t\t *  \tObjects of this class appear as one object to the mixer,\n\t\t *  \tso cache control of the individual objects must be done\n\t\t *  \ton the group.\n\t\t *\n\t\t * Limitation:\n\t\t *\n\t\t * \t- \tThe animated properties must be compatible among the\n\t\t * \t\tall objects in the group.\n\t\t *\n\t\t *  -\tA single property can either be controlled through a\n\t\t *  \ttarget group or directly, but not both.\n\t\t *\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction AnimationObjectGroup( var_args ) {\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\t// cached objects followed by the active ones\n\t\t\tthis._objects = Array.prototype.slice.call( arguments );\n\t\n\t\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\t\n\t\t\tvar indices = {};\n\t\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\t\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\t\n\t\t\t\tindices[ arguments[ i ].uuid ] = i;\n\t\n\t\t\t}\n\t\n\t\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tthis.stats = {\n\t\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t\t\t},\n\t\n\t\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tObject.assign( AnimationObjectGroup.prototype, {\n\t\n\t\t\tisAnimationObjectGroup: true,\n\t\n\t\t\tadd: function( var_args ) {\n\t\n\t\t\t\tvar objects = this._objects,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = bindings.length;\n\t\n\t\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\t\t\tknownObject = undefined;\n\t\n\t\t\t\t\tif ( index === undefined ) {\n\t\n\t\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\n\t\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\t\tobjects.push( object );\n\t\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\t\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\t\n\t\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( index < nCachedObjects ) {\n\t\n\t\t\t\t\t\tknownObject = objects[ index ];\n\t\n\t\t\t\t\t\t// move existing object to the ACTIVE region\n\t\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\t\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\t\n\t\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\t\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\t\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\t\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\t\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\n\t\t\t\t\t\t\tif ( binding === undefined ) {\n\t\n\t\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t\t// or may not exist\n\t\n\t\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\t\n\t\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\t\n\t\t\t\t\t} // else the object is already where we want it to be\n\t\n\t\t\t\t} // for arguments\n\t\n\t\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\n\t\t\t},\n\t\n\t\t\tremove: function( var_args ) {\n\t\n\t\t\t\tvar objects = this._objects,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = bindings.length;\n\t\n\t\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\t\n\t\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\t\n\t\t\t\t\t\t// move existing object into the CACHED region\n\t\n\t\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\t\n\t\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\t\n\t\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\t\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\t\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\t\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\t\n\t\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} // for arguments\n\t\n\t\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\n\t\t\t},\n\t\n\t\t\t// remove & forget\n\t\t\tuncache: function( var_args ) {\n\t\n\t\t\t\tvar objects = this._objects,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = bindings.length;\n\t\n\t\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\t\n\t\t\t\t\tif ( index !== undefined ) {\n\t\n\t\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\t\n\t\t\t\t\t\tif ( index < nCachedObjects ) {\n\t\n\t\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\n\t\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\t\n\t\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\t\n\t\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\t\tobjects.pop();\n\t\n\t\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\t\n\t\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\t\n\t\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\t\n\t\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\n\t\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\t\n\t\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\t\tobjects.pop();\n\t\n\t\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\t\n\t\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\t\n\t\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\t\n\t\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} // cached or active\n\t\n\t\t\t\t\t} // if object is known\n\t\n\t\t\t\t} // for arguments\n\t\n\t\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\n\t\t\t},\n\t\n\t\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\t\n\t\t\tsubscribe_: function ( path, parsedPath ) {\n\t\n\t\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t\t// according to the contained objects in the group\n\t\n\t\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\t\tbindings = this._bindings;\n\t\n\t\t\t\tif ( index !== undefined ) return bindings[ index ];\n\t\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tbindingsForPath = new Array( nObjects );\n\t\n\t\t\t\tindex = bindings.length;\n\t\n\t\t\t\tindicesByPath[ path ] = index;\n\t\n\t\t\t\tpaths.push( path );\n\t\t\t\tparsedPaths.push( parsedPath );\n\t\t\t\tbindings.push( bindingsForPath );\n\t\n\t\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tvar object = objects[ i ];\n\t\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn bindingsForPath;\n\t\n\t\t\t},\n\t\n\t\t\tunsubscribe_: function ( path ) {\n\t\n\t\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t\t// update the array previously obtained with 'subscribe_'\n\t\n\t\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\tindex = indicesByPath[ path ];\n\t\n\t\t\t\tif ( index !== undefined ) {\n\t\n\t\t\t\t\tvar paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\t\n\t\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\t\n\t\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\t\tbindings.pop();\n\t\n\t\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\t\tparsedPaths.pop();\n\t\n\t\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\t\tpaths.pop();\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t\t * objects.\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t *\n\t\t */\n\t\n\t\tfunction AnimationAction( mixer, clip, localRoot ) {\n\t\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot || null;\n\t\n\t\t\tvar tracks = clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tinterpolants = new Array( nTracks );\n\t\n\t\t\tvar interpolantSettings = {\n\t\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t\t};\n\t\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\t\n\t\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\t\tinterpolants[ i ] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\n\t\t\t}\n\t\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\n\t\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\t\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\t\t\tthis._propertyBindings = new Array( nTracks );\n\t\n\t\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\t\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1;\n\t\n\t\t\t// global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\t\t\tthis._startTime = null;\n\t\n\t\t\t// scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\t\tthis.time = 0;\n\t\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\n\t\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\t\n\t\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\t\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\t\n\t\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\t\n\t\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\t\n\t\t}\n\t\n\t\tObject.assign( AnimationAction.prototype, {\n\t\n\t\t\t// State & Scheduling\n\t\n\t\t\tplay: function() {\n\t\n\t\t\t\tthis._mixer._activateAction( this );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tstop: function() {\n\t\n\t\t\t\tthis._mixer._deactivateAction( this );\n\t\n\t\t\t\treturn this.reset();\n\t\n\t\t\t},\n\t\n\t\t\treset: function() {\n\t\n\t\t\t\tthis.paused = false;\n\t\t\t\tthis.enabled = true;\n\t\n\t\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\t\tthis._startTime = null;\t// forget scheduling\n\t\n\t\t\t\treturn this.stopFading().stopWarping();\n\t\n\t\t\t},\n\t\n\t\t\tisRunning: function() {\n\t\n\t\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\t\n\t\t\t},\n\t\n\t\t\t// return true when play has been called\n\t\t\tisScheduled: function() {\n\t\n\t\t\t\treturn this._mixer._isActiveAction( this );\n\t\n\t\t\t},\n\t\n\t\t\tstartAt: function( time ) {\n\t\n\t\t\t\tthis._startTime = time;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetLoop: function( mode, repetitions ) {\n\t\n\t\t\t\tthis.loop = mode;\n\t\t\t\tthis.repetitions = repetitions;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// Weight\n\t\n\t\t\t// set the weight stopping any scheduled fading\n\t\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t\t// method does *not* change .enabled, because it would be confusing\n\t\t\tsetEffectiveWeight: function( weight ) {\n\t\n\t\t\t\tthis.weight = weight;\n\t\n\t\t\t\t// note: same logic as when updated at runtime\n\t\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\n\t\t\t\treturn this.stopFading();\n\t\n\t\t\t},\n\t\n\t\t\t// return the weight considering fading and .enabled\n\t\t\tgetEffectiveWeight: function() {\n\t\n\t\t\t\treturn this._effectiveWeight;\n\t\n\t\t\t},\n\t\n\t\t\tfadeIn: function( duration ) {\n\t\n\t\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\t\n\t\t\t},\n\t\n\t\t\tfadeOut: function( duration ) {\n\t\n\t\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\t\n\t\t\t},\n\t\n\t\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\t\n\t\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\t\tthis.fadeIn( duration );\n\t\n\t\t\t\tif( warp ) {\n\t\n\t\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\n\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\n\t\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\t\n\t\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\t\n\t\t\t},\n\t\n\t\t\tstopFading: function() {\n\t\n\t\t\t\tvar weightInterpolant = this._weightInterpolant;\n\t\n\t\t\t\tif ( weightInterpolant !== null ) {\n\t\n\t\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// Time Scale Control\n\t\n\t\t\t// set the time scale stopping any scheduled warping\n\t\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t\t// method does *not* change .paused, because it would be confusing\n\t\t\tsetEffectiveTimeScale: function( timeScale ) {\n\t\n\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\t\n\t\t\t\treturn this.stopWarping();\n\t\n\t\t\t},\n\t\n\t\t\t// return the time scale considering warping and .paused\n\t\t\tgetEffectiveTimeScale: function() {\n\t\n\t\t\t\treturn this._effectiveTimeScale;\n\t\n\t\t\t},\n\t\n\t\t\tsetDuration: function( duration ) {\n\t\n\t\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\n\t\t\t\treturn this.stopWarping();\n\t\n\t\t\t},\n\t\n\t\t\tsyncWith: function( action ) {\n\t\n\t\t\t\tthis.time = action.time;\n\t\t\t\tthis.timeScale = action.timeScale;\n\t\n\t\t\t\treturn this.stopWarping();\n\t\n\t\t\t},\n\t\n\t\t\thalt: function( duration ) {\n\t\n\t\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\t\n\t\t\t},\n\t\n\t\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\t\n\t\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\t\n\t\t\t\t\ttimeScale = this.timeScale;\n\t\n\t\t\t\tif ( interpolant === null ) {\n\t\n\t\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\n\t\t\t\ttimes[ 0 ] = now;\n\t\t\t\ttimes[ 1 ] = now + duration;\n\t\n\t\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tstopWarping: function() {\n\t\n\t\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\t\n\t\t\t\tif ( timeScaleInterpolant !== null ) {\n\t\n\t\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// Object Accessors\n\t\n\t\t\tgetMixer: function() {\n\t\n\t\t\t\treturn this._mixer;\n\t\n\t\t\t},\n\t\n\t\t\tgetClip: function() {\n\t\n\t\t\t\treturn this._clip;\n\t\n\t\t\t},\n\t\n\t\t\tgetRoot: function() {\n\t\n\t\t\t\treturn this._localRoot || this._mixer._root;\n\t\n\t\t\t},\n\t\n\t\t\t// Interna\n\t\n\t\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\n\t\t\t\t// called by the mixer\n\t\n\t\t\t\tif ( ! this.enabled ) {\n\t\n\t\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\n\t\t\t\t\tthis._updateWeight( time );\n\t\t\t\t\treturn;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar startTime = this._startTime;\n\t\n\t\t\t\tif ( startTime !== null ) {\n\t\n\t\t\t\t\t// check for scheduled start of action\n\t\n\t\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\t\n\t\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// start\n\t\n\t\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// apply time scale and advance time\n\t\n\t\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\t\tvar clipTime = this._updateTime( deltaTime );\n\t\n\t\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t\t// an effective weight of 0\n\t\n\t\t\t\tvar weight = this._updateWeight( time );\n\t\n\t\t\t\tif ( weight > 0 ) {\n\t\n\t\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\t\tvar propertyMixers = this._propertyBindings;\n\t\n\t\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\t\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_updateWeight: function( time ) {\n\t\n\t\t\t\tvar weight = 0;\n\t\n\t\t\t\tif ( this.enabled ) {\n\t\n\t\t\t\t\tweight = this.weight;\n\t\t\t\t\tvar interpolant = this._weightInterpolant;\n\t\n\t\t\t\t\tif ( interpolant !== null ) {\n\t\n\t\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\t\n\t\t\t\t\t\tweight *= interpolantValue;\n\t\n\t\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\t\n\t\t\t\t\t\t\tthis.stopFading();\n\t\n\t\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\t\n\t\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\t\tthis.enabled = false;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis._effectiveWeight = weight;\n\t\t\t\treturn weight;\n\t\n\t\t\t},\n\t\n\t\t\t_updateTimeScale: function( time ) {\n\t\n\t\t\t\tvar timeScale = 0;\n\t\n\t\t\t\tif ( ! this.paused ) {\n\t\n\t\t\t\t\ttimeScale = this.timeScale;\n\t\n\t\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\t\n\t\t\t\t\tif ( interpolant !== null ) {\n\t\n\t\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\t\n\t\t\t\t\t\ttimeScale *= interpolantValue;\n\t\n\t\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\t\n\t\t\t\t\t\t\tthis.stopWarping();\n\t\n\t\t\t\t\t\t\tif ( timeScale === 0 ) {\n\t\n\t\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\t\tthis.paused = true;\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\t\treturn timeScale;\n\t\n\t\t\t},\n\t\n\t\t\t_updateTime: function( deltaTime ) {\n\t\n\t\t\t\tvar time = this.time + deltaTime;\n\t\n\t\t\t\tif ( deltaTime === 0 ) return time;\n\t\n\t\t\t\tvar duration = this._clip.duration,\n\t\n\t\t\t\t\tloop = this.loop,\n\t\t\t\t\tloopCount = this._loopCount;\n\t\n\t\t\t\tif ( loop === LoopOnce ) {\n\t\n\t\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t\t// just started\n\t\n\t\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\t\tthis._setEndings( true, true, false );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\thandle_stop: {\n\t\n\t\t\t\t\t\tif ( time >= duration ) {\n\t\n\t\t\t\t\t\t\ttime = duration;\n\t\n\t\t\t\t\t\t} else if ( time < 0 ) {\n\t\n\t\t\t\t\t\t\ttime = 0;\n\t\n\t\t\t\t\t\t} else break handle_stop;\n\t\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\t\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else { // repetitive Repeat or PingPong\n\t\n\t\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\t\n\t\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t\t// just started\n\t\n\t\t\t\t\t\tif ( deltaTime >= 0 ) {\n\t\n\t\t\t\t\t\t\tloopCount = 0;\n\t\n\t\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t\t// so leave loopCount at -1\n\t\n\t\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t\t// wrap around\n\t\n\t\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\t\ttime -= duration * loopDelta;\n\t\n\t\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\t\n\t\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\t\n\t\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\n\t\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\t\telse this.enabled = false;\n\t\n\t\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\n\t\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep running\n\t\n\t\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t\t// entering the last round\n\t\n\t\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\n\t\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t\t} );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t\t// invert time for the \"pong round\"\n\t\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\treturn duration - time;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.time = time;\n\t\t\t\treturn time;\n\t\n\t\t\t},\n\t\n\t\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\t\n\t\t\t\tvar settings = this._interpolantSettings;\n\t\n\t\t\t\tif ( pingPong ) {\n\t\n\t\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\n\t\t\t\t\tif ( atStart ) {\n\t\n\t\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( atEnd ) {\n\t\n\t\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\t\n\t\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\t\tinterpolant = this._weightInterpolant;\n\t\n\t\t\t\tif ( interpolant === null ) {\n\t\n\t\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\t\tthis._weightInterpolant = interpolant;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\n\t\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t *\n\t\t * Player for AnimationClips.\n\t\t *\n\t\t *\n\t\t * @author Ben Houston / http://clara.io/\n\t\t * @author David Sarno / http://lighthaus.us/\n\t\t * @author tschw\n\t\t */\n\t\n\t\tfunction AnimationMixer( root ) {\n\t\n\t\t\tthis._root = root;\n\t\t\tthis._initMemoryManager();\n\t\t\tthis._accuIndex = 0;\n\t\n\t\t\tthis.time = 0;\n\t\n\t\t\tthis.timeScale = 1.0;\n\t\n\t\t}\n\t\n\t\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\t\n\t\t\t_bindAction: function ( action, prototypeAction ) {\n\t\n\t\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\t\n\t\t\t\tif ( bindingsByName === undefined ) {\n\t\n\t\t\t\t\tbindingsByName = {};\n\t\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\t\n\t\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\t\n\t\t\t\t\tif ( binding !== undefined ) {\n\t\n\t\t\t\t\t\tbindings[ i ] = binding;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tbinding = bindings[ i ];\n\t\n\t\t\t\t\t\tif ( binding !== undefined ) {\n\t\n\t\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\n\t\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\t\n\t\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tcontinue;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\t\n\t\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\t\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\t\n\t\t\t\t\t\tbindings[ i ] = binding;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_activateAction: function ( action ) {\n\t\n\t\t\t\tif ( ! this._isActiveAction( action ) ) {\n\t\n\t\t\t\t\tif ( action._cacheIndex === null ) {\n\t\n\t\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t\t// appears to be still using it -> rebind\n\t\n\t\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\t\n\t\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\t\n\t\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar bindings = action._propertyBindings;\n\t\n\t\t\t\t\t// increment reference counts / sort out state\n\t\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\tvar binding = bindings[ i ];\n\t\n\t\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\t\n\t\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\t\tbinding.saveOriginalState();\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis._lendAction( action );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_deactivateAction: function ( action ) {\n\t\n\t\t\t\tif ( this._isActiveAction( action ) ) {\n\t\n\t\t\t\t\tvar bindings = action._propertyBindings;\n\t\n\t\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\tvar binding = bindings[ i ];\n\t\n\t\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\t\n\t\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\t\tthis._takeBackBinding( binding );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis._takeBackAction( action );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// Memory manager\n\t\n\t\t\t_initMemoryManager: function () {\n\t\n\t\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\t\tthis._nActiveActions = 0;\n\t\n\t\t\t\tthis._actionsByClip = {};\n\t\t\t\t// inside:\n\t\t\t\t// {\n\t\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t\t// }\n\t\n\t\n\t\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\t\tthis._nActiveBindings = 0;\n\t\n\t\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\t\n\t\n\t\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\t\tthis._nActiveControlInterpolants = 0;\n\t\n\t\t\t\tvar scope = this;\n\t\n\t\t\t\tthis.stats = {\n\t\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t\t},\n\t\t\t\t\tbindings: {\n\t\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t\t},\n\t\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t\t}\n\t\n\t\t\t\t};\n\t\n\t\t\t},\n\t\n\t\t\t// Memory management for AnimationAction objects\n\t\n\t\t\t_isActiveAction: function ( action ) {\n\t\n\t\t\t\tvar index = action._cacheIndex;\n\t\t\t\treturn index !== null && index < this._nActiveActions;\n\t\n\t\t\t},\n\t\n\t\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\t\n\t\t\t\tif ( actionsForClip === undefined ) {\n\t\n\t\t\t\t\tactionsForClip = {\n\t\n\t\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\t\tactionByRoot: {}\n\t\n\t\t\t\t\t};\n\t\n\t\t\t\t\taction._byClipCacheIndex = 0;\n\t\n\t\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\t\n\t\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\t\tknownActions.push( action );\n\t\n\t\t\t\t}\n\t\n\t\t\t\taction._cacheIndex = actions.length;\n\t\t\t\tactions.push( action );\n\t\n\t\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\t\n\t\t\t},\n\t\n\t\t\t_removeInactiveAction: function ( action ) {\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\t\n\t\t\t\taction._cacheIndex = null;\n\t\n\t\n\t\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\n\t\t\t\t\tlastKnownAction =\n\t\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\t\n\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\n\t\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\t\tknownActionsForClip.pop();\n\t\n\t\t\t\taction._byClipCacheIndex = null;\n\t\n\t\n\t\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\t\n\t\t\t\tdelete actionByRoot[ rootUuid ];\n\t\n\t\t\t\tif ( knownActionsForClip.length === 0 ) {\n\t\n\t\t\t\t\tdelete actionsByClip[ clipUuid ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\t\n\t\t\t},\n\t\n\t\t\t_removeInactiveBindingsForAction: function ( action ) {\n\t\n\t\t\t\tvar bindings = action._propertyBindings;\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\tvar binding = bindings[ i ];\n\t\n\t\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\t\n\t\t\t\t\t\tthis._removeInactiveBinding( binding );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_lendAction: function ( action ) {\n\t\n\t\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t\t// [  active actions >| inactive actions ]\n\t\t\t\t//                 s        a\n\t\t\t\t//                  <-swap->\n\t\t\t\t//                 a        s\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\n\t\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\t\n\t\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\t\n\t\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\t\tactions[ lastActiveIndex ] = action;\n\t\n\t\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\t\n\t\t\t},\n\t\n\t\t\t_takeBackAction: function ( action ) {\n\t\n\t\t\t\t// [  active actions  | inactive actions ]\n\t\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t\t//        a        s\n\t\t\t\t//         <-swap->\n\t\t\t\t//        s        a\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\n\t\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\t\n\t\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\t\n\t\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\t\tactions[ firstInactiveIndex ] = action;\n\t\n\t\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\t\tactions[ prevIndex ] = lastActiveAction;\n\t\n\t\t\t},\n\t\n\t\t\t// Memory management for PropertyMixer objects\n\t\n\t\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\t\n\t\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\t\n\t\t\t\t\tbindings = this._bindings;\n\t\n\t\t\t\tif ( bindingByName === undefined ) {\n\t\n\t\t\t\t\tbindingByName = {};\n\t\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tbindingByName[ trackName ] = binding;\n\t\n\t\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\t\tbindings.push( binding );\n\t\n\t\t\t},\n\t\n\t\t\t_removeInactiveBinding: function ( binding ) {\n\t\n\t\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\t\n\t\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\n\t\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\t\tbindings.pop();\n\t\n\t\t\t\tdelete bindingByName[ trackName ];\n\t\n\t\t\t\tremove_empty_map: {\n\t\n\t\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\t\n\t\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t_lendBinding: function ( binding ) {\n\t\n\t\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\n\t\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\t\n\t\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\t\n\t\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\t\tbindings[ lastActiveIndex ] = binding;\n\t\n\t\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\t\n\t\t\t},\n\t\n\t\t\t_takeBackBinding: function ( binding ) {\n\t\n\t\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\n\t\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\t\n\t\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\t\n\t\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\t\tbindings[ firstInactiveIndex ] = binding;\n\t\n\t\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\t\n\t\t\t},\n\t\n\t\n\t\t\t// Memory management of Interpolants for weight and time scale\n\t\n\t\t\t_lendControlInterpolant: function () {\n\t\n\t\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\t\n\t\t\t\tif ( interpolant === undefined ) {\n\t\n\t\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\t\n\t\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn interpolant;\n\t\n\t\t\t},\n\t\n\t\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\t\n\t\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\n\t\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\t\n\t\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\t\n\t\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\t\n\t\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\t\n\t\t\t},\n\t\n\t\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\t\n\t\t\t// return an action for a clip optionally using a custom root target\n\t\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t\t// previously unknown clip/root combination is specified)\n\t\t\tclipAction: function ( clip, optionalRoot ) {\n\t\n\t\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\t\trootUuid = root.uuid,\n\t\n\t\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\t\n\t\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\t\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\t\tprototypeAction = null;\n\t\n\t\t\t\tif ( actionsForClip !== undefined ) {\n\t\n\t\t\t\t\tvar existingAction =\n\t\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\t\n\t\t\t\t\tif ( existingAction !== undefined ) {\n\t\n\t\t\t\t\t\treturn existingAction;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t\t// the bindings again but can just copy\n\t\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\t\n\t\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\t\tif ( clipObject === null )\n\t\t\t\t\t\tclipObject = prototypeAction._clip;\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// clip must be known when specified via string\n\t\t\t\tif ( clipObject === null ) return null;\n\t\n\t\t\t\t// allocate all resources required to run it\n\t\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\t\n\t\t\t\tthis._bindAction( newAction, prototypeAction );\n\t\n\t\t\t\t// and make the action known to the memory manager\n\t\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\t\n\t\t\t\treturn newAction;\n\t\n\t\t\t},\n\t\n\t\t\t// get an existing action\n\t\t\texistingAction: function ( clip, optionalRoot ) {\n\t\n\t\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\t\trootUuid = root.uuid,\n\t\n\t\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\t\n\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\t\n\t\t\t\tif ( actionsForClip !== undefined ) {\n\t\n\t\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\n\t\t\t},\n\t\n\t\t\t// deactivates all previously scheduled actions\n\t\t\tstopAllAction: function () {\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tnBindings = this._nActiveBindings;\n\t\n\t\t\t\tthis._nActiveActions = 0;\n\t\t\t\tthis._nActiveBindings = 0;\n\t\n\t\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\t\n\t\t\t\t\tactions[ i ].reset();\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\t\n\t\t\t\t\tbindings[ i ].useCount = 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// advance the time and update apply the animation\n\t\t\tupdate: function ( deltaTime ) {\n\t\n\t\t\t\tdeltaTime *= this.timeScale;\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tnActions = this._nActiveActions,\n\t\n\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\t\n\t\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\t\n\t\t\t\t// run active actions\n\t\n\t\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\t\n\t\t\t\t\tvar action = actions[ i ];\n\t\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t// update scene graph\n\t\n\t\t\t\tvar bindings = this._bindings,\n\t\t\t\t\tnBindings = this._nActiveBindings;\n\t\n\t\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\t\n\t\t\t\t\tbindings[ i ].apply( accuIndex );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// return this mixer's root target object\n\t\t\tgetRoot: function () {\n\t\n\t\t\t\treturn this._root;\n\t\n\t\t\t},\n\t\n\t\t\t// free all resources specific to a particular clip\n\t\t\tuncacheClip: function ( clip ) {\n\t\n\t\t\t\tvar actions = this._actions,\n\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\t\n\t\t\t\tif ( actionsForClip !== undefined ) {\n\t\n\t\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t\t// just throw away\n\t\n\t\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\t\n\t\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\t\n\t\t\t\t\t\tvar action = actionsToRemove[ i ];\n\t\n\t\t\t\t\t\tthis._deactivateAction( action );\n\t\n\t\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\t\n\t\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\t\taction._byClipCacheIndex = null;\n\t\n\t\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\t\tactions.pop();\n\t\n\t\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdelete actionsByClip[ clipUuid ];\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// free all resources specific to a particular root target object\n\t\t\tuncacheRoot: function ( root ) {\n\t\n\t\t\t\tvar rootUuid = root.uuid,\n\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\n\t\t\t\tfor ( var clipUuid in actionsByClip ) {\n\t\n\t\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\t\n\t\t\t\t\tif ( action !== undefined ) {\n\t\n\t\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\t\tthis._removeInactiveAction( action );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\t\n\t\t\t\tif ( bindingByName !== undefined ) {\n\t\n\t\t\t\t\tfor ( var trackName in bindingByName ) {\n\t\n\t\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._removeInactiveBinding( binding );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// remove a targeted clip from the cache\n\t\t\tuncacheAction: function ( clip, optionalRoot ) {\n\t\n\t\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\t\n\t\t\t\tif ( action !== null ) {\n\t\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Uniform( value ) {\n\t\n\t\t\tif ( typeof value === 'string' ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\t\tvalue = arguments[ 1 ];\n\t\n\t\t\t}\n\t\n\t\t\tthis.value = value;\n\t\n\t\t}\n\t\n\t\tUniform.prototype.clone = function () {\n\t\n\t\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t */\n\t\n\t\tfunction InstancedBufferGeometry() {\n\t\n\t\t\tBufferGeometry.call( this );\n\t\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.maxInstancedCount = undefined;\n\t\n\t\t}\n\t\n\t\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\t\n\t\t\tconstructor: InstancedBufferGeometry,\n\t\n\t\t\tisInstancedBufferGeometry: true,\n\t\n\t\t\taddGroup: function ( start, count, materialIndex ) {\n\t\n\t\t\t\tthis.groups.push( {\n\t\n\t\t\t\t\tstart: start,\n\t\t\t\t\tcount: count,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\n\t\t\t\t} );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tvar index = source.index;\n\t\n\t\t\t\tif ( index !== null ) {\n\t\n\t\t\t\t\tthis.setIndex( index.clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar attributes = source.attributes;\n\t\n\t\t\t\tfor ( var name in attributes ) {\n\t\n\t\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tvar groups = source.groups;\n\t\n\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t */\n\t\n\t\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\n\t\t\tthis.normalized = normalized === true;\n\t\n\t\t}\n\t\n\t\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\t\n\t\t\tcount: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.data.count;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tarray: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.data.array;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( InterleavedBufferAttribute.prototype, {\n\t\n\t\t\tisInterleavedBufferAttribute: true,\n\t\n\t\t\tsetX: function ( index, x ) {\n\t\n\t\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetY: function ( index, y ) {\n\t\n\t\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetZ: function ( index, z ) {\n\t\n\t\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetW: function ( index, w ) {\n\t\n\t\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tgetX: function ( index ) {\n\t\n\t\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\t\n\t\t\t},\n\t\n\t\t\tgetY: function ( index ) {\n\t\n\t\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\t\n\t\t\t},\n\t\n\t\t\tgetZ: function ( index ) {\n\t\n\t\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\t\n\t\t\t},\n\t\n\t\t\tgetW: function ( index ) {\n\t\n\t\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\t\n\t\t\t},\n\t\n\t\t\tsetXY: function ( index, x, y ) {\n\t\n\t\t\t\tindex = index * this.data.stride + this.offset;\n\t\n\t\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\t\tthis.data.array[ index + 1 ] = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetXYZ: function ( index, x, y, z ) {\n\t\n\t\t\t\tindex = index * this.data.stride + this.offset;\n\t\n\t\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\t\tthis.data.array[ index + 2 ] = z;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetXYZW: function ( index, x, y, z, w ) {\n\t\n\t\t\t\tindex = index * this.data.stride + this.offset;\n\t\n\t\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\t\tthis.data.array[ index + 3 ] = w;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t */\n\t\n\t\tfunction InterleavedBuffer( array, stride ) {\n\t\n\t\t\tthis.uuid = _Math.generateUUID();\n\t\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\n\t\t\tthis.dynamic = false;\n\t\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\n\t\t\tthis.onUploadCallback = function () {};\n\t\n\t\t\tthis.version = 0;\n\t\n\t\t}\n\t\n\t\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\t\n\t\t\tset: function ( value ) {\n\t\n\t\t\t\tif ( value === true ) this.version ++;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( InterleavedBuffer.prototype, {\n\t\n\t\t\tisInterleavedBuffer: true,\n\t\n\t\t\tsetArray: function ( array ) {\n\t\n\t\t\t\tif ( Array.isArray( array ) ) {\n\t\n\t\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\t\tthis.array = array;\n\t\n\t\t\t},\n\t\n\t\t\tsetDynamic: function ( value ) {\n\t\n\t\t\t\tthis.dynamic = value;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\t\tthis.count = source.count;\n\t\t\t\tthis.stride = source.stride;\n\t\t\t\tthis.dynamic = source.dynamic;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tcopyAt: function ( index1, attribute, index2 ) {\n\t\n\t\t\t\tindex1 *= this.stride;\n\t\t\t\tindex2 *= attribute.stride;\n\t\n\t\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\t\n\t\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tset: function ( value, offset ) {\n\t\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\n\t\t\t\tthis.array.set( value, offset );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tonUpload: function ( callback ) {\n\t\n\t\t\t\tthis.onUploadCallback = callback;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t */\n\t\n\t\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\t\n\t\t\tInterleavedBuffer.call( this, array, stride );\n\t\n\t\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\t\n\t\t}\n\t\n\t\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\t\n\t\t\tconstructor: InstancedInterleavedBuffer,\n\t\n\t\t\tisInstancedInterleavedBuffer: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author benaadams / https://twitter.com/ben_a_adams\n\t\t */\n\t\n\t\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\t\n\t\t\tBufferAttribute.call( this, array, itemSize );\n\t\n\t\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\t\n\t\t}\n\t\n\t\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\t\n\t\t\tconstructor: InstancedBufferAttribute,\n\t\n\t\t\tisInstancedBufferAttribute: true,\n\t\n\t\t\tcopy: function ( source ) {\n\t\n\t\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\t\n\t\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author bhouston / http://clara.io/\n\t\t * @author stephomi / http://stephaneginier.com/\n\t\t */\n\t\n\t\tfunction Raycaster( origin, direction, near, far ) {\n\t\n\t\t\tthis.ray = new Ray( origin, direction );\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\n\t\t\tthis.near = near || 0;\n\t\t\tthis.far = far || Infinity;\n\t\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: { threshold: 1 },\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\n\t\t\tObject.defineProperties( this.params, {\n\t\t\t\tPointCloud: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\t\treturn this.Points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t}\n\t\n\t\tfunction ascSort( a, b ) {\n\t\n\t\t\treturn a.distance - b.distance;\n\t\n\t\t}\n\t\n\t\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\t\n\t\t\tif ( object.visible === false ) return;\n\t\n\t\t\tobject.raycast( raycaster, intersects );\n\t\n\t\t\tif ( recursive === true ) {\n\t\n\t\t\t\tvar children = object.children;\n\t\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tObject.assign( Raycaster.prototype, {\n\t\n\t\t\tlinePrecision: 1,\n\t\n\t\t\tset: function ( origin, direction ) {\n\t\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\n\t\t\t\tthis.ray.set( origin, direction );\n\t\n\t\t\t},\n\t\n\t\t\tsetFromCamera: function ( coords, camera ) {\n\t\n\t\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\t\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\n\t\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\t\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tintersectObject: function ( object, recursive ) {\n\t\n\t\t\t\tvar intersects = [];\n\t\n\t\t\t\tintersectObject( object, this, intersects, recursive );\n\t\n\t\t\t\tintersects.sort( ascSort );\n\t\n\t\t\t\treturn intersects;\n\t\n\t\t\t},\n\t\n\t\t\tintersectObjects: function ( objects, recursive ) {\n\t\n\t\t\t\tvar intersects = [];\n\t\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\t\treturn intersects;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tintersects.sort( ascSort );\n\t\n\t\t\t\treturn intersects;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction Clock( autoStart ) {\n\t\n\t\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\t\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\n\t\t\tthis.running = false;\n\t\n\t\t}\n\t\n\t\tObject.assign( Clock.prototype, {\n\t\n\t\t\tstart: function () {\n\t\n\t\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\t\n\t\t\t\tthis.oldTime = this.startTime;\n\t\t\t\tthis.elapsedTime = 0;\n\t\t\t\tthis.running = true;\n\t\n\t\t\t},\n\t\n\t\t\tstop: function () {\n\t\n\t\t\t\tthis.getElapsedTime();\n\t\t\t\tthis.running = false;\n\t\t\t\tthis.autoStart = false;\n\t\n\t\t\t},\n\t\n\t\t\tgetElapsedTime: function () {\n\t\n\t\t\t\tthis.getDelta();\n\t\t\t\treturn this.elapsedTime;\n\t\n\t\t\t},\n\t\n\t\t\tgetDelta: function () {\n\t\n\t\t\t\tvar diff = 0;\n\t\n\t\t\t\tif ( this.autoStart && ! this.running ) {\n\t\n\t\t\t\t\tthis.start();\n\t\t\t\t\treturn 0;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.running ) {\n\t\n\t\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\t\n\t\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\t\tthis.oldTime = newTime;\n\t\n\t\t\t\t\tthis.elapsedTime += diff;\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn diff;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author bhouston / http://clara.io\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t *\n\t\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t\t *\n\t\t * The poles (phi) are at the positive and negative y axis.\n\t\t * The equator starts at positive z.\n\t\t */\n\t\n\t\tfunction Spherical( radius, phi, theta ) {\n\t\n\t\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\t\n\t\t\treturn this;\n\t\n\t\t}\n\t\n\t\tObject.assign( Spherical.prototype, {\n\t\n\t\t\tset: function ( radius, phi, theta ) {\n\t\n\t\t\t\tthis.radius = radius;\n\t\t\t\tthis.phi = phi;\n\t\t\t\tthis.theta = theta;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( other ) {\n\t\n\t\t\t\tthis.radius = other.radius;\n\t\t\t\tthis.phi = other.phi;\n\t\t\t\tthis.theta = other.theta;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\tmakeSafe: function() {\n\t\n\t\t\t\tvar EPS = 0.000001;\n\t\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromVector3: function( vec3 ) {\n\t\n\t\t\t\tthis.radius = vec3.length();\n\t\n\t\t\t\tif ( this.radius === 0 ) {\n\t\n\t\t\t\t\tthis.theta = 0;\n\t\t\t\t\tthis.phi = 0;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t *\n\t\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t\t *\n\t\t */\n\t\n\t\tfunction Cylindrical( radius, theta, y ) {\n\t\n\t\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\t\n\t\t\treturn this;\n\t\n\t\t}\n\t\n\t\tObject.assign( Cylindrical.prototype, {\n\t\n\t\t\tset: function ( radius, theta, y ) {\n\t\n\t\t\t\tthis.radius = radius;\n\t\t\t\tthis.theta = theta;\n\t\t\t\tthis.y = y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tclone: function () {\n\t\n\t\t\t\treturn new this.constructor().copy( this );\n\t\n\t\t\t},\n\t\n\t\t\tcopy: function ( other ) {\n\t\n\t\t\t\tthis.radius = other.radius;\n\t\t\t\tthis.theta = other.theta;\n\t\t\t\tthis.y = other.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t},\n\t\n\t\t\tsetFromVector3: function( vec3 ) {\n\t\n\t\t\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\t\t\tthis.y = vec3.y;\n\t\n\t\t\t\treturn this;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tfunction ImmediateRenderObject( material ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.material = material;\n\t\t\tthis.render = function ( renderCallback ) {};\n\t\n\t\t}\n\t\n\t\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\t\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\t\n\t\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\tthis.size = ( size !== undefined ) ? size : 1;\n\t\n\t\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\t\n\t\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\t\n\t\t\t//\n\t\n\t\t\tvar nNormals = 0;\n\t\n\t\t\tvar objGeometry = this.object.geometry;\n\t\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\t\n\t\t\t\tnNormals = objGeometry.faces.length * 3;\n\t\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\t\n\t\t\t\tnNormals = objGeometry.attributes.normal.count;\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\t\n\t\t\tgeometry.addAttribute( 'position', positions );\n\t\n\t\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\t\n\t\t\t//\n\t\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\t\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\t\n\t\tVertexNormalsHelper.prototype.update = ( function () {\n\t\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\t\t\tvar normalMatrix = new Matrix3();\n\t\n\t\t\treturn function update() {\n\t\n\t\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\t\n\t\t\t\tthis.object.updateMatrixWorld( true );\n\t\n\t\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\t\n\t\t\t\tvar matrixWorld = this.object.matrixWorld;\n\t\n\t\t\t\tvar position = this.geometry.attributes.position;\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar objGeometry = this.object.geometry;\n\t\n\t\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\t\n\t\t\t\t\tvar vertices = objGeometry.vertices;\n\t\n\t\t\t\t\tvar faces = objGeometry.faces;\n\t\n\t\t\t\t\tvar idx = 0;\n\t\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\t\n\t\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\t\n\t\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\t\n\t\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\t\n\t\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\t\n\t\t\t\t\t\t\tidx = idx + 1;\n\t\n\t\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\t\n\t\t\t\t\t\t\tidx = idx + 1;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\t\n\t\t\t\t\tvar objPos = objGeometry.attributes.position;\n\t\n\t\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\t\n\t\t\t\t\tvar idx = 0;\n\t\n\t\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\t\n\t\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\t\n\t\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\t\n\t\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\t\n\t\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\t\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\t\n\t\t\t\t\t\tidx = idx + 1;\n\t\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\t\n\t\t\t\t\t\tidx = idx + 1;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tposition.needsUpdate = true;\n\t\n\t\t\t};\n\t\n\t\t}() );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction SpotLightHelper( light, color ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.color = color;\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\tvar positions = [\n\t\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t\t0, 0, 0,   0, - 1,   1\n\t\t\t];\n\t\n\t\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\t\n\t\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\t\n\t\t\t\tpositions.push(\n\t\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t\t);\n\t\n\t\t\t}\n\t\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\n\t\t\tvar material = new LineBasicMaterial( { fog: false } );\n\t\n\t\t\tthis.cone = new LineSegments( geometry, material );\n\t\t\tthis.add( this.cone );\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\t\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\t\n\t\tSpotLightHelper.prototype.dispose = function () {\n\t\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\n\t\t};\n\t\n\t\tSpotLightHelper.prototype.update = function () {\n\t\n\t\t\tvar vector = new Vector3();\n\t\t\tvar vector2 = new Vector3();\n\t\n\t\t\treturn function update() {\n\t\n\t\t\t\tthis.light.updateMatrixWorld();\n\t\n\t\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\t\n\t\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\t\n\t\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\n\t\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\t\n\t\t\t\tif ( this.color !== undefined ) {\n\t\n\t\t\t\t\tthis.cone.material.color.set( this.color );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.cone.material.color.copy( this.light.color );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}();\n\t\n\t\t/**\n\t\t * @author Sean Griffin / http://twitter.com/sgrif\n\t\t * @author Michael Guerrero / http://realitymeltdown.com\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author ikerr / http://verold.com\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\tfunction getBoneList( object ) {\n\t\n\t\t\tvar boneList = [];\n\t\n\t\t\tif ( object && object.isBone ) {\n\t\n\t\t\t\tboneList.push( object );\n\t\n\t\t\t}\n\t\n\t\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\t\n\t\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\t\n\t\t\t}\n\t\n\t\t\treturn boneList;\n\t\n\t\t}\n\t\n\t\tfunction SkeletonHelper( object ) {\n\t\n\t\t\tvar bones = getBoneList( object );\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\tvar vertices = [];\n\t\t\tvar colors = [];\n\t\n\t\t\tvar color1 = new Color( 0, 0, 1 );\n\t\t\tvar color2 = new Color( 0, 1, 0 );\n\t\n\t\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\t\n\t\t\t\tvar bone = bones[ i ];\n\t\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\t\n\t\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\t\n\t\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\t\n\t\t\tLineSegments.call( this, geometry, material );\n\t\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.onBeforeRender();\n\t\n\t\t}\n\t\n\t\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\t\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\t\n\t\tSkeletonHelper.prototype.onBeforeRender = function () {\n\t\n\t\t\tvar vector = new Vector3();\n\t\n\t\t\tvar boneMatrix = new Matrix4();\n\t\t\tvar matrixWorldInv = new Matrix4();\n\t\n\t\t\treturn function onBeforeRender() {\n\t\n\t\t\t\tvar bones = this.bones;\n\t\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\t\n\t\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\t\n\t\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\t\n\t\t\t\t\tvar bone = bones[ i ];\n\t\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\t\n\t\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\t\n\t\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\t\n\t\t\t\t\t\tj += 2;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\t\n\t\t\t};\n\t\n\t\t}();\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction PointLightHelper( light, sphereSize, color ) {\n\t\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\n\t\t\tthis.color = color;\n\t\n\t\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\n\t\t\tMesh.call( this, geometry, material );\n\t\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.update();\n\t\n\t\n\t\t\t/*\n\t\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\n\t\t\tvar d = light.distance;\n\t\n\t\t\tif ( d === 0.0 ) {\n\t\n\t\t\t\tthis.lightDistance.visible = false;\n\t\n\t\t\t} else {\n\t\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\n\t\t\t}\n\t\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\n\t\t}\n\t\n\t\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\t\tPointLightHelper.prototype.constructor = PointLightHelper;\n\t\n\t\tPointLightHelper.prototype.dispose = function () {\n\t\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\n\t\t};\n\t\n\t\tPointLightHelper.prototype.update = function () {\n\t\n\t\t\tif ( this.color !== undefined ) {\n\t\n\t\t\t\tthis.material.color.set( this.color );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tthis.material.color.copy( this.light.color );\n\t\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\tvar d = this.light.distance;\n\t\n\t\t\tif ( d === 0.0 ) {\n\t\n\t\t\t\tthis.lightDistance.visible = false;\n\t\n\t\t\t} else {\n\t\n\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\n\t\t\t}\n\t\t\t*/\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author abelnation / http://github.com/abelnation\n\t\t * @author Mugen87 / http://github.com/Mugen87\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction RectAreaLightHelper( light, color ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.color = color;\n\t\n\t\t\tvar material = new LineBasicMaterial( { fog: false } );\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\t\n\t\t\tthis.line = new Line( geometry, material );\n\t\t\tthis.add( this.line );\n\t\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\n\t\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\t\n\t\tRectAreaLightHelper.prototype.dispose = function () {\n\t\n\t\t\tthis.children[ 0 ].geometry.dispose();\n\t\t\tthis.children[ 0 ].material.dispose();\n\t\n\t\t};\n\t\n\t\tRectAreaLightHelper.prototype.update = function () {\n\t\n\t\t\t// calculate new dimensions of the helper\n\t\n\t\t\tvar hx = this.light.width * 0.5;\n\t\t\tvar hy = this.light.height * 0.5;\n\t\n\t\t\tvar position = this.line.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\t\n\t\t\t// update vertices\n\t\n\t\t\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\t\t\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\t\t\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\t\t\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\t\t\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\t\n\t\t\tposition.needsUpdate = true;\n\t\n\t\t\tif ( this.color !== undefined ) {\n\t\n\t\t\t\tthis.line.material.color.set( this.color );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tthis.line.material.color.copy( this.light.color );\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t */\n\t\n\t\tfunction HemisphereLightHelper( light, size, color ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.color = color;\n\t\n\t\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\t\tgeometry.rotateY( Math.PI * 0.5 );\n\t\n\t\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\t\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\t\t\tvar colors = new Float32Array( position.count * 3 );\n\t\n\t\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\t\n\t\t\tthis.add( new Mesh( geometry, this.material ) );\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\t\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\t\n\t\tHemisphereLightHelper.prototype.dispose = function () {\n\t\n\t\t\tthis.children[ 0 ].geometry.dispose();\n\t\t\tthis.children[ 0 ].material.dispose();\n\t\n\t\t};\n\t\n\t\tHemisphereLightHelper.prototype.update = function () {\n\t\n\t\t\tvar vector = new Vector3();\n\t\n\t\t\tvar color1 = new Color();\n\t\t\tvar color2 = new Color();\n\t\n\t\t\treturn function update() {\n\t\n\t\t\t\tvar mesh = this.children[ 0 ];\n\t\n\t\t\t\tif ( this.color !== undefined ) {\n\t\n\t\t\t\t\tthis.material.color.set( this.color );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\t\n\t\t\t\t\tcolor1.copy( this.light.color );\n\t\t\t\t\tcolor2.copy( this.light.groundColor );\n\t\n\t\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\t\n\t\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcolors.needsUpdate = true;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\n\t\t\t};\n\t\n\t\t}();\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction GridHelper( size, divisions, color1, color2 ) {\n\t\n\t\t\tsize = size || 10;\n\t\t\tdivisions = divisions || 10;\n\t\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\t\n\t\t\tvar center = divisions / 2;\n\t\t\tvar step = size / divisions;\n\t\t\tvar halfSize = size / 2;\n\t\n\t\t\tvar vertices = [], colors = [];\n\t\n\t\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\t\n\t\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\t\n\t\t\t\tvar color = i === center ? color1 : color2;\n\t\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\n\t\t\t}\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\t\n\t\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\t\n\t\t\tLineSegments.call( this, geometry, material );\n\t\n\t\t}\n\t\n\t\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\t\tGridHelper.prototype.constructor = GridHelper;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / http://github.com/Mugen87\n\t\t * @author Hectate / http://www.github.com/Hectate\n\t\t */\n\t\n\t\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\t\n\t\t\tradius = radius || 10;\n\t\t\tradials = radials || 16;\n\t\t\tcircles = circles || 8;\n\t\t\tdivisions = divisions || 64;\n\t\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\t\n\t\t\tvar vertices = [];\n\t\t\tvar colors = [];\n\t\n\t\t\tvar x, z;\n\t\t\tvar v, i, j, r, color;\n\t\n\t\t\t// create the radials\n\t\n\t\t\tfor ( i = 0; i <= radials; i ++ ) {\n\t\n\t\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\t\n\t\t\t\tx = Math.sin( v ) * radius;\n\t\t\t\tz = Math.cos( v ) * radius;\n\t\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\t\n\t\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\t\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\n\t\t\t}\n\t\n\t\t\t// create the circles\n\t\n\t\t\tfor ( i = 0; i <= circles; i ++ ) {\n\t\n\t\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\t\n\t\t\t\tr = radius - ( radius / circles * i );\n\t\n\t\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\t\n\t\t\t\t\t// first vertex\n\t\n\t\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\t\n\t\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\t\tz = Math.cos( v ) * r;\n\t\n\t\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\n\t\t\t\t\t// second vertex\n\t\n\t\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\t\n\t\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\t\tz = Math.cos( v ) * r;\n\t\n\t\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\t\n\t\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\t\n\t\t\tLineSegments.call( this, geometry, material );\n\t\n\t\t}\n\t\n\t\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\t\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\t\n\t\t\t// FaceNormalsHelper only supports THREE.Geometry\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\tthis.size = ( size !== undefined ) ? size : 1;\n\t\n\t\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\t\n\t\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\t\n\t\t\t//\n\t\n\t\t\tvar nNormals = 0;\n\t\n\t\t\tvar objGeometry = this.object.geometry;\n\t\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\t\n\t\t\t\tnNormals = objGeometry.faces.length;\n\t\n\t\t\t} else {\n\t\n\t\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\t\n\t\t\tgeometry.addAttribute( 'position', positions );\n\t\n\t\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\t\n\t\t\t//\n\t\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\t\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\t\n\t\tFaceNormalsHelper.prototype.update = ( function () {\n\t\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\t\t\tvar normalMatrix = new Matrix3();\n\t\n\t\t\treturn function update() {\n\t\n\t\t\t\tthis.object.updateMatrixWorld( true );\n\t\n\t\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\t\n\t\t\t\tvar matrixWorld = this.object.matrixWorld;\n\t\n\t\t\t\tvar position = this.geometry.attributes.position;\n\t\n\t\t\t\t//\n\t\n\t\t\t\tvar objGeometry = this.object.geometry;\n\t\n\t\t\t\tvar vertices = objGeometry.vertices;\n\t\n\t\t\t\tvar faces = objGeometry.faces;\n\t\n\t\t\t\tvar idx = 0;\n\t\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tvar face = faces[ i ];\n\t\n\t\t\t\t\tvar normal = face.normal;\n\t\n\t\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t\t.applyMatrix4( matrixWorld );\n\t\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\t\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\t\n\t\t\t\t\tidx = idx + 1;\n\t\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\t\n\t\t\t\t\tidx = idx + 1;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tposition.needsUpdate = true;\n\t\n\t\t\t};\n\t\n\t\t}() );\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction DirectionalLightHelper( light, size, color ) {\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.color = color;\n\t\n\t\t\tif ( size === undefined ) size = 1;\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t\t- size,   size, 0,\n\t\t\t\t  size,   size, 0,\n\t\t\t\t  size, - size, 0,\n\t\t\t\t- size, - size, 0,\n\t\t\t\t- size,   size, 0\n\t\t\t], 3 ) );\n\t\n\t\t\tvar material = new LineBasicMaterial( { fog: false } );\n\t\n\t\t\tthis.lightPlane = new Line( geometry, material );\n\t\t\tthis.add( this.lightPlane );\n\t\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\t\n\t\t\tthis.targetLine = new Line( geometry, material );\n\t\t\tthis.add( this.targetLine );\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\t\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\t\n\t\tDirectionalLightHelper.prototype.dispose = function () {\n\t\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\n\t\t};\n\t\n\t\tDirectionalLightHelper.prototype.update = function () {\n\t\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\t\t\tvar v3 = new Vector3();\n\t\n\t\t\treturn function update() {\n\t\n\t\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\t\tv3.subVectors( v2, v1 );\n\t\n\t\t\t\tthis.lightPlane.lookAt( v3 );\n\t\n\t\t\t\tif ( this.color !== undefined ) {\n\t\n\t\t\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\t\t\tthis.targetLine.material.color.set( this.color );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tthis.targetLine.lookAt( v3 );\n\t\t\t\tthis.targetLine.scale.z = v3.length();\n\t\n\t\t\t};\n\t\n\t\t}();\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author Mugen87 / https://github.com/Mugen87\n\t\t *\n\t\t *\t- shows frustum, line of sight and up of the camera\n\t\t *\t- suitable for fast updates\n\t\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t\t */\n\t\n\t\tfunction CameraHelper( camera ) {\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\t\n\t\t\tvar vertices = [];\n\t\t\tvar colors = [];\n\t\n\t\t\tvar pointMap = {};\n\t\n\t\t\t// colors\n\t\n\t\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\t\tvar colorCone = new Color( 0xff0000 );\n\t\t\tvar colorUp = new Color( 0x00aaff );\n\t\t\tvar colorTarget = new Color( 0xffffff );\n\t\t\tvar colorCross = new Color( 0x333333 );\n\t\n\t\t\t// near\n\t\n\t\t\taddLine( \"n1\", \"n2\", colorFrustum );\n\t\t\taddLine( \"n2\", \"n4\", colorFrustum );\n\t\t\taddLine( \"n4\", \"n3\", colorFrustum );\n\t\t\taddLine( \"n3\", \"n1\", colorFrustum );\n\t\n\t\t\t// far\n\t\n\t\t\taddLine( \"f1\", \"f2\", colorFrustum );\n\t\t\taddLine( \"f2\", \"f4\", colorFrustum );\n\t\t\taddLine( \"f4\", \"f3\", colorFrustum );\n\t\t\taddLine( \"f3\", \"f1\", colorFrustum );\n\t\n\t\t\t// sides\n\t\n\t\t\taddLine( \"n1\", \"f1\", colorFrustum );\n\t\t\taddLine( \"n2\", \"f2\", colorFrustum );\n\t\t\taddLine( \"n3\", \"f3\", colorFrustum );\n\t\t\taddLine( \"n4\", \"f4\", colorFrustum );\n\t\n\t\t\t// cone\n\t\n\t\t\taddLine( \"p\", \"n1\", colorCone );\n\t\t\taddLine( \"p\", \"n2\", colorCone );\n\t\t\taddLine( \"p\", \"n3\", colorCone );\n\t\t\taddLine( \"p\", \"n4\", colorCone );\n\t\n\t\t\t// up\n\t\n\t\t\taddLine( \"u1\", \"u2\", colorUp );\n\t\t\taddLine( \"u2\", \"u3\", colorUp );\n\t\t\taddLine( \"u3\", \"u1\", colorUp );\n\t\n\t\t\t// target\n\t\n\t\t\taddLine( \"c\", \"t\", colorTarget );\n\t\t\taddLine( \"p\", \"c\", colorCross );\n\t\n\t\t\t// cross\n\t\n\t\t\taddLine( \"cn1\", \"cn2\", colorCross );\n\t\t\taddLine( \"cn3\", \"cn4\", colorCross );\n\t\n\t\t\taddLine( \"cf1\", \"cf2\", colorCross );\n\t\t\taddLine( \"cf3\", \"cf4\", colorCross );\n\t\n\t\t\tfunction addLine( a, b, color ) {\n\t\n\t\t\t\taddPoint( a, color );\n\t\t\t\taddPoint( b, color );\n\t\n\t\t\t}\n\t\n\t\t\tfunction addPoint( id, color ) {\n\t\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\n\t\t\t\tif ( pointMap[ id ] === undefined ) {\n\t\n\t\t\t\t\tpointMap[ id ] = [];\n\t\n\t\t\t\t}\n\t\n\t\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\t\n\t\t\t}\n\t\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\t\n\t\t\tLineSegments.call( this, geometry, material );\n\t\n\t\t\tthis.camera = camera;\n\t\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\t\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.pointMap = pointMap;\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\t\tCameraHelper.prototype.constructor = CameraHelper;\n\t\n\t\tCameraHelper.prototype.update = function () {\n\t\n\t\t\tvar geometry, pointMap;\n\t\n\t\t\tvar vector = new Vector3();\n\t\t\tvar camera = new Camera();\n\t\n\t\t\tfunction setPoint( point, x, y, z ) {\n\t\n\t\t\t\tvector.set( x, y, z ).unproject( camera );\n\t\n\t\t\t\tvar points = pointMap[ point ];\n\t\n\t\t\t\tif ( points !== undefined ) {\n\t\n\t\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\t\n\t\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\t\n\t\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\treturn function update() {\n\t\n\t\t\t\tgeometry = this.geometry;\n\t\t\t\tpointMap = this.pointMap;\n\t\n\t\t\t\tvar w = 1, h = 1;\n\t\n\t\t\t\t// we need just camera projection matrix\n\t\t\t\t// world matrix must be identity\n\t\n\t\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\t\n\t\t\t\t// center / target\n\t\n\t\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\t\n\t\t\t\t// near\n\t\n\t\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\t\n\t\t\t\t// far\n\t\n\t\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\t\n\t\t\t\t// up\n\t\n\t\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\t\n\t\t\t\t// cross\n\t\n\t\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\t\n\t\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\t\n\t\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\t\n\t\t\t};\n\t\n\t\t}();\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t * @author Mugen87 / http://github.com/Mugen87\n\t\t */\n\t\n\t\tfunction BoxHelper( object, color ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\tif ( color === undefined ) color = 0xffff00;\n\t\n\t\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\t\tvar positions = new Float32Array( 8 * 3 );\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\t\n\t\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\t\n\t\t\tthis.matrixAutoUpdate = false;\n\t\n\t\t\tthis.update();\n\t\n\t\t}\n\t\n\t\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\t\tBoxHelper.prototype.constructor = BoxHelper;\n\t\n\t\tBoxHelper.prototype.update = ( function () {\n\t\n\t\t\tvar box = new Box3();\n\t\n\t\t\treturn function update( object ) {\n\t\n\t\t\t\tif ( object !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( this.object !== undefined ) {\n\t\n\t\t\t\t\tbox.setFromObject( this.object );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( box.isEmpty() ) return;\n\t\n\t\t\t\tvar min = box.min;\n\t\t\t\tvar max = box.max;\n\t\n\t\t\t\t/*\n\t\t\t\t  5____4\n\t\t\t\t1/___0/|\n\t\t\t\t| 6__|_7\n\t\t\t\t2/___3/\n\t\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t\t1: min.x, max.y, max.z\n\t\t\t\t2: min.x, min.y, max.z\n\t\t\t\t3: max.x, min.y, max.z\n\t\t\t\t4: max.x, max.y, min.z\n\t\t\t\t5: min.x, max.y, min.z\n\t\t\t\t6: min.x, min.y, min.z\n\t\t\t\t7: max.x, min.y, min.z\n\t\t\t\t*/\n\t\n\t\t\t\tvar position = this.geometry.attributes.position;\n\t\t\t\tvar array = position.array;\n\t\n\t\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\t\n\t\t\t\tposition.needsUpdate = true;\n\t\n\t\t\t\tthis.geometry.computeBoundingSphere();\n\t\n\t\t\t};\n\t\n\t\t} )();\n\t\n\t\tBoxHelper.prototype.setFromObject = function ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction Box3Helper( box, hex ) {\n\t\n\t\t\tthis.type = 'Box3Helper';\n\t\n\t\t\tthis.box = box;\n\t\n\t\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\t\n\t\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\n\t\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\n\t\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\n\t\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\t\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\n\t\t\tthis.onBeforeRender();\n\t\n\t\t}\n\t\n\t\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\t\tBox3Helper.prototype.constructor = Box3Helper;\n\t\n\t\tBox3Helper.prototype.onBeforeRender = function () {\n\t\n\t\t\tvar box = this.box;\n\t\n\t\t\tif ( box.isEmpty() ) return;\n\t\n\t\t\tbox.getCenter( this.position );\n\t\n\t\t\tbox.getSize( this.scale );\n\t\n\t\t\tthis.scale.multiplyScalar( 0.5 );\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t */\n\t\n\t\tfunction PlaneHelper( plane, size, hex ) {\n\t\n\t\t\tthis.type = 'PlaneHelper';\n\t\n\t\t\tthis.plane = plane;\n\t\n\t\t\tthis.size = ( size === undefined ) ? 1 : size;\n\t\n\t\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\t\n\t\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\t\n\t\t\t//\n\t\n\t\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\t\n\t\t\tvar geometry2 = new BufferGeometry();\n\t\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\t\tgeometry2.computeBoundingSphere();\n\t\n\t\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\t\n\t\t\t//\n\t\n\t\t\tthis.onBeforeRender();\n\t\n\t\t}\n\t\n\t\tPlaneHelper.prototype = Object.create( Line.prototype );\n\t\tPlaneHelper.prototype.constructor = PlaneHelper;\n\t\n\t\tPlaneHelper.prototype.onBeforeRender = function () {\n\t\n\t\t\tvar scale = - this.plane.constant;\n\t\n\t\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\t\n\t\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\t\n\t\t\tthis.lookAt( this.plane.normal );\n\t\n\t\t\tthis.updateMatrixWorld();\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author zz85 / http://github.com/zz85\n\t\t * @author bhouston / http://clara.io\n\t\t *\n\t\t * Creates an arrow for visualizing directions\n\t\t *\n\t\t * Parameters:\n\t\t *  dir - Vector3\n\t\t *  origin - Vector3\n\t\t *  length - Number\n\t\t *  color - color in hex value\n\t\t *  headLength - Number\n\t\t *  headWidth - Number\n\t\t */\n\t\n\t\tvar lineGeometry;\n\t\tvar coneGeometry;\n\t\n\t\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\t\n\t\t\t// dir is assumed to be normalized\n\t\n\t\t\tObject3D.call( this );\n\t\n\t\t\tif ( color === undefined ) color = 0xffff00;\n\t\t\tif ( length === undefined ) length = 1;\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\t\n\t\t\tif ( lineGeometry === undefined ) {\n\t\n\t\t\t\tlineGeometry = new BufferGeometry();\n\t\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\t\n\t\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\t\n\t\t\t}\n\t\n\t\t\tthis.position.copy( origin );\n\t\n\t\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add( this.line );\n\t\n\t\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add( this.cone );\n\t\n\t\t\tthis.setDirection( dir );\n\t\t\tthis.setLength( length, headLength, headWidth );\n\t\n\t\t}\n\t\n\t\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\t\tArrowHelper.prototype.constructor = ArrowHelper;\n\t\n\t\tArrowHelper.prototype.setDirection = ( function () {\n\t\n\t\t\tvar axis = new Vector3();\n\t\t\tvar radians;\n\t\n\t\t\treturn function setDirection( dir ) {\n\t\n\t\t\t\t// dir is assumed to be normalized\n\t\n\t\t\t\tif ( dir.y > 0.99999 ) {\n\t\n\t\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\t\n\t\t\t\t} else if ( dir.y < - 0.99999 ) {\n\t\n\t\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\t\n\t\t\t\t\tradians = Math.acos( dir.y );\n\t\n\t\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}() );\n\t\n\t\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\t\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\t\n\t\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\t\tthis.line.updateMatrix();\n\t\n\t\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\n\t\t};\n\t\n\t\tArrowHelper.prototype.setColor = function ( color ) {\n\t\n\t\t\tthis.line.material.color.copy( color );\n\t\t\tthis.cone.material.color.copy( color );\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author sroucheray / http://sroucheray.org/\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction AxisHelper( size ) {\n\t\n\t\t\tsize = size || 1;\n\t\n\t\t\tvar vertices = [\n\t\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t\t0, 0, 0,  0, 0, size\n\t\t\t];\n\t\n\t\t\tvar colors = [\n\t\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t\t];\n\t\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\t\n\t\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\t\n\t\t\tLineSegments.call( this, geometry, material );\n\t\n\t\t}\n\t\n\t\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\t\tAxisHelper.prototype.constructor = AxisHelper;\n\t\n\t\t/**\n\t\t * @author zz85 https://github.com/zz85\n\t\t *\n\t\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t\t *\n\t\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t\t * curve.tension is used for catmullrom which defaults to 0.5\n\t\t */\n\t\n\t\n\t\t/*\n\t\tBased on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\t\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.\n\t\t*/\n\t\n\t\tfunction CubicPoly() {\n\t\n\t\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\t\n\t\t\t/*\n\t\t\t * Compute coefficients for a cubic polynomial\n\t\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t\t * such that\n\t\t\t *   p(0) = x0, p(1) = x1\n\t\t\t *  and\n\t\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t\t */\n\t\t\tfunction init( x0, x1, t0, t1 ) {\n\t\n\t\t\t\tc0 = x0;\n\t\t\t\tc1 = t0;\n\t\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\n\t\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\t\n\t\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\t\n\t\t\t\t},\n\t\n\t\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\t\n\t\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\t\n\t\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\t\tt1 *= dt1;\n\t\t\t\t\tt2 *= dt1;\n\t\n\t\t\t\t\tinit( x1, x2, t1, t2 );\n\t\n\t\t\t\t},\n\t\n\t\t\t\tcalc: function ( t ) {\n\t\n\t\t\t\t\tvar t2 = t * t;\n\t\t\t\t\tvar t3 = t2 * t;\n\t\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tvar tmp = new Vector3();\n\t\tvar px = new CubicPoly();\n\t\tvar py = new CubicPoly();\n\t\tvar pz = new CubicPoly();\n\t\n\t\tfunction CatmullRomCurve3( points ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\t\n\t\t\tthis.points = points || [];\n\t\t\tthis.closed = false;\n\t\n\t\t}\n\t\n\t\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\t\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\t\n\t\tCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar points = this.points;\n\t\t\tvar l = points.length;\n\t\n\t\t\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\t\n\t\t\tif ( this.closed ) {\n\t\n\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\t\n\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\t\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\n\t\t\t}\n\t\n\t\t\tvar p0, p1, p2, p3; // 4 points\n\t\n\t\t\tif ( this.closed || intPoint > 0 ) {\n\t\n\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\tp0 = tmp;\n\t\n\t\t\t}\n\t\n\t\t\tp1 = points[ intPoint % l ];\n\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\t\n\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\t\n\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\tp3 = tmp;\n\t\n\t\t\t}\n\t\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\t\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\t\n\t\t\t\t// safety check for repeated points\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\t\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\t\n\t\t\t} else if ( this.type === 'catmullrom' ) {\n\t\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\t\n\t\t\t}\n\t\n\t\t\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\t\n\t\t};\n\t\n\t\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\n\t\t}\n\t\n\t\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\t\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\t\n\t\tCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\t\n\t\t\treturn new Vector3(\n\t\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t\t);\n\t\n\t\t};\n\t\n\t\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\n\t\t}\n\t\n\t\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\t\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\t\n\t\tQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\t\n\t\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\t\n\t\t\treturn new Vector3(\n\t\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t\t);\n\t\n\t\t};\n\t\n\t\tfunction LineCurve3( v1, v2 ) {\n\t\n\t\t\tCurve.call( this );\n\t\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\n\t\t}\n\t\n\t\tLineCurve3.prototype = Object.create( Curve.prototype );\n\t\tLineCurve3.prototype.constructor = LineCurve3;\n\t\n\t\tLineCurve3.prototype.getPoint = function ( t ) {\n\t\n\t\t\tif ( t === 1 ) {\n\t\n\t\t\t\treturn this.v2.clone();\n\t\n\t\t\t}\n\t\n\t\t\tvar vector = new Vector3();\n\t\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\t\tvector.multiplyScalar( t );\n\t\t\tvector.add( this.v1 );\n\t\n\t\t\treturn vector;\n\t\n\t\t};\n\t\n\t\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\t\n\t\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\t\n\t\t}\n\t\n\t\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\t\tArcCurve.prototype.constructor = ArcCurve;\n\t\n\t\t/**\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t */\n\t\n\t\tvar SceneUtils = {\n\t\n\t\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\t\n\t\t\t\tvar group = new Group();\n\t\n\t\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\t\n\t\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\treturn group;\n\t\n\t\t\t},\n\t\n\t\t\tdetach: function ( child, parent, scene ) {\n\t\n\t\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\t\tparent.remove( child );\n\t\t\t\tscene.add( child );\n\t\n\t\t\t},\n\t\n\t\t\tattach: function ( child, scene, parent ) {\n\t\n\t\t\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\t\n\t\t\t\tscene.remove( child );\n\t\t\t\tparent.add( child );\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @author mrdoob / http://mrdoob.com/\n\t\t */\n\t\n\t\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\t\n\t\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\t\n\t\t}\n\t\n\t\tvar LineStrip = 0;\n\t\n\t\tvar LinePieces = 1;\n\t\n\t\tfunction MeshFaceMaterial( materials ) {\n\t\n\t\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\t\treturn materials;\n\t\n\t\t}\n\t\n\t\tfunction MultiMaterial( materials ) {\n\t\n\t\t\tif ( materials === undefined ) materials = [];\n\t\n\t\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\t\tmaterials.isMultiMaterial = true;\n\t\t\tmaterials.materials = materials;\n\t\t\tmaterials.clone = function () {\n\t\n\t\t\t\treturn materials.slice();\n\t\n\t\t\t};\n\t\t\treturn materials;\n\t\n\t\t}\n\t\n\t\tfunction PointCloud( geometry, material ) {\n\t\n\t\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\t\treturn new Points( geometry, material );\n\t\n\t\t}\n\t\n\t\tfunction Particle( material ) {\n\t\n\t\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\t\treturn new Sprite( material );\n\t\n\t\t}\n\t\n\t\tfunction ParticleSystem( geometry, material ) {\n\t\n\t\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\t\treturn new Points( geometry, material );\n\t\n\t\t}\n\t\n\t\tfunction PointCloudMaterial( parameters ) {\n\t\n\t\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new PointsMaterial( parameters );\n\t\n\t\t}\n\t\n\t\tfunction ParticleBasicMaterial( parameters ) {\n\t\n\t\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new PointsMaterial( parameters );\n\t\n\t\t}\n\t\n\t\tfunction ParticleSystemMaterial( parameters ) {\n\t\n\t\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new PointsMaterial( parameters );\n\t\n\t\t}\n\t\n\t\tfunction Vertex( x, y, z ) {\n\t\n\t\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\t\treturn new Vector3( x, y, z );\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction DynamicBufferAttribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\t\n\t\t}\n\t\n\t\tfunction Int8Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\t\treturn new Int8BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Uint8Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\t\treturn new Uint8BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Int16Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\t\treturn new Int16BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Uint16Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\t\treturn new Uint16BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Int32Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\t\treturn new Int32BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Uint32Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\t\treturn new Uint32BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Float32Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\t\treturn new Float32BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\tfunction Float64Attribute( array, itemSize ) {\n\t\n\t\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\t\treturn new Float64BufferAttribute( array, itemSize );\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tCurve.create = function ( construct, getPoint ) {\n\t\n\t\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\t\n\t\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\t\tconstruct.prototype.constructor = construct;\n\t\t\tconstruct.prototype.getPoint = getPoint;\n\t\n\t\t\treturn construct;\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tfunction ClosedSplineCurve3( points ) {\n\t\n\t\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\t\n\t\t\tCatmullRomCurve3.call( this, points );\n\t\t\tthis.type = 'catmullrom';\n\t\t\tthis.closed = true;\n\t\n\t\t}\n\t\n\t\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\t\n\t\t//\n\t\n\t\tfunction SplineCurve3( points ) {\n\t\n\t\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\t\n\t\t\tCatmullRomCurve3.call( this, points );\n\t\t\tthis.type = 'catmullrom';\n\t\n\t\t}\n\t\n\t\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\t\n\t\t//\n\t\n\t\tfunction Spline( points ) {\n\t\n\t\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\t\n\t\t\tCatmullRomCurve3.call( this, points );\n\t\t\tthis.type = 'catmullrom';\n\t\n\t\t}\n\t\n\t\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\t\n\t\tObject.assign( Spline.prototype, {\n\t\n\t\t\tinitFromArray: function ( a ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\t\n\t\t\t},\n\t\t\tgetControlPointsArray: function ( optionalTarget ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\t\n\t\t\t},\n\t\t\treparametrizeByArcLength: function ( samplingCoef ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\tfunction BoundingBoxHelper( object, color ) {\n\t\n\t\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\t\treturn new BoxHelper( object, color );\n\t\n\t\t}\n\t\n\t\tfunction EdgesHelper( object, hex ) {\n\t\n\t\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t\n\t\t}\n\t\n\t\tGridHelper.prototype.setColors = function () {\n\t\n\t\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\t\n\t\t};\n\t\n\t\tSkeletonHelper.prototype.update = function () {\n\t\n\t\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\t\n\t\t};\n\t\n\t\tfunction WireframeHelper( object, hex ) {\n\t\n\t\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction XHRLoader( manager ) {\n\t\n\t\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\t\treturn new FileLoader( manager );\n\t\n\t\t}\n\t\n\t\tfunction BinaryTextureLoader( manager ) {\n\t\n\t\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\t\treturn new DataTextureLoader( manager );\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tObject.assign( Box2.prototype, {\n\t\n\t\t\tcenter: function ( optionalTarget ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\t\treturn this.getCenter( optionalTarget );\n\t\n\t\t\t},\n\t\t\tempty: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\t\treturn this.isEmpty();\n\t\n\t\t\t},\n\t\t\tisIntersectionBox: function ( box ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\t\treturn this.intersectsBox( box );\n\t\n\t\t\t},\n\t\t\tsize: function ( optionalTarget ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\t\treturn this.getSize( optionalTarget );\n\t\n\t\t\t}\n\t\t} );\n\t\n\t\tObject.assign( Box3.prototype, {\n\t\n\t\t\tcenter: function ( optionalTarget ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\t\treturn this.getCenter( optionalTarget );\n\t\n\t\t\t},\n\t\t\tempty: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\t\treturn this.isEmpty();\n\t\n\t\t\t},\n\t\t\tisIntersectionBox: function ( box ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\t\treturn this.intersectsBox( box );\n\t\n\t\t\t},\n\t\t\tisIntersectionSphere: function ( sphere ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\t\treturn this.intersectsSphere( sphere );\n\t\n\t\t\t},\n\t\t\tsize: function ( optionalTarget ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\t\treturn this.getSize( optionalTarget );\n\t\n\t\t\t}\n\t\t} );\n\t\n\t\tLine3.prototype.center = function ( optionalTarget ) {\n\t\n\t\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\n\t\t};\n\t\n\t\t_Math.random16 = function () {\n\t\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\t\n\t\t};\n\t\n\t\tObject.assign( Matrix3.prototype, {\n\t\n\t\t\tflattenToArrayOffset: function ( array, offset ) {\n\t\n\t\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\t\treturn this.toArray( array, offset );\n\t\n\t\t\t},\n\t\t\tmultiplyVector3: function ( vector ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\t\treturn vector.applyMatrix3( this );\n\t\n\t\t\t},\n\t\t\tmultiplyVector3Array: function ( a ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\t\n\t\t\t},\n\t\t\tapplyToBuffer: function( buffer, offset, length ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\t\treturn this.applyToBufferAttribute( buffer );\n\t\n\t\t\t},\n\t\t\tapplyToVector3Array: function( array, offset, length ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Matrix4.prototype, {\n\t\n\t\t\textractPosition: function ( m ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\t\treturn this.copyPosition( m );\n\t\n\t\t\t},\n\t\t\tflattenToArrayOffset: function ( array, offset ) {\n\t\n\t\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\t\treturn this.toArray( array, offset );\n\t\n\t\t\t},\n\t\t\tgetPosition: function () {\n\t\n\t\t\t\tvar v1;\n\t\n\t\t\t\treturn function getPosition() {\n\t\n\t\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\t\n\t\t\t\t};\n\t\n\t\t\t}(),\n\t\t\tsetRotationFromQuaternion: function ( q ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\t\treturn this.makeRotationFromQuaternion( q );\n\t\n\t\t\t},\n\t\t\tmultiplyToArray: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\t\n\t\t\t},\n\t\t\tmultiplyVector3: function ( vector ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\t\treturn vector.applyMatrix4( this );\n\t\n\t\t\t},\n\t\t\tmultiplyVector4: function ( vector ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\t\treturn vector.applyMatrix4( this );\n\t\n\t\t\t},\n\t\t\tmultiplyVector3Array: function ( a ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\t\n\t\t\t},\n\t\t\trotateAxis: function ( v ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\t\tv.transformDirection( this );\n\t\n\t\t\t},\n\t\t\tcrossVector: function ( vector ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\t\treturn vector.applyMatrix4( this );\n\t\n\t\t\t},\n\t\t\ttranslate: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t\n\t\t\t},\n\t\t\trotateX: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t\n\t\t\t},\n\t\t\trotateY: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t\n\t\t\t},\n\t\t\trotateZ: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t\n\t\t\t},\n\t\t\trotateByAxis: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t\n\t\t\t},\n\t\t\tapplyToBuffer: function( buffer, offset, length ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\t\treturn this.applyToBufferAttribute( buffer );\n\t\n\t\t\t},\n\t\t\tapplyToVector3Array: function( array, offset, length ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\t\n\t\t\t},\n\t\t\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tPlane.prototype.isIntersectionLine = function ( line ) {\n\t\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\t\treturn this.intersectsLine( line );\n\t\n\t\t};\n\t\n\t\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\t\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\t\treturn vector.applyQuaternion( this );\n\t\n\t\t};\n\t\n\t\tObject.assign( Ray.prototype, {\n\t\n\t\t\tisIntersectionBox: function ( box ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\t\treturn this.intersectsBox( box );\n\t\n\t\t\t},\n\t\t\tisIntersectionPlane: function ( plane ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\t\treturn this.intersectsPlane( plane );\n\t\n\t\t\t},\n\t\t\tisIntersectionSphere: function ( sphere ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\t\treturn this.intersectsSphere( sphere );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Shape.prototype, {\n\t\n\t\t\textrude: function ( options ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\t\treturn new ExtrudeGeometry( this, options );\n\t\n\t\t\t},\n\t\t\tmakeGeometry: function ( options ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\t\treturn new ShapeGeometry( this, options );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Vector2.prototype, {\n\t\n\t\t\tfromAttribute: function ( attribute, index, offset ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Vector3.prototype, {\n\t\n\t\t\tsetEulerFromRotationMatrix: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t\n\t\t\t},\n\t\t\tsetEulerFromQuaternion: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t\n\t\t\t},\n\t\t\tgetPositionFromMatrix: function ( m ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\t\treturn this.setFromMatrixPosition( m );\n\t\n\t\t\t},\n\t\t\tgetScaleFromMatrix: function ( m ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\t\treturn this.setFromMatrixScale( m );\n\t\n\t\t\t},\n\t\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\t\n\t\t\t},\n\t\t\tapplyProjection: function ( m ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\t\treturn this.applyMatrix4( m );\n\t\n\t\t\t},\n\t\t\tfromAttribute: function ( attribute, index, offset ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( Vector4.prototype, {\n\t\n\t\t\tfromAttribute: function ( attribute, index, offset ) {\n\t\n\t\t\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tGeometry.prototype.computeTangents = function () {\n\t\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\t\n\t\t};\n\t\n\t\tObject.assign( Object3D.prototype, {\n\t\n\t\t\tgetChildByName: function ( name ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\t\treturn this.getObjectByName( name );\n\t\n\t\t\t},\n\t\t\trenderDepth: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t\n\t\t\t},\n\t\t\ttranslate: function ( distance, axis ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\t\treturn this.translateOnAxis( axis, distance );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( Object3D.prototype, {\n\t\n\t\t\teulerOrder: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\t\treturn this.rotation.order;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\t\tthis.rotation.order = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tuseQuaternion: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\n\t\t\t\t},\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( LOD.prototype, {\n\t\n\t\t\tobjects: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\t\treturn this.levels;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\t\n\t\t\tget: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\t\n\t\t\t},\n\t\t\tset: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\t\n\t\t\tget: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\t\treturn this.arcLengthDivisions;\n\t\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\t\tthis.arcLengthDivisions = value;\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\t\n\t\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\t\n\t\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\t\tthis.setFocalLength( focalLength );\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tObject.defineProperties( Light.prototype, {\n\t\t\tonlyShadow: {\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraFov: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\t\tthis.shadow.camera.fov = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraLeft: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\t\tthis.shadow.camera.left = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraRight: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\t\tthis.shadow.camera.right = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraTop: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\t\tthis.shadow.camera.top = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraBottom: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\t\tthis.shadow.camera.bottom = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraNear: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\t\tthis.shadow.camera.near = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraFar: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\t\tthis.shadow.camera.far = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowCameraVisible: {\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowBias: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\t\tthis.shadow.bias = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowDarkness: {\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowMapWidth: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\t\tthis.shadow.mapSize.width = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowMapHeight: {\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\t\tthis.shadow.mapSize.height = value;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\t//\n\t\n\t\tObject.defineProperties( BufferAttribute.prototype, {\n\t\n\t\t\tlength: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\t\treturn this.array.length;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.assign( BufferGeometry.prototype, {\n\t\n\t\t\taddIndex: function ( index ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\t\tthis.setIndex( index );\n\t\n\t\t\t},\n\t\t\taddDrawCall: function ( start, count, indexOffset ) {\n\t\n\t\t\t\tif ( indexOffset !== undefined ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\n\t\t\t\t}\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\t\tthis.addGroup( start, count );\n\t\n\t\t\t},\n\t\t\tclearDrawCalls: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\t\tthis.clearGroups();\n\t\n\t\t\t},\n\t\t\tcomputeTangents: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t\n\t\t\t},\n\t\t\tcomputeOffsets: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( BufferGeometry.prototype, {\n\t\n\t\t\tdrawcalls: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\t\treturn this.groups;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\toffsets: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\t\treturn this.groups;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tObject.defineProperties( Uniform.prototype, {\n\t\n\t\t\tdynamic: {\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tonUpdate: {\n\t\t\t\tvalue: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\t\treturn this;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tObject.defineProperties( Material.prototype, {\n\t\n\t\t\twrapAround: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\t\n\t\t\t\t},\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\twrapRGB: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\t\treturn new Color();\n\t\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tshading: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( value === FlatShading );\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\t\n\t\t\tmetal: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t},\n\t\t\t\tset: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( ShaderMaterial.prototype, {\n\t\n\t\t\tderivatives: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\t\treturn this.extensions.derivatives;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\t\tthis.extensions.derivatives = value;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tObject.assign( WebGLRenderer.prototype, {\n\t\n\t\t\tgetCurrentRenderTarget: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\t\treturn this.getRenderTarget();\n\t\n\t\t\t},\n\t\n\t\t\tgetMaxAnisotropy: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\t\treturn this.capabilities.getMaxAnisotropy();\n\t\n\t\t\t},\n\t\n\t\t\tgetPrecision: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\t\treturn this.capabilities.precision;\n\t\n\t\t\t},\n\t\n\t\t\tsupportsFloatTextures: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\t\n\t\t\t},\n\t\t\tsupportsHalfFloatTextures: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t\n\t\t\t},\n\t\t\tsupportsStandardDerivatives: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t\n\t\t\t},\n\t\t\tsupportsCompressedTextureS3TC: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\n\t\t\t},\n\t\t\tsupportsCompressedTexturePVRTC: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\n\t\t\t},\n\t\t\tsupportsBlendMinMax: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t\n\t\t\t},\n\t\t\tsupportsVertexTextures: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\t\treturn this.capabilities.vertexTextures;\n\t\n\t\t\t},\n\t\t\tsupportsInstancedArrays: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t\n\t\t\t},\n\t\t\tenableScissorTest: function ( boolean ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\t\tthis.setScissorTest( boolean );\n\t\n\t\t\t},\n\t\t\tinitMaterial: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t\n\t\t\t},\n\t\t\taddPrePlugin: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t\n\t\t\t},\n\t\t\taddPostPlugin: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t\n\t\t\t},\n\t\t\tupdateShadowMap: function () {\n\t\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\tObject.defineProperties( WebGLRenderer.prototype, {\n\t\n\t\t\tshadowMapEnabled: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.shadowMap.enabled;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\t\tthis.shadowMap.enabled = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowMapType: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.shadowMap.type;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\t\tthis.shadowMap.type = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowMapCullFace: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.shadowMap.cullFace;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\t\tthis.shadowMap.cullFace = value;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\tObject.defineProperties( WebGLShadowMap.prototype, {\n\t\n\t\t\tcullFace: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( cullFace ) {\n\t\n\t\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\t\tthis.renderReverseSided = value;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\t\n\t\t\twrapS: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\t\treturn this.texture.wrapS;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\t\tthis.texture.wrapS = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\twrapT: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\t\treturn this.texture.wrapT;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\t\tthis.texture.wrapT = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tmagFilter: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\t\treturn this.texture.magFilter;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\t\tthis.texture.magFilter = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tminFilter: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\t\treturn this.texture.minFilter;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\t\tthis.texture.minFilter = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tanisotropy: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\t\treturn this.texture.anisotropy;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\t\tthis.texture.anisotropy = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\toffset: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\t\treturn this.texture.offset;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\t\tthis.texture.offset = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\trepeat: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\t\treturn this.texture.repeat;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\t\tthis.texture.repeat = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tformat: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\t\treturn this.texture.format;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\t\tthis.texture.format = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\ttype: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\t\treturn this.texture.type;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\t\tthis.texture.type = value;\n\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tgenerateMipmaps: {\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\t\treturn this.texture.generateMipmaps;\n\t\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\t\tthis.texture.generateMipmaps = value;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\t//\n\t\n\t\tAudio.prototype.load = function ( file ) {\n\t\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\t\n\t\t\t\tscope.setBuffer( buffer );\n\t\n\t\t\t} );\n\t\t\treturn this;\n\t\n\t\t};\n\t\n\t\tAudioAnalyser.prototype.getData = function () {\n\t\n\t\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\t\treturn this.getFrequencyData();\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\t\n\t\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\t\treturn this.update( renderer, scene );\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tvar GeometryUtils = {\n\t\n\t\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\t\tvar matrix;\n\t\n\t\t\t\tif ( geometry2.isMesh ) {\n\t\n\t\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\t\n\t\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\t\tgeometry2 = geometry2.geometry;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\t\n\t\t\t},\n\t\n\t\t\tcenter: function ( geometry ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\t\treturn geometry.center();\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tvar ImageUtils = {\n\t\n\t\t\tcrossOrigin: undefined,\n\t\n\t\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\t\n\t\t\t\tvar loader = new TextureLoader();\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\n\t\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\t\n\t\t\t\tif ( mapping ) texture.mapping = mapping;\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t},\n\t\n\t\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\t\n\t\t\t\tvar loader = new CubeTextureLoader();\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\n\t\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\t\n\t\t\t\tif ( mapping ) texture.mapping = mapping;\n\t\n\t\t\t\treturn texture;\n\t\n\t\t\t},\n\t\n\t\t\tloadCompressedTexture: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\t\n\t\t\t},\n\t\n\t\t\tloadCompressedTextureCube: function () {\n\t\n\t\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tfunction Projector() {\n\t\n\t\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\t\n\t\t\tthis.projectVector = function ( vector, camera ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\t\tvector.project( camera );\n\t\n\t\t\t};\n\t\n\t\t\tthis.unprojectVector = function ( vector, camera ) {\n\t\n\t\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\t\tvector.unproject( camera );\n\t\n\t\t\t};\n\t\n\t\t\tthis.pickingRay = function () {\n\t\n\t\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\t\n\t\t\t};\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction CanvasRenderer() {\n\t\n\t\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\t\n\t\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tthis.clear = function () {};\n\t\t\tthis.render = function () {};\n\t\t\tthis.setClearColor = function () {};\n\t\t\tthis.setSize = function () {};\n\t\n\t\t}\n\t\n\t\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\t\texports.WebGLRenderTarget = WebGLRenderTarget;\n\t\texports.WebGLRenderer = WebGLRenderer;\n\t\texports.ShaderLib = ShaderLib;\n\t\texports.UniformsLib = UniformsLib;\n\t\texports.UniformsUtils = UniformsUtils;\n\t\texports.ShaderChunk = ShaderChunk;\n\t\texports.FogExp2 = FogExp2;\n\t\texports.Fog = Fog;\n\t\texports.Scene = Scene;\n\t\texports.LensFlare = LensFlare;\n\t\texports.Sprite = Sprite;\n\t\texports.LOD = LOD;\n\t\texports.SkinnedMesh = SkinnedMesh;\n\t\texports.Skeleton = Skeleton;\n\t\texports.Bone = Bone;\n\t\texports.Mesh = Mesh;\n\t\texports.LineSegments = LineSegments;\n\t\texports.LineLoop = LineLoop;\n\t\texports.Line = Line;\n\t\texports.Points = Points;\n\t\texports.Group = Group;\n\t\texports.VideoTexture = VideoTexture;\n\t\texports.DataTexture = DataTexture;\n\t\texports.CompressedTexture = CompressedTexture;\n\t\texports.CubeTexture = CubeTexture;\n\t\texports.CanvasTexture = CanvasTexture;\n\t\texports.DepthTexture = DepthTexture;\n\t\texports.Texture = Texture;\n\t\texports.CompressedTextureLoader = CompressedTextureLoader;\n\t\texports.DataTextureLoader = DataTextureLoader;\n\t\texports.CubeTextureLoader = CubeTextureLoader;\n\t\texports.TextureLoader = TextureLoader;\n\t\texports.ObjectLoader = ObjectLoader;\n\t\texports.MaterialLoader = MaterialLoader;\n\t\texports.BufferGeometryLoader = BufferGeometryLoader;\n\t\texports.DefaultLoadingManager = DefaultLoadingManager;\n\t\texports.LoadingManager = LoadingManager;\n\t\texports.JSONLoader = JSONLoader;\n\t\texports.ImageLoader = ImageLoader;\n\t\texports.FontLoader = FontLoader;\n\t\texports.FileLoader = FileLoader;\n\t\texports.Loader = Loader;\n\t\texports.Cache = Cache;\n\t\texports.AudioLoader = AudioLoader;\n\t\texports.SpotLightShadow = SpotLightShadow;\n\t\texports.SpotLight = SpotLight;\n\t\texports.PointLight = PointLight;\n\t\texports.RectAreaLight = RectAreaLight;\n\t\texports.HemisphereLight = HemisphereLight;\n\t\texports.DirectionalLightShadow = DirectionalLightShadow;\n\t\texports.DirectionalLight = DirectionalLight;\n\t\texports.AmbientLight = AmbientLight;\n\t\texports.LightShadow = LightShadow;\n\t\texports.Light = Light;\n\t\texports.StereoCamera = StereoCamera;\n\t\texports.PerspectiveCamera = PerspectiveCamera;\n\t\texports.OrthographicCamera = OrthographicCamera;\n\t\texports.CubeCamera = CubeCamera;\n\t\texports.ArrayCamera = ArrayCamera;\n\t\texports.Camera = Camera;\n\t\texports.AudioListener = AudioListener;\n\t\texports.PositionalAudio = PositionalAudio;\n\t\texports.AudioContext = AudioContext;\n\t\texports.AudioAnalyser = AudioAnalyser;\n\t\texports.Audio = Audio;\n\t\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\t\texports.StringKeyframeTrack = StringKeyframeTrack;\n\t\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\t\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\t\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\t\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\t\texports.PropertyMixer = PropertyMixer;\n\t\texports.PropertyBinding = PropertyBinding;\n\t\texports.KeyframeTrack = KeyframeTrack;\n\t\texports.AnimationUtils = AnimationUtils;\n\t\texports.AnimationObjectGroup = AnimationObjectGroup;\n\t\texports.AnimationMixer = AnimationMixer;\n\t\texports.AnimationClip = AnimationClip;\n\t\texports.Uniform = Uniform;\n\t\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\t\texports.BufferGeometry = BufferGeometry;\n\t\texports.GeometryIdCount = GeometryIdCount;\n\t\texports.Geometry = Geometry;\n\t\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\t\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\t\texports.InterleavedBuffer = InterleavedBuffer;\n\t\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\t\texports.Face3 = Face3;\n\t\texports.Object3D = Object3D;\n\t\texports.Raycaster = Raycaster;\n\t\texports.Layers = Layers;\n\t\texports.EventDispatcher = EventDispatcher;\n\t\texports.Clock = Clock;\n\t\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\t\texports.LinearInterpolant = LinearInterpolant;\n\t\texports.DiscreteInterpolant = DiscreteInterpolant;\n\t\texports.CubicInterpolant = CubicInterpolant;\n\t\texports.Interpolant = Interpolant;\n\t\texports.Triangle = Triangle;\n\t\texports.Math = _Math;\n\t\texports.Spherical = Spherical;\n\t\texports.Cylindrical = Cylindrical;\n\t\texports.Plane = Plane;\n\t\texports.Frustum = Frustum;\n\t\texports.Sphere = Sphere;\n\t\texports.Ray = Ray;\n\t\texports.Matrix4 = Matrix4;\n\t\texports.Matrix3 = Matrix3;\n\t\texports.Box3 = Box3;\n\t\texports.Box2 = Box2;\n\t\texports.Line3 = Line3;\n\t\texports.Euler = Euler;\n\t\texports.Vector4 = Vector4;\n\t\texports.Vector3 = Vector3;\n\t\texports.Vector2 = Vector2;\n\t\texports.Quaternion = Quaternion;\n\t\texports.Color = Color;\n\t\texports.ImmediateRenderObject = ImmediateRenderObject;\n\t\texports.VertexNormalsHelper = VertexNormalsHelper;\n\t\texports.SpotLightHelper = SpotLightHelper;\n\t\texports.SkeletonHelper = SkeletonHelper;\n\t\texports.PointLightHelper = PointLightHelper;\n\t\texports.RectAreaLightHelper = RectAreaLightHelper;\n\t\texports.HemisphereLightHelper = HemisphereLightHelper;\n\t\texports.GridHelper = GridHelper;\n\t\texports.PolarGridHelper = PolarGridHelper;\n\t\texports.FaceNormalsHelper = FaceNormalsHelper;\n\t\texports.DirectionalLightHelper = DirectionalLightHelper;\n\t\texports.CameraHelper = CameraHelper;\n\t\texports.BoxHelper = BoxHelper;\n\t\texports.Box3Helper = Box3Helper;\n\t\texports.PlaneHelper = PlaneHelper;\n\t\texports.ArrowHelper = ArrowHelper;\n\t\texports.AxisHelper = AxisHelper;\n\t\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\t\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\t\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\t\texports.LineCurve3 = LineCurve3;\n\t\texports.ArcCurve = ArcCurve;\n\t\texports.EllipseCurve = EllipseCurve;\n\t\texports.SplineCurve = SplineCurve;\n\t\texports.CubicBezierCurve = CubicBezierCurve;\n\t\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\t\texports.LineCurve = LineCurve;\n\t\texports.Shape = Shape;\n\t\texports.Path = Path;\n\t\texports.ShapePath = ShapePath;\n\t\texports.Font = Font;\n\t\texports.CurvePath = CurvePath;\n\t\texports.Curve = Curve;\n\t\texports.ShapeUtils = ShapeUtils;\n\t\texports.SceneUtils = SceneUtils;\n\t\texports.WebGLUtils = WebGLUtils;\n\t\texports.WireframeGeometry = WireframeGeometry;\n\t\texports.ParametricGeometry = ParametricGeometry;\n\t\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\t\texports.TetrahedronGeometry = TetrahedronGeometry;\n\t\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\t\texports.OctahedronGeometry = OctahedronGeometry;\n\t\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\t\texports.IcosahedronGeometry = IcosahedronGeometry;\n\t\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\t\texports.DodecahedronGeometry = DodecahedronGeometry;\n\t\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\t\texports.PolyhedronGeometry = PolyhedronGeometry;\n\t\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\t\texports.TubeGeometry = TubeGeometry;\n\t\texports.TubeBufferGeometry = TubeBufferGeometry;\n\t\texports.TorusKnotGeometry = TorusKnotGeometry;\n\t\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\t\texports.TorusGeometry = TorusGeometry;\n\t\texports.TorusBufferGeometry = TorusBufferGeometry;\n\t\texports.TextGeometry = TextGeometry;\n\t\texports.TextBufferGeometry = TextBufferGeometry;\n\t\texports.SphereGeometry = SphereGeometry;\n\t\texports.SphereBufferGeometry = SphereBufferGeometry;\n\t\texports.RingGeometry = RingGeometry;\n\t\texports.RingBufferGeometry = RingBufferGeometry;\n\t\texports.PlaneGeometry = PlaneGeometry;\n\t\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\t\texports.LatheGeometry = LatheGeometry;\n\t\texports.LatheBufferGeometry = LatheBufferGeometry;\n\t\texports.ShapeGeometry = ShapeGeometry;\n\t\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\t\texports.ExtrudeGeometry = ExtrudeGeometry;\n\t\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\t\texports.EdgesGeometry = EdgesGeometry;\n\t\texports.ConeGeometry = ConeGeometry;\n\t\texports.ConeBufferGeometry = ConeBufferGeometry;\n\t\texports.CylinderGeometry = CylinderGeometry;\n\t\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\t\texports.CircleGeometry = CircleGeometry;\n\t\texports.CircleBufferGeometry = CircleBufferGeometry;\n\t\texports.BoxGeometry = BoxGeometry;\n\t\texports.BoxBufferGeometry = BoxBufferGeometry;\n\t\texports.ShadowMaterial = ShadowMaterial;\n\t\texports.SpriteMaterial = SpriteMaterial;\n\t\texports.RawShaderMaterial = RawShaderMaterial;\n\t\texports.ShaderMaterial = ShaderMaterial;\n\t\texports.PointsMaterial = PointsMaterial;\n\t\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\t\texports.MeshStandardMaterial = MeshStandardMaterial;\n\t\texports.MeshPhongMaterial = MeshPhongMaterial;\n\t\texports.MeshToonMaterial = MeshToonMaterial;\n\t\texports.MeshNormalMaterial = MeshNormalMaterial;\n\t\texports.MeshLambertMaterial = MeshLambertMaterial;\n\t\texports.MeshDepthMaterial = MeshDepthMaterial;\n\t\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\t\texports.MeshBasicMaterial = MeshBasicMaterial;\n\t\texports.LineDashedMaterial = LineDashedMaterial;\n\t\texports.LineBasicMaterial = LineBasicMaterial;\n\t\texports.Material = Material;\n\t\texports.Float64BufferAttribute = Float64BufferAttribute;\n\t\texports.Float32BufferAttribute = Float32BufferAttribute;\n\t\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\t\texports.Int32BufferAttribute = Int32BufferAttribute;\n\t\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\t\texports.Int16BufferAttribute = Int16BufferAttribute;\n\t\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\t\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\t\texports.Int8BufferAttribute = Int8BufferAttribute;\n\t\texports.BufferAttribute = BufferAttribute;\n\t\texports.REVISION = REVISION;\n\t\texports.MOUSE = MOUSE;\n\t\texports.CullFaceNone = CullFaceNone;\n\t\texports.CullFaceBack = CullFaceBack;\n\t\texports.CullFaceFront = CullFaceFront;\n\t\texports.CullFaceFrontBack = CullFaceFrontBack;\n\t\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\t\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\t\texports.BasicShadowMap = BasicShadowMap;\n\t\texports.PCFShadowMap = PCFShadowMap;\n\t\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\t\texports.FrontSide = FrontSide;\n\t\texports.BackSide = BackSide;\n\t\texports.DoubleSide = DoubleSide;\n\t\texports.FlatShading = FlatShading;\n\t\texports.SmoothShading = SmoothShading;\n\t\texports.NoColors = NoColors;\n\t\texports.FaceColors = FaceColors;\n\t\texports.VertexColors = VertexColors;\n\t\texports.NoBlending = NoBlending;\n\t\texports.NormalBlending = NormalBlending;\n\t\texports.AdditiveBlending = AdditiveBlending;\n\t\texports.SubtractiveBlending = SubtractiveBlending;\n\t\texports.MultiplyBlending = MultiplyBlending;\n\t\texports.CustomBlending = CustomBlending;\n\t\texports.AddEquation = AddEquation;\n\t\texports.SubtractEquation = SubtractEquation;\n\t\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\t\texports.MinEquation = MinEquation;\n\t\texports.MaxEquation = MaxEquation;\n\t\texports.ZeroFactor = ZeroFactor;\n\t\texports.OneFactor = OneFactor;\n\t\texports.SrcColorFactor = SrcColorFactor;\n\t\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\t\texports.SrcAlphaFactor = SrcAlphaFactor;\n\t\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\t\texports.DstAlphaFactor = DstAlphaFactor;\n\t\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\t\texports.DstColorFactor = DstColorFactor;\n\t\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\t\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\t\texports.NeverDepth = NeverDepth;\n\t\texports.AlwaysDepth = AlwaysDepth;\n\t\texports.LessDepth = LessDepth;\n\t\texports.LessEqualDepth = LessEqualDepth;\n\t\texports.EqualDepth = EqualDepth;\n\t\texports.GreaterEqualDepth = GreaterEqualDepth;\n\t\texports.GreaterDepth = GreaterDepth;\n\t\texports.NotEqualDepth = NotEqualDepth;\n\t\texports.MultiplyOperation = MultiplyOperation;\n\t\texports.MixOperation = MixOperation;\n\t\texports.AddOperation = AddOperation;\n\t\texports.NoToneMapping = NoToneMapping;\n\t\texports.LinearToneMapping = LinearToneMapping;\n\t\texports.ReinhardToneMapping = ReinhardToneMapping;\n\t\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\t\texports.CineonToneMapping = CineonToneMapping;\n\t\texports.UVMapping = UVMapping;\n\t\texports.CubeReflectionMapping = CubeReflectionMapping;\n\t\texports.CubeRefractionMapping = CubeRefractionMapping;\n\t\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\t\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\t\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\t\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\t\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\t\texports.RepeatWrapping = RepeatWrapping;\n\t\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\t\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\t\texports.NearestFilter = NearestFilter;\n\t\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\t\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\t\texports.LinearFilter = LinearFilter;\n\t\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\t\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\t\texports.UnsignedByteType = UnsignedByteType;\n\t\texports.ByteType = ByteType;\n\t\texports.ShortType = ShortType;\n\t\texports.UnsignedShortType = UnsignedShortType;\n\t\texports.IntType = IntType;\n\t\texports.UnsignedIntType = UnsignedIntType;\n\t\texports.FloatType = FloatType;\n\t\texports.HalfFloatType = HalfFloatType;\n\t\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\t\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\t\texports.UnsignedShort565Type = UnsignedShort565Type;\n\t\texports.UnsignedInt248Type = UnsignedInt248Type;\n\t\texports.AlphaFormat = AlphaFormat;\n\t\texports.RGBFormat = RGBFormat;\n\t\texports.RGBAFormat = RGBAFormat;\n\t\texports.LuminanceFormat = LuminanceFormat;\n\t\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\t\texports.RGBEFormat = RGBEFormat;\n\t\texports.DepthFormat = DepthFormat;\n\t\texports.DepthStencilFormat = DepthStencilFormat;\n\t\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\t\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\t\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\t\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\t\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\t\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\t\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\t\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\t\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\t\texports.LoopOnce = LoopOnce;\n\t\texports.LoopRepeat = LoopRepeat;\n\t\texports.LoopPingPong = LoopPingPong;\n\t\texports.InterpolateDiscrete = InterpolateDiscrete;\n\t\texports.InterpolateLinear = InterpolateLinear;\n\t\texports.InterpolateSmooth = InterpolateSmooth;\n\t\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\t\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\t\texports.WrapAroundEnding = WrapAroundEnding;\n\t\texports.TrianglesDrawMode = TrianglesDrawMode;\n\t\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\t\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\t\texports.LinearEncoding = LinearEncoding;\n\t\texports.sRGBEncoding = sRGBEncoding;\n\t\texports.GammaEncoding = GammaEncoding;\n\t\texports.RGBEEncoding = RGBEEncoding;\n\t\texports.LogLuvEncoding = LogLuvEncoding;\n\t\texports.RGBM7Encoding = RGBM7Encoding;\n\t\texports.RGBM16Encoding = RGBM16Encoding;\n\t\texports.RGBDEncoding = RGBDEncoding;\n\t\texports.BasicDepthPacking = BasicDepthPacking;\n\t\texports.RGBADepthPacking = RGBADepthPacking;\n\t\texports.CubeGeometry = BoxGeometry;\n\t\texports.Face4 = Face4;\n\t\texports.LineStrip = LineStrip;\n\t\texports.LinePieces = LinePieces;\n\t\texports.MeshFaceMaterial = MeshFaceMaterial;\n\t\texports.MultiMaterial = MultiMaterial;\n\t\texports.PointCloud = PointCloud;\n\t\texports.Particle = Particle;\n\t\texports.ParticleSystem = ParticleSystem;\n\t\texports.PointCloudMaterial = PointCloudMaterial;\n\t\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\t\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\t\texports.Vertex = Vertex;\n\t\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\t\texports.Int8Attribute = Int8Attribute;\n\t\texports.Uint8Attribute = Uint8Attribute;\n\t\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\t\texports.Int16Attribute = Int16Attribute;\n\t\texports.Uint16Attribute = Uint16Attribute;\n\t\texports.Int32Attribute = Int32Attribute;\n\t\texports.Uint32Attribute = Uint32Attribute;\n\t\texports.Float32Attribute = Float32Attribute;\n\t\texports.Float64Attribute = Float64Attribute;\n\t\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\t\texports.SplineCurve3 = SplineCurve3;\n\t\texports.Spline = Spline;\n\t\texports.BoundingBoxHelper = BoundingBoxHelper;\n\t\texports.EdgesHelper = EdgesHelper;\n\t\texports.WireframeHelper = WireframeHelper;\n\t\texports.XHRLoader = XHRLoader;\n\t\texports.BinaryTextureLoader = BinaryTextureLoader;\n\t\texports.GeometryUtils = GeometryUtils;\n\t\texports.ImageUtils = ImageUtils;\n\t\texports.Projector = Projector;\n\t\texports.CanvasRenderer = CanvasRenderer;\n\t\n\t\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\texports.__esModule = true;\n\tvar THREE = __webpack_require__(78);\n\t// Why we need filtered logging.\n\tvar filterLogging = function (undesiredPattern, code) {\n\t    console.log(\"foo\");\n\t    var originalLog = console.log;\n\t    console.log = function () {\n\t        var args = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            args[_i] = arguments[_i];\n\t        }\n\t        return originalLog.apply(void 0, args && args.join(' ').match(undesiredPattern) ? [] : args);\n\t    };\n\t    code();\n\t    console.log = originalLog;\n\t};\n\tvar namePoints = [[53, 1], [54, 1], [70, 1], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2], [12, 2], [53, 2], [54, 2], [67, 2], [68, 2], [69, 2], [88, 2], [89, 2], [90, 2], [91, 2], [92, 2], [93, 2], [94, 2], [95, 2], [98, 2], [3, 3], [4, 3], [5, 3], [12, 3], [13, 3], [14, 3], [15, 3], [53, 3], [54, 3], [69, 3], [86, 3], [87, 3], [88, 3], [96, 3], [97, 3], [98, 3], [4, 4], [5, 4], [14, 4], [15, 4], [16, 4], [69, 4], [85, 4], [86, 4], [97, 4], [98, 4], [4, 5], [5, 5], [15, 5], [16, 5], [17, 5], [69, 5], [84, 5], [85, 5], [98, 5], [4, 6], [5, 6], [16, 6], [17, 6], [18, 6], [69, 6], [83, 6], [84, 6], [85, 6], [98, 6], [4, 7], [5, 7], [17, 7], [18, 7], [69, 7], [83, 7], [84, 7], [4, 8], [5, 8], [17, 8], [18, 8], [19, 8], [26, 8], [29, 8], [30, 8], [36, 8], [37, 8], [38, 8], [39, 8], [40, 8], [46, 8], [47, 8], [48, 8], [54, 8], [63, 8], [64, 8], [65, 8], [66, 8], [67, 8], [68, 8], [69, 8], [82, 8], [83, 8], [84, 8], [103, 8], [104, 8], [105, 8], [106, 8], [111, 8], [112, 8], [113, 8], [114, 8], [121, 8], [122, 8], [125, 8], [126, 8], [134, 8], [138, 8], [139, 8], [140, 8], [141, 8], [4, 9], [5, 9], [17, 9], [18, 9], [19, 9], [24, 9], [25, 9], [30, 9], [31, 9], [37, 9], [38, 9], [39, 9], [47, 9], [51, 9], [52, 9], [53, 9], [54, 9], [62, 9], [68, 9], [69, 9], [82, 9], [83, 9], [84, 9], [105, 9], [106, 9], [113, 9], [114, 9], [120, 9], [126, 9], [127, 9], [132, 9], [133, 9], [134, 9], [135, 9], [137, 9], [140, 9], [141, 9], [142, 9], [4, 10], [5, 10], [18, 10], [19, 10], [24, 10], [25, 10], [31, 10], [38, 10], [39, 10], [53, 10], [54, 10], [61, 10], [69, 10], [82, 10], [83, 10], [84, 10], [105, 10], [106, 10], [113, 10], [114, 10], [120, 10], [126, 10], [127, 10], [133, 10], [134, 10], [135, 10], [141, 10], [142, 10], [4, 11], [5, 11], [18, 11], [19, 11], [24, 11], [25, 11], [31, 11], [38, 11], [39, 11], [46, 11], [53, 11], [54, 11], [60, 11], [61, 11], [69, 11], [82, 11], [83, 11], [84, 11], [95, 11], [96, 11], [97, 11], [98, 11], [99, 11], [100, 11], [105, 11], [106, 11], [113, 11], [114, 11], [120, 11], [127, 11], [134, 11], [141, 11], [142, 11], [4, 12], [5, 12], [18, 12], [19, 12], [31, 12], [39, 12], [40, 12], [53, 12], [54, 12], [60, 12], [69, 12], [82, 12], [83, 12], [84, 12], [97, 12], [98, 12], [99, 12], [105, 12], [106, 12], [113, 12], [114, 12], [127, 12], [134, 12], [141, 12], [142, 12], [4, 13], [5, 13], [18, 13], [19, 13], [29, 13], [30, 13], [31, 13], [39, 13], [40, 13], [53, 13], [54, 13], [60, 13], [69, 13], [82, 13], [83, 13], [84, 13], [97, 13], [98, 13], [105, 13], [106, 13], [113, 13], [114, 13], [125, 13], [126, 13], [127, 13], [134, 13], [141, 13], [142, 13], [4, 14], [5, 14], [17, 14], [18, 14], [19, 14], [27, 14], [31, 14], [40, 14], [41, 14], [45, 14], [53, 14], [54, 14], [59, 14], [60, 14], [69, 14], [82, 14], [83, 14], [84, 14], [97, 14], [98, 14], [105, 14], [106, 14], [113, 14], [114, 14], [122, 14], [123, 14], [127, 14], [134, 14], [141, 14], [142, 14], [4, 15], [5, 15], [17, 15], [18, 15], [19, 15], [25, 15], [31, 15], [40, 15], [41, 15], [53, 15], [54, 15], [59, 15], [60, 15], [69, 15], [82, 15], [83, 15], [84, 15], [97, 15], [98, 15], [105, 15], [106, 15], [113, 15], [114, 15], [121, 15], [127, 15], [134, 15], [141, 15], [142, 15], [4, 16], [5, 16], [17, 16], [18, 16], [24, 16], [31, 16], [41, 16], [44, 16], [53, 16], [54, 16], [59, 16], [60, 16], [69, 16], [83, 16], [84, 16], [85, 16], [97, 16], [98, 16], [105, 16], [106, 16], [113, 16], [114, 16], [120, 16], [127, 16], [134, 16], [141, 16], [142, 16], [4, 17], [5, 17], [16, 17], [17, 17], [18, 17], [23, 17], [24, 17], [31, 17], [41, 17], [42, 17], [43, 17], [53, 17], [54, 17], [60, 17], [61, 17], [69, 17], [83, 17], [84, 17], [85, 17], [97, 17], [98, 17], [105, 17], [106, 17], [113, 17], [114, 17], [119, 17], [120, 17], [127, 17], [134, 17], [141, 17], [142, 17], [4, 18], [5, 18], [15, 18], [16, 18], [17, 18], [23, 18], [24, 18], [31, 18], [41, 18], [42, 18], [43, 18], [53, 18], [54, 18], [60, 18], [61, 18], [69, 18], [84, 18], [85, 18], [86, 18], [97, 18], [98, 18], [105, 18], [106, 18], [113, 18], [114, 18], [119, 18], [120, 18], [126, 18], [127, 18], [134, 18], [141, 18], [142, 18], [3, 19], [4, 19], [5, 19], [14, 19], [15, 19], [16, 19], [23, 19], [24, 19], [25, 19], [30, 19], [31, 19], [42, 19], [43, 19], [53, 19], [54, 19], [60, 19], [61, 19], [62, 19], [68, 19], [69, 19], [70, 19], [85, 19], [86, 19], [87, 19], [97, 19], [98, 19], [105, 19], [106, 19], [112, 19], [113, 19], [114, 19], [119, 19], [120, 19], [121, 19], [126, 19], [127, 19], [134, 19], [141, 19], [142, 19], [3, 20], [4, 20], [5, 20], [11, 20], [12, 20], [13, 20], [14, 20], [24, 20], [25, 20], [26, 20], [27, 20], [28, 20], [31, 20], [32, 20], [33, 20], [34, 20], [42, 20], [53, 20], [54, 20], [61, 20], [62, 20], [63, 20], [64, 20], [67, 20], [68, 20], [70, 20], [71, 20], [86, 20], [87, 20], [88, 20], [89, 20], [96, 20], [97, 20], [98, 20], [106, 20], [107, 20], [108, 20], [109, 20], [110, 20], [113, 20], [114, 20], [115, 20], [119, 20], [120, 20], [121, 20], [122, 20], [123, 20], [124, 20], [126, 20], [127, 20], [128, 20], [129, 20], [133, 20], [134, 20], [135, 20], [141, 20], [142, 20], [1, 21], [2, 21], [3, 21], [4, 21], [5, 21], [6, 21], [7, 21], [8, 21], [9, 21], [25, 21], [26, 21], [31, 21], [32, 21], [51, 21], [52, 21], [53, 21], [54, 21], [55, 21], [56, 21], [63, 21], [64, 21], [65, 21], [89, 21], [90, 21], [91, 21], [92, 21], [93, 21], [94, 21], [95, 21], [107, 21], [108, 21], [109, 21], [113, 21], [120, 21], [121, 21], [122, 21], [127, 21], [128, 21], [132, 21], [133, 21], [134, 21], [135, 21], [136, 21], [140, 21], [141, 21], [142, 21], [143, 21], [144, 21]];\n\t// const posiPoints = [[39, 1], [40, 1], [167, 1], [168, 1], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2], [12, 2], [37, 2], [40, 2], [41, 2], [42, 2], [117, 2], [118, 2], [119, 2], [120, 2], [121, 2], [122, 2], [123, 2], [124, 2], [125, 2], [126, 2], [127, 2], [128, 2], [129, 2], [130, 2], [131, 2], [167, 2], [168, 2], [3, 3], [4, 3], [11, 3], [12, 3], [36, 3], [41, 3], [42, 3], [119, 3], [120, 3], [130, 3], [131, 3], [167, 3], [168, 3], [3, 4], [12, 4], [36, 4], [119, 4], [120, 4], [131, 4], [3, 5], [36, 5], [119, 5], [120, 5], [131, 5], [3, 6], [4, 6], [35, 6], [36, 6], [45, 6], [119, 6], [120, 6], [3, 7], [4, 7], [13, 7], [35, 7], [36, 7], [44, 7], [45, 7], [119, 7], [120, 7], [3, 8], [4, 8], [5, 8], [22, 8], [23, 8], [24, 8], [25, 8], [26, 8], [33, 8], [34, 8], [35, 8], [36, 8], [37, 8], [38, 8], [39, 8], [40, 8], [43, 8], [44, 8], [45, 8], [46, 8], [47, 8], [48, 8], [51, 8], [52, 8], [53, 8], [54, 8], [55, 8], [58, 8], [59, 8], [60, 8], [61, 8], [62, 8], [68, 8], [69, 8], [76, 8], [79, 8], [80, 8], [92, 8], [93, 8], [100, 8], [101, 8], [102, 8], [103, 8], [119, 8], [120, 8], [137, 8], [141, 8], [142, 8], [143, 8], [144, 8], [154, 8], [155, 8], [156, 8], [157, 8], [168, 8], [176, 8], [180, 8], [181, 8], [182, 8], [192, 8], [193, 8], [194, 8], [195, 8], [205, 8], [206, 8], [207, 8], [208, 8], [209, 8], [221, 8], [222, 8], [3, 9], [4, 9], [5, 9], [6, 9], [7, 9], [20, 9], [21, 9], [26, 9], [27, 9], [35, 9], [36, 9], [44, 9], [45, 9], [52, 9], [53, 9], [60, 9], [61, 9], [69, 9], [74, 9], [75, 9], [80, 9], [81, 9], [86, 9], [87, 9], [88, 9], [89, 9], [91, 9], [92, 9], [93, 9], [94, 9], [98, 9], [103, 9], [104, 9], [119, 9], [120, 9], [135, 9], [136, 9], [137, 9], [138, 9], [140, 9], [143, 9], [144, 9], [145, 9], [153, 9], [158, 9], [159, 9], [160, 9], [161, 9], [162, 9], [165, 9], [166, 9], [167, 9], [168, 9], [173, 9], [174, 9], [175, 9], [176, 9], [179, 9], [181, 9], [182, 9], [183, 9], [191, 9], [195, 9], [196, 9], [197, 9], [204, 9], [209, 9], [210, 9], [215, 9], [216, 9], [217, 9], [218, 9], [220, 9], [221, 9], [222, 9], [223, 9], [4, 10], [5, 10], [6, 10], [7, 10], [8, 10], [9, 10], [19, 10], [20, 10], [27, 10], [28, 10], [35, 10], [36, 10], [44, 10], [45, 10], [53, 10], [60, 10], [61, 10], [74, 10], [75, 10], [81, 10], [87, 10], [89, 10], [90, 10], [93, 10], [97, 10], [104, 10], [105, 10], [119, 10], [120, 10], [121, 10], [128, 10], [129, 10], [137, 10], [138, 10], [139, 10], [144, 10], [145, 10], [152, 10], [158, 10], [159, 10], [160, 10], [167, 10], [168, 10], [175, 10], [176, 10], [177, 10], [183, 10], [184, 10], [190, 10], [196, 10], [197, 10], [198, 10], [203, 10], [210, 10], [211, 10], [216, 10], [218, 10], [219, 10], [222, 10], [6, 11], [7, 11], [8, 11], [9, 11], [10, 11], [19, 11], [28, 11], [29, 11], [35, 11], [36, 11], [44, 11], [45, 11], [53, 11], [54, 11], [61, 11], [68, 11], [74, 11], [75, 11], [81, 11], [88, 11], [89, 11], [97, 11], [104, 11], [105, 11], [119, 11], [120, 11], [121, 11], [122, 11], [123, 11], [124, 11], [125, 11], [126, 11], [127, 11], [128, 11], [129, 11], [137, 11], [138, 11], [145, 11], [152, 11], [159, 11], [160, 11], [167, 11], [168, 11], [175, 11], [176, 11], [183, 11], [184, 11], [189, 11], [197, 11], [198, 11], [202, 11], [210, 11], [211, 11], [217, 11], [218, 11], [7, 12], [8, 12], [9, 12], [10, 12], [11, 12], [18, 12], [19, 12], [28, 12], [29, 12], [35, 12], [36, 12], [44, 12], [45, 12], [53, 12], [54, 12], [61, 12], [62, 12], [81, 12], [88, 12], [96, 12], [97, 12], [104, 12], [105, 12], [106, 12], [119, 12], [120, 12], [129, 12], [137, 12], [138, 12], [145, 12], [151, 12], [152, 12], [159, 12], [160, 12], [167, 12], [168, 12], [175, 12], [176, 12], [183, 12], [184, 12], [189, 12], [190, 12], [196, 12], [197, 12], [198, 12], [202, 12], [203, 12], [209, 12], [210, 12], [211, 12], [217, 12], [9, 13], [10, 13], [11, 13], [12, 13], [18, 13], [19, 13], [28, 13], [29, 13], [35, 13], [36, 13], [44, 13], [45, 13], [54, 13], [55, 13], [60, 13], [61, 13], [62, 13], [67, 13], [79, 13], [80, 13], [81, 13], [88, 13], [96, 13], [97, 13], [119, 13], [120, 13], [137, 13], [138, 13], [145, 13], [152, 13], [159, 13], [160, 13], [167, 13], [168, 13], [175, 13], [176, 13], [183, 13], [184, 13], [189, 13], [190, 13], [202, 13], [203, 13], [217, 13], [10, 14], [11, 14], [12, 14], [13, 14], [18, 14], [19, 14], [28, 14], [29, 14], [35, 14], [36, 14], [44, 14], [45, 14], [54, 14], [55, 14], [60, 14], [61, 14], [62, 14], [63, 14], [77, 14], [81, 14], [88, 14], [96, 14], [119, 14], [120, 14], [137, 14], [138, 14], [145, 14], [152, 14], [153, 14], [159, 14], [160, 14], [167, 14], [168, 14], [175, 14], [176, 14], [183, 14], [184, 14], [189, 14], [202, 14], [217, 14], [11, 15], [12, 15], [13, 15], [18, 15], [19, 15], [29, 15], [35, 15], [36, 15], [44, 15], [45, 15], [55, 15], [59, 15], [62, 15], [63, 15], [75, 15], [81, 15], [88, 15], [96, 15], [97, 15], [119, 15], [120, 15], [137, 15], [138, 15], [145, 15], [152, 15], [153, 15], [159, 15], [167, 15], [168, 15], [175, 15], [176, 15], [183, 15], [184, 15], [189, 15], [202, 15], [217, 15], [12, 16], [13, 16], [18, 16], [19, 16], [29, 16], [35, 16], [36, 16], [44, 16], [45, 16], [55, 16], [56, 16], [63, 16], [66, 16], [74, 16], [81, 16], [88, 16], [96, 16], [97, 16], [119, 16], [120, 16], [137, 16], [138, 16], [145, 16], [153, 16], [154, 16], [155, 16], [157, 16], [158, 16], [167, 16], [168, 16], [175, 16], [176, 16], [183, 16], [184, 16], [189, 16], [202, 16], [203, 16], [217, 16], [12, 17], [13, 17], [18, 17], [19, 17], [28, 17], [29, 17], [35, 17], [36, 17], [44, 17], [45, 17], [55, 17], [56, 17], [57, 17], [58, 17], [63, 17], [64, 17], [65, 17], [73, 17], [74, 17], [81, 17], [88, 17], [96, 17], [97, 17], [119, 17], [120, 17], [137, 17], [138, 17], [145, 17], [153, 17], [167, 17], [168, 17], [175, 17], [176, 17], [183, 17], [184, 17], [189, 17], [190, 17], [199, 17], [202, 17], [203, 17], [217, 17], [2, 18], [12, 18], [13, 18], [19, 18], [20, 18], [28, 18], [29, 18], [35, 18], [36, 18], [44, 18], [45, 18], [56, 18], [57, 18], [58, 18], [63, 18], [64, 18], [65, 18], [73, 18], [74, 18], [81, 18], [88, 18], [97, 18], [98, 18], [106, 18], [119, 18], [120, 18], [132, 18], [137, 18], [138, 18], [145, 18], [152, 18], [167, 18], [168, 18], [175, 18], [176, 18], [183, 18], [184, 18], [189, 18], [190, 18], [191, 18], [202, 18], [203, 18], [204, 18], [217, 18], [2, 19], [3, 19], [11, 19], [12, 19], [13, 19], [19, 19], [20, 19], [28, 19], [35, 19], [36, 19], [44, 19], [45, 19], [56, 19], [57, 19], [64, 19], [73, 19], [74, 19], [75, 19], [80, 19], [81, 19], [88, 19], [97, 19], [98, 19], [99, 19], [105, 19], [119, 19], [120, 19], [131, 19], [132, 19], [137, 19], [138, 19], [145, 19], [152, 19], [167, 19], [168, 19], [175, 19], [176, 19], [183, 19], [184, 19], [190, 19], [191, 19], [192, 19], [197, 19], [198, 19], [203, 19], [204, 19], [205, 19], [211, 19], [217, 19], [2, 20], [3, 20], [4, 20], [5, 20], [10, 20], [11, 20], [12, 20], [20, 20], [21, 20], [27, 20], [35, 20], [36, 20], [45, 20], [46, 20], [48, 20], [57, 20], [64, 20], [74, 20], [75, 20], [76, 20], [77, 20], [78, 20], [81, 20], [82, 20], [83, 20], [84, 20], [87, 20], [88, 20], [89, 20], [98, 20], [99, 20], [100, 20], [101, 20], [102, 20], [103, 20], [104, 20], [119, 20], [120, 20], [121, 20], [129, 20], [130, 20], [131, 20], [136, 20], [137, 20], [138, 20], [144, 20], [145, 20], [146, 20], [152, 20], [153, 20], [154, 20], [155, 20], [156, 20], [157, 20], [158, 20], [159, 20], [160, 20], [167, 20], [168, 20], [175, 20], [176, 20], [183, 20], [184, 20], [190, 20], [191, 20], [192, 20], [193, 20], [194, 20], [195, 20], [196, 20], [197, 20], [204, 20], [205, 20], [206, 20], [207, 20], [208, 20], [209, 20], [210, 20], [216, 20], [217, 20], [218, 20], [2, 21], [6, 21], [7, 21], [8, 21], [9, 21], [10, 21], [22, 21], [23, 21], [24, 21], [25, 21], [26, 21], [33, 21], [34, 21], [35, 21], [36, 21], [37, 21], [38, 21], [39, 21], [45, 21], [46, 21], [47, 21], [75, 21], [76, 21], [81, 21], [82, 21], [86, 21], [87, 21], [88, 21], [89, 21], [90, 21], [91, 21], [99, 21], [100, 21], [101, 21], [102, 21], [103, 21], [117, 21], [118, 21], [119, 21], [120, 21], [121, 21], [122, 21], [123, 21], [124, 21], [125, 21], [126, 21], [127, 21], [128, 21], [129, 21], [130, 21], [131, 21], [135, 21], [136, 21], [137, 21], [138, 21], [139, 21], [143, 21], [144, 21], [145, 21], [146, 21], [147, 21], [152, 21], [153, 21], [154, 21], [155, 21], [156, 21], [157, 21], [158, 21], [159, 21], [160, 21], [161, 21], [165, 21], [166, 21], [167, 21], [168, 21], [169, 21], [170, 21], [173, 21], [174, 21], [175, 21], [176, 21], [177, 21], [178, 21], [181, 21], [182, 21], [183, 21], [184, 21], [185, 21], [186, 21], [192, 21], [193, 21], [194, 21], [195, 21], [205, 21], [206, 21], [207, 21], [208, 21], [215, 21], [216, 21], [217, 21], [218, 21], [219, 21], [220, 21], [152, 22], [161, 22], [151, 23], [150, 24], [151, 24], [150, 25], [151, 25], [161, 25], [151, 26], [152, 26], [153, 26], [159, 26], [160, 26], [152, 27], [153, 27], [154, 27], [155, 27], [156, 27], [157, 27]].filter((d, i) => (i % 2 === 0));\n\tfunction mobilecheck() {\n\t    var check = false;\n\t    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)))\n\t        check = true; })(navigator.userAgent || navigator.vendor || window.opera);\n\t    return check;\n\t}\n\tvar isMobile = mobilecheck();\n\tvar maxSpeed = 14;\n\tvar planeMaterial = new THREE.MeshStandardMaterial({ color: 0x2199e8, side: THREE.DoubleSide });\n\tvar planeGeometry = new THREE.PlaneGeometry(1.3, 1.3);\n\tplaneGeometry.faces.pop();\n\tvar Plane = /** @class */ (function () {\n\t    function Plane(posX, posY, rendererWidth) {\n\t        this.posX = posX;\n\t        this.posY = posY;\n\t        this.speedX = 0;\n\t        this.speedY = 0;\n\t        this.rotateX = 0.02 * Math.random() + 0.005;\n\t        this.rotateY = 0.02 * Math.random() + 0.005;\n\t        var plane = new THREE.Mesh(planeGeometry, planeMaterial);\n\t        this.mesh = plane;\n\t        this.mesh.rotateX(Math.PI * 2 * Math.random());\n\t        this.mesh.rotateY(Math.PI * 2 * Math.random());\n\t        // 400 -> 1.5, 800 -> 1.1\n\t        this.mesh.scale.divideScalar(-0.0007 * rendererWidth + 1.9);\n\t        this.mesh.scale.multiplyScalar(1 + Math.random());\n\t        this.mesh.position.x = (Math.random() - 0.5) * visibleWidth;\n\t        this.mesh.position.y = (Math.random() - 0.5) * visibleHeight;\n\t        scene.add(this.mesh);\n\t    }\n\t    Plane.prototype.setPos = function (x, y) {\n\t        this.mesh.position.x = x;\n\t        this.mesh.position.y = y;\n\t    };\n\t    Plane.prototype.update = function (mouseX, mouseY) {\n\t        var _a = this.mesh.position, x = _a.x, y = _a.y;\n\t        this.speedX = (this.posX - x) / visibleWidth * maxSpeed;\n\t        this.speedX = Math.min(this.speedX, maxSpeed);\n\t        this.speedY = (this.posY - y) / visibleHeight * maxSpeed;\n\t        this.speedY = Math.min(this.speedY, maxSpeed);\n\t        if (!isMobile) {\n\t            var distance = Math.sqrt(Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2));\n\t            if (distance < 20) {\n\t                var accX = (mouseX - x) / 3;\n\t                this.speedX -= accX;\n\t                var accY = (mouseY - y) / 3;\n\t                this.speedY -= accY;\n\t            }\n\t        }\n\t        this.mesh.position.x += this.speedX;\n\t        this.mesh.rotateX(this.rotateX);\n\t        this.mesh.rotateY(this.rotateY);\n\t        this.mesh.position.y += this.speedY;\n\t    };\n\t    Plane.prototype.destroy = function () {\n\t        scene.remove(this.mesh);\n\t    };\n\t    return Plane;\n\t}());\n\tvar planes = [];\n\tvar scene = new THREE.Scene();\n\tscene.add(new THREE.AmbientLight(0xFFFFFF));\n\tvar light = new THREE.DirectionalLight(0xffffff, .5);\n\tlight.position.set(200, 200, 5);\n\tscene.add(light);\n\tvar hemisphereLight = new THREE.HemisphereLight(0xaaaaaa, 0x444444, 0.9);\n\tscene.add(hemisphereLight);\n\tvar renderer;\n\tfilterLogging(/^THREE\\.WebGLRenderer\\s*\\d*$/, function () {\n\t    renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n\t});\n\tdocument.addEventListener('mousemove', onDocumentMouseMove);\n\tvar rayX = 99999;\n\tvar rayY = 99999;\n\tfunction onDocumentMouseMove(evt) {\n\t    var yInc = window.scrollY ? window.scrollY : 0;\n\t    rayX = (evt.clientX - renderer.domElement.offsetLeft) * displayRatio - visibleWidth / 2;\n\t    rayY = -((evt.clientY + yInc - renderer.domElement.offsetTop) * displayRatio - visibleHeight / 2);\n\t}\n\tvar drawText = function (points, left, right, top) {\n\t    var minX = Number.MAX_VALUE;\n\t    var minY = Number.MAX_VALUE;\n\t    var maxX = Number.MIN_VALUE;\n\t    var maxY = Number.MIN_VALUE;\n\t    var process = function (x, y) {\n\t        var plane = new Plane(x, y, renderWidth);\n\t        planes.push(plane);\n\t    };\n\t    points.forEach(function (d) {\n\t        if (d[0] < minX)\n\t            minX = d[0];\n\t        if (d[1] < minY)\n\t            minY = d[1];\n\t        if (d[0] > maxX)\n\t            maxX = d[0];\n\t        if (d[1] > maxY)\n\t            maxY = d[1];\n\t    });\n\t    var scale = (right - left) / (maxX - minX);\n\t    var pointer = 0;\n\t    var renderPoints = function () {\n\t        var boundary = Math.min(pointer + 100, points.length);\n\t        for (; pointer < boundary; pointer++) {\n\t            var _a = points[pointer], x = _a[0], y = _a[1];\n\t            process(left + x * scale, top - y * scale);\n\t        }\n\t        if (pointer < points.length) {\n\t            setTimeout(renderPoints, 0);\n\t        }\n\t    };\n\t    renderPoints();\n\t};\n\tvar distanceFromCamera = 100;\n\tvar renderWidth = window.innerWidth;\n\tvar renderHeight = window.innerHeight;\n\tvar camera = new THREE.PerspectiveCamera(75, renderWidth / renderHeight, 0.1, 1000);\n\tcamera.position.z = distanceFromCamera;\n\tvar visibleHeight = 2 * Math.tan((Math.PI / 180) * camera.fov / 2) * distanceFromCamera;\n\tvar visibleWidth = visibleHeight * renderWidth / renderHeight;\n\tvar displayRatio = visibleHeight / renderHeight;\n\tvar onReset = false;\n\tfunction getRendererWidth() {\n\t    var width = document.querySelector(targetSelector).offsetWidth;\n\t    return Math.min(1200, width);\n\t}\n\tfunction rebuildParticles() {\n\t    onReset = true;\n\t    renderWidth = getRendererWidth();\n\t    renderHeight = document.querySelector(targetSelector).offsetHeight;\n\t    renderer.setSize(renderWidth, renderHeight);\n\t    camera.aspect = renderWidth / renderHeight;\n\t    camera.updateProjectionMatrix();\n\t    visibleHeight = 2 * Math.tan((Math.PI / 180) * camera.fov / 2) * distanceFromCamera;\n\t    visibleWidth = visibleHeight * renderWidth / renderHeight;\n\t    displayRatio = visibleHeight / renderHeight;\n\t    if (planes.length) {\n\t        planes.forEach(function (d) { return d.destroy(); });\n\t        planes = [];\n\t    }\n\t    drawText(namePoints, -visibleWidth / 2.6, visibleWidth / 2.6, visibleHeight / 2 - 50);\n\t    onReset = false;\n\t}\n\tvar isOnDebounce = false;\n\tfunction reset() {\n\t    if (!isOnDebounce) {\n\t        isOnDebounce = true;\n\t        setTimeout(function () {\n\t            isOnDebounce = false;\n\t            if (getRendererWidth() === renderWidth)\n\t                return;\n\t            rebuildParticles();\n\t        }, 1500);\n\t    }\n\t}\n\tfunction renderingLoop() {\n\t    if (!onReset) {\n\t        renderer.render(scene, camera);\n\t        planes.forEach(function (d) { return d.update(rayX, rayY); });\n\t    }\n\t    requestAnimationFrame(renderingLoop);\n\t}\n\tvar targetSelector;\n\tfunction render(selector) {\n\t    targetSelector = selector;\n\t    window.addEventListener('resize', reset);\n\t    document.querySelector(selector).appendChild(renderer.domElement);\n\t    rebuildParticles();\n\t    renderingLoop();\n\t}\n\texports[\"default\"] = render;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"b06871f281fee6b241d60582ae9369b9.ttf\";\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"af7ae505a9eed503f8b8e6982036873e.woff2\";\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"fee66e712a8a08eef5805a46892932ad.woff\";\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"fffbb1ff3900fd9c2aa9a11c95e24b3b.png\";\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"953d1571691157d26d0f78250f9f31bd.png\";\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"823825cb2e6a279a80ed469df624e6ac.png\";\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"9f4738f7a5cbd43ff258aead82b3829f.png\";\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"79594f5985518085d4b125c27f2c5727.png\";\n\n/***/ })\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// app918367730d6546be08a1.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 918367730d6546be08a1","import 'core-js/fn/object/assign'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport renderParticles from './particles.ts';\n\nimport App from './components/Main'\n\nimport 'normalize.css/normalize.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'styles/App.scss'\n\n// Render the main component into the dom\nReactDOM.render(<App />, document.getElementById('main'))\n\n!!window.WebGLRenderingContext && renderParticles(\"#header\");\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 2\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 3\n// module chunks = 0","export const ABOUT_ME = 'about'\nexport const ARTICLES = 'articles'\nexport const MY_WORKS = 'my_works'\nexport const CONTACT_ME = 'me'\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/domID.js","var core = module.exports = { version: '2.6.10' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_core.js\n// module id = 5\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_descriptors.js\n// module id = 6\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_global.js\n// module id = 7\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_fails.js\n// module id = 8\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_is-object.js\n// module id = 9\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_defined.js\n// module id = 10\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_has.js\n// module id = 11\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_hide.js\n// module id = 12\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_iobject.js\n// module id = 13\n// module chunks = 0","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_shared.js\n// module id = 14\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_to-integer.js\n// module id = 15\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_to-iobject.js\n// module id = 16\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_uid.js\n// module id = 17\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 18\n// module chunks = 0","import React, { Component } from 'react'\n\nimport { ABOUT_ME } from 'constants/domID'\nimport DESCRIPTION_LIST from 'constants/descriptionList'\nimport Works from './Works'\nimport Articles from './Articles'\nimport 'styles/About.scss'\n\n\nexport default class About extends Component {\n  constructor() {\n    super();\n    this.state = {\n      descriptionList: DESCRIPTION_LIST.map(({text, meta}) => ({\n        meta,\n        text: text,\n        // Remove the typing animation\n        pointer: 9999\n      }))\n    };\n  }\n\n  incrementDescriptionText() {\n    const { descriptionList } = this.state;\n    let incremented = false;\n    descriptionList.forEach((d) => {\n      if (incremented) {\n        return;\n      }\n      if (d.text.length > d.pointer) {\n        d.pointer++;\n        incremented = true;\n      }\n    });\n    if (incremented) {\n      this.setState({descriptionList});\n      setTimeout(() => {\n        this.incrementDescriptionText();\n      }, 30);\n    }\n  }\n\n  componentDidMount() {\n    this.incrementDescriptionText();\n  }\n\n  mappingText(text, pointer, meta) {\n    let newText = text.slice(0, pointer);\n    if (!meta || !meta.tagList) {\n      return newText;\n    }\n    const { tagList } = meta;\n    let tagListPointer = 0;\n    let shouldWrapTag = false;\n    let displacement = 0;\n    let domEndingTag = '';\n\n    for (let i = 0; i < newText.length; i++) {\n      const {start, end, tag, attributes} = tagList[tagListPointer];\n      const domStartTag = `<${tag} ${attributes ? attributes : ''}>`;\n      domEndingTag = `</${tag}>`;\n\n      if (i === (start + displacement)) {\n        newText = `${newText.slice(0, i)}${domStartTag}${newText.slice(i)}`;\n        displacement += domStartTag.length;\n        i += domStartTag.length;\n        shouldWrapTag = true;\n      }\n\n      if (i === (end + displacement)) {\n        newText = `${newText.slice(0, i)}${domEndingTag}${newText.slice(i)}`;\n        displacement += domEndingTag.length;\n        i += domEndingTag.length;\n        tagListPointer++;\n        shouldWrapTag = false;\n      }\n    }\n    if (shouldWrapTag) {\n      newText += domEndingTag;\n    }\n    return newText;\n  }\n\n  mapDescriptionList() {\n    const { descriptionList } = this.state;\n    return descriptionList.map(({text, pointer, meta}, i) => {\n      const length = text.length;\n      const isDone = (i === (descriptionList.length - 1)) &&\n        pointer === length;\n      return pointer > 0 && (\n        <div key={i}>\n          <p>\n            <span dangerouslySetInnerHTML={{__html: this.mappingText(text, pointer, meta)}} />\n            {((pointer < length) || isDone) && <span className={`typing-cursor ${isDone ? 'done' : ''}`} />}\n          </p>\n        </div>\n      )\n    });\n  }\n\n  render() {\n    return (\n      <main className=\"About row\" id={ABOUT_ME}>\n        <div>\n          <div className=\"flex-container\">\n            <section className='column small-10 description-list' aria-label='introduction'>\n              {\n                this.mapDescriptionList()\n              }\n            </section>\n          </div>\n          <div className=\"flex-container\">\n            <a\n              aria-label=\"David's Github profile\"\n              className='column small-6 medium-3 account-container'\n              target='_blank'\n              href='https://github.com/EcutDavid'\n            >\n              <i className='fa fa-github' />\n              Github\n            </a>\n            <a\n              aria-label=\"David's Stack overflow profile\"\n              className='column small-6 medium-3 account-container'\n              target='_blank'\n              href='http://stackoverflow.com/users/5076405/david-guan'\n            >\n              <i className='fa fa-stack-overflow' />\n              Stack overflow\n            </a>\n            <a\n              aria-label=\"David's Medium homepage\"\n              className='column small-6 medium-3 account-container'\n              target='_blank'\n              href='https://medium.com/@davidguandev'\n            >\n              <i className='fa fa-medium' />\n              Medium\n            </a>\n            <a\n              aria-label=\"David's Youtube channel\"\n              className='column small-6 medium-3 account-container'\n              target='_blank'\n              href='https://www.youtube.com/channel/UCxSyYbODJF3ULNMoRwxjJbg'\n            >\n              <i className='fa fa-youtube' />\n              Youtube channel\n            </a>\n          </div>\n          <Works />\n          <Articles />\n        </div>\n      </main>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/About.js","import React, { Component } from \"react\";\n\nimport data from \"constants/articles\";\nimport { ARTICLES } from \"constants/domID\";\nimport \"styles/Articles.scss\";\n\nexport default class Articles extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showActionButton: false,\n      showAll: true\n    };\n  }\n\n  toggleShowAll() {\n    const { showAll } = this.state;\n\n    this.setState({\n      showAll: !showAll\n    });\n    setTimeout(() => {\n      this.setState({ showActionButton: false });\n    }, 0);\n  }\n\n  render() {\n    const { showAll, showActionButton } = this.state;\n    return (\n      <div id={ARTICLES} className=\"articles-container\">\n        <h2 className=\"title\">Articles</h2>\n        <div className=\"content\">\n          {data.slice(0, showAll ? Number.MAX_VALUE : 5).map((d, i) => (\n            <article\n              className=\"flex-container\"\n              key={i}\n              aria-label={`${d.name}, ${d.date}`}\n            >\n              <div className=\"small-11 small-centered medium-9 large-7\">\n                <div className=\"article\">\n                  <h3>\n                    <a className=\"link\" target=\"_blank\" href={d.url}>\n                      {d.name}\n                    </a>\n                  </h3>\n                  <span className=\"date\">{d.date}</span>\n                </div>\n              </div>\n            </article>\n          ))}\n        </div>\n        {showActionButton && (\n          <button\n            className={`button action-button ${showAll ? \"hide-button\" : \"\"}`}\n            disabled={showAll ? true : false}\n            onClick={() => this.toggleShowAll()}\n          >\n            Display more articles\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Articles.js","import React, { Component } from 'react'\n\nimport { CONTACT_ME } from 'constants/domID'\nimport 'styles/Footer.scss'\n\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"Footer\" id={CONTACT_ME}>\n        <a\n          aria-label=\"David's linkedin profile\"\n          className='footer-link'\n          target='_blank'\n          href='https://www.linkedin.com/in/david-guan-64b69b110'\n        >\n          <i className='fa fa-linkedin-square' />\n        </a>\n        <a\n          aria-label=\"David's twitter profile\"\n          className='footer-link'\n          target='_blank'\n          href='https://twitter.com/davidguandev'\n        >\n          <i className='fa fa-twitter' />\n        </a>\n        <br />\n        <a\n          aria-label=\"Send a email to David\"\n          className=\"mail\"\n          href=\"mailto:davidguandev@gmail.com\"\n        >\n          davidguandev@gmail.com\n        </a>\n        <div className=\"snack-bar\">\n          <p>All the assets cached locally.</p>\n          <p>Ready for offline situations!</p>\n        </div>\n      </footer>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Footer.js","import React, { Component } from 'react'\n\nimport Footer from 'components/Footer'\nimport About from 'components/About'\n\nexport default class AppComponent extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <About />\n        <Footer />\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Main.js","import React, { Component } from \"react\";\nimport \"styles/Work.scss\";\n\nexport default class Work extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const {\n      title,\n      picture,\n      description,\n      className,\n      index,\n      isIframe,\n      pictureAlt\n    } = this.props;\n\n    return (\n      <section\n        aria-label={`Project ${title}`}\n        className={className}\n        style={index === 5 ? { float: \"right\" } : {}}\n      >\n        {!isIframe ? (\n          <img className=\"img thumbnail\" src={picture} alt={pictureAlt} />\n        ) : (\n          <iframe\n            className=\"img thumbnail\"\n            width=\"300\"\n            height=\"300\"\n            scrolling=\"no\"\n          />\n        )}\n        <h3 aria-label={`Project ${title}`}>{title}</h3>\n        <div className=\"description\">{description}</div>\n      </section>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Work.js","import React, { Component } from 'react'\n\nimport Work from './Work'\nimport data from 'constants/worksData'\nimport { MY_WORKS } from 'constants/domID'\nimport 'styles/Works.scss'\n\nexport default class Works extends Component {\n  constructor() {\n    super()\n    this.state={\n      // Just have 5 projects for now, no need for the toggle button.\n      showAll: true\n    }\n  }\n\n  toggleShowAll() {\n    const { showAll } = this.state\n\n    this.setState({\n      showAll: !showAll\n    });\n  }\n\n  render() {\n    const { showAll } = this.state\n    return (\n      <div id={MY_WORKS}>\n        <h2 className='title'>Projects</h2>\n        <div className='flex-container work-container'>\n          {\n            data.slice(0, showAll ? 6 : 3).map((d, k) =>\n              <Work\n                {...d}\n                key={k}\n                className='column work medium-6 large-4'\n                index={k}\n              />\n            )\n          }\n        </div>\n        {!showAll && (\n          <button\n            className={`button action-button ${showAll ? 'hide-button' : ''}`}\n            disabled={showAll ? true : false}\n            onClick={() => this.toggleShowAll()}\n          >\n            More\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Works.js","export default [\n  {\n    date: \"Jan 2020\",\n    url: \"https://medium.com/@davidguandev/2019-year-in-review-d4580d38cd3a\",\n    name: \"2019 Year in Review\"\n  },\n  {\n    date: \"Oct 2019\",\n    url:\n      \"https://medium.com/@davidguandev/build-a-voice-notes-app-part-2-user-system-5aa58594469e\",\n    name: \"Build a Voice Notes App — Part 2, User System\"\n  },\n  {\n    date: \"Aug 2019\",\n    url:\n      \"https://medium.com/@davidguandev/build-a-voice-notes-app-part-1-text-to-speech-pipeline-afde7e42da63\",\n    name: \"Build a Voice Notes App — Part 1, Text to Speech Pipeline\"\n  },\n  {\n    date: \"Apr 2019\",\n    url:\n      \"https://medium.com/@davidguandev/reversing-string-that-contains-emojis-in-javascript-and-c-2d2979d28e26\",\n    name: \"Reversing String That Contains Emojis in Javascript and C++\"\n  },\n  {\n    date: \"Jan 2019\",\n    url: \"https://medium.com/p/8f2c498fcc7e\",\n    name: \"2018 Year in Review\"\n  },\n  {\n    date: \"Dec 2018\",\n    url: \"https://medium.com/p/1ef024e85c22\",\n    name: \"AOC 2018 Day 20: A Regular Map\"\n  },\n  {\n    date: \"June 2018\",\n    name: \"Fixed a Bunch of Accessibility Issues for My Website(And How)\",\n    url: \"https://medium.com/p/bbaac48d314f\"\n  },\n  {\n    date: \"June 2018\",\n    name: \"A Bash Script That Saves Me from git -m “I forgot git add”\",\n    url: \"https://medium.com/p/434b8af95311\"\n  },\n  {\n    date: \"May 2018\",\n    name: \"Participating Google Code Jam(the First Time)\",\n    url: \"https://medium.com/p/67bba2d6b7f0\"\n  },\n  {\n    date: \"May 2018\",\n    name: \"Introduction to Dynamic Programming with Examples\",\n    url: \"https://medium.com/p/bc04dca3ccee\"\n  },\n  {\n    date: \"Jan 2018\",\n    name: \"Haskell Study Note 01, Sorting\",\n    url: \"https://medium.com/p/46b49648e084\"\n  },\n  {\n    date: \"Nov 2017\",\n    name: \"Alpha Blending and WebGL\",\n    url: \"https://medium.com/p/823d86de00d8\"\n  },\n  {\n    date: \"Oct 2017\",\n    name: \"Build ARKit Application with Unity\",\n    url: \"https://medium.com/p/10af4a5e3b05\"\n  },\n  {\n    date: \"Sep 2017\",\n    name: \"Build Particles Effect with three.js or PixiJS\",\n    url: \"https://medium.com/p/7814e154bd52\"\n  },\n  {\n    date: \"Sep 2017\",\n    name: \"Build an Online Photo Filter Application\",\n    url: \"https://medium.com/p/d6e00c36a3bb\"\n  },\n  {\n    date: \"Aug 2017\",\n    name: \"Build a flappy bird copy with TypeScript & Pixi.js\",\n    url: \"https://medium.com/p/890f5a07931e\"\n  },\n  {\n    date: \"Aug 2017\",\n    name: \"WebGL and Image Filter 101\",\n    url: \"https://medium.com/p/5017b290d02f\"\n  },\n  {\n    date: \"Jul 2016\",\n    name: \"Build a Tic Tac Toe with React Native\",\n    url: \"https://medium.com/p/2a3c44e697f2\"\n  },\n  {\n    date: \"Jul 2016\",\n    name: \"Let’s build a React Native application\",\n    url: \"https://medium.com/p/4190839a4f5c\"\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/articles.js","const CURRENT_POSITION = 'Engineer at Canva.';\n\nexport default [\n  {\n    text: CURRENT_POSITION,\n    meta: {\n      tagList: [\n        {\n          tag: \"a\",\n          start: CURRENT_POSITION.indexOf(\"Canva\"),\n          end: CURRENT_POSITION.indexOf(\"Canva\") + \"Canva\".length,\n          attributes:\n            'href=\"https://www.canva.com/\" target=\"_blank\" aria-label=\"canva, a company that provides graphic-design tools.\"'\n        }\n      ]\n    }\n  },\n  {\n    text: \"Programming machines to do web and graphics stuff.\"\n    // text: MAIN_EXPERIENCE,\n    // meta: {\n    //   tagList: [\n    //     {\n    //       tag: 'b',\n    //       start: MAIN_EXPERIENCE.indexOf('single page applications'),\n    //       end: MAIN_EXPERIENCE.indexOf('single page applications') + 'single page applications'.length\n    //     },\n    //     {\n    //       tag: 'b',\n    //       start: MAIN_EXPERIENCE.indexOf('javascript'),\n    //       end: MAIN_EXPERIENCE.indexOf('javascript') + 'javascript'.length\n    //     },\n    //     {\n    //       tag: 'b',\n    //       start: MAIN_EXPERIENCE.indexOf('TypeScript'),\n    //       end: MAIN_EXPERIENCE.indexOf('TypeScript') + 'TypeScript'.length\n    //     },\n    //     {\n    //       tag: 'b',\n    //       start: MAIN_EXPERIENCE.indexOf('C#'),\n    //       end: MAIN_EXPERIENCE.indexOf('C#') + 'C#'.length\n    //     },\n    //     {\n    //       tag: 'b',\n    //       start: MAIN_EXPERIENCE.indexOf('node.js'),\n    //       end: MAIN_EXPERIENCE.indexOf('node.js') + 'node.js'.length\n    //     }\n    //   ]\n    // }\n  },\n  {\n    text:\n      \"Lifelong learner, book lover and competitive programming enthusiast.\"\n  },\n  {\n    text: \"Interested in accessibility and all kinds of things.\"\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/descriptionList.js","import React from \"react\";\n\nimport contestsSub from \"../assets/contests-sub.png\";\nimport webglWrokshop from \"../assets/webgl-wrokshop.png\";\nimport uccValidator from \"../assets/ucc-validator.png\";\nimport photoFilter from \"../assets/photo-filter.png\";\nimport invaders from \"../assets/invaders.png\";\n\nexport default [\n  {\n    title: \"Coding Contests Subscriber\",\n    pictureAlt: \"Project Coding Contests Subscriber screen capture\",\n    picture: contestsSub,\n    description: (\n      <div>\n        <p>\n          A web utility that filtering available coding contests based on users'\n          preferred time window(e.g. starting between 8 AM - 10 PM), and sending\n          invites to their calendar.\n        </p>\n        <a\n          href=\"https://github.com/EcutDavid/coding-contests-subscriber\"\n          target=\"_blank\"\n          aria-label=\"The github repo of Coding Contests Subscriber\"\n        >\n          Github repo\n        </a>\n      </div>\n    )\n  },\n  {\n    title: \"Photo Filter\",\n    pictureAlt: \"Project Photo Filter screen capture\",\n    picture: photoFilter,\n    description: (\n      <div>\n        <p>\n          An online application allows you filter an image and download the\n          result.\n        </p>\n        <a\n          href=\"https://github.com/EcutDavid/photo-filter\"\n          target=\"_blank\"\n          aria-label=\"The github repo of Photo Filter\"\n        >\n          Github repo\n        </a>\n      </div>\n    )\n  },\n  {\n    title: \"Space Invaders\",\n    pictureAlt: \"Project Space Invaders screen capture\",\n    picture: invaders,\n    description: (\n      <div>\n        <p>Yet another space invaders \"copy\".</p>\n        <a\n          href=\"https://davidguan.itch.io/space-invaders\"\n          target=\"_blank\"\n          aria-label=\"Play this space invaders copy on Itch.io\"\n        >\n          Play on Itch.io\n        </a>\n        <p>-----------</p>\n        <a\n          href=\"https://github.com/EcutDavid/space-invaders\"\n          target=\"_blank\"\n          aria-label=\"The github repo of this space invaders copy\"\n        >\n          Github repo\n        </a>\n      </div>\n    )\n  },\n  {\n    title: \"Splunk UCC configuration validator\",\n    pictureAlt: \"Project Splunk UCC configuration validator screen capture\",\n    picture: uccValidator,\n    description: (\n      <div>\n        <p>\n          An online application helps Splunk add-on developers saving time from\n          debugging problems caused by errors in configuration.\n        </p>\n        <a\n          href=\"https://github.com/EcutDavid/splunk-ucc-config-validator\"\n          target=\"_blank\"\n          aria-label=\"The github repo of Splunk UCC configuration validator\"\n        >\n          Github repo\n        </a>\n      </div>\n    )\n  },\n  {\n    title: \"webgl-workshop.com\",\n    pictureAlt: \"Project webgl-workshop.com screen capture\",\n    picture: webglWrokshop,\n    description: (\n      <div>\n        <p>\n          A step by step practical guide for implementing 2D/3D rendering with\n          WebGL.\n        </p>\n        <a\n          href=\"https://github.com/EcutDavid/webgl-workshop\"\n          target=\"_blank\"\n          aria-label=\"The github repo of webgl-workshop.com\"\n        >\n          Github repo\n        </a>\n      </div>\n    )\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/worksData.js","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/fn/object/assign.js\n// module id = 28\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_a-function.js\n// module id = 29\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_an-object.js\n// module id = 30\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_array-includes.js\n// module id = 31\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_cof.js\n// module id = 32\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_ctx.js\n// module id = 33\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_dom-create.js\n// module id = 34\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_enum-bug-keys.js\n// module id = 35\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_export.js\n// module id = 36\n// module chunks = 0","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_function-to-string.js\n// module id = 37\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_ie8-dom-define.js\n// module id = 38\n// module chunks = 0","module.exports = false;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_library.js\n// module id = 39\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_object-assign.js\n// module id = 40\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_object-dp.js\n// module id = 41\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_object-gops.js\n// module id = 42\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_object-keys-internal.js\n// module id = 43\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_object-keys.js\n// module id = 44\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_object-pie.js\n// module id = 45\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_property-desc.js\n// module id = 46\n// module chunks = 0","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_redefine.js\n// module id = 47\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_shared-key.js\n// module id = 48\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_to-absolute-index.js\n// module id = 49\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_to-length.js\n// module id = 50\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_to-object.js\n// module id = 51\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/_to-primitive.js\n// module id = 52\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/modules/es6.object.assign.js\n// module id = 53\n// module chunks = 0","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome\\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\\n */@font-face{font-family:FontAwesome;src:url(\" + require(\"../fonts/fontawesome-webfont.eot?v=4.7.0\") + \");src:url(\" + require(\"../fonts/fontawesome-webfont.eot\") + \"?#iefix&v=4.7.0) format(\\\"embedded-opentype\\\"),url(\" + require(\"../fonts/fontawesome-webfont.woff2?v=4.7.0\") + \") format(\\\"woff2\\\"),url(\" + require(\"../fonts/fontawesome-webfont.woff?v=4.7.0\") + \") format(\\\"woff\\\"),url(\" + require(\"../fonts/fontawesome-webfont.ttf?v=4.7.0\") + \") format(\\\"truetype\\\"),url(\" + require(\"../fonts/fontawesome-webfont.svg?v=4.7.0\") + \"#fontawesomeregular) format(\\\"svg\\\");font-weight:400;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:.08em solid #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{animation:fa-spin 2s infinite linear}.fa-pulse{animation:fa-spin 1s infinite steps(8)}@keyframes fa-spin{0%{transform:rotate(0deg)}to{transform:rotate(359deg)}}.fa-rotate-90{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\\\";transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\\\";transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\\\";transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\\\";transform:scaleX(-1)}.fa-flip-vertical{-ms-filter:\\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\\";transform:scaleY(-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\\\"\\\\F000\\\"}.fa-music:before{content:\\\"\\\\F001\\\"}.fa-search:before{content:\\\"\\\\F002\\\"}.fa-envelope-o:before{content:\\\"\\\\F003\\\"}.fa-heart:before{content:\\\"\\\\F004\\\"}.fa-star:before{content:\\\"\\\\F005\\\"}.fa-star-o:before{content:\\\"\\\\F006\\\"}.fa-user:before{content:\\\"\\\\F007\\\"}.fa-film:before{content:\\\"\\\\F008\\\"}.fa-th-large:before{content:\\\"\\\\F009\\\"}.fa-th:before{content:\\\"\\\\F00A\\\"}.fa-th-list:before{content:\\\"\\\\F00B\\\"}.fa-check:before{content:\\\"\\\\F00C\\\"}.fa-close:before,.fa-remove:before,.fa-times:before{content:\\\"\\\\F00D\\\"}.fa-search-plus:before{content:\\\"\\\\F00E\\\"}.fa-search-minus:before{content:\\\"\\\\F010\\\"}.fa-power-off:before{content:\\\"\\\\F011\\\"}.fa-signal:before{content:\\\"\\\\F012\\\"}.fa-cog:before,.fa-gear:before{content:\\\"\\\\F013\\\"}.fa-trash-o:before{content:\\\"\\\\F014\\\"}.fa-home:before{content:\\\"\\\\F015\\\"}.fa-file-o:before{content:\\\"\\\\F016\\\"}.fa-clock-o:before{content:\\\"\\\\F017\\\"}.fa-road:before{content:\\\"\\\\F018\\\"}.fa-download:before{content:\\\"\\\\F019\\\"}.fa-arrow-circle-o-down:before{content:\\\"\\\\F01A\\\"}.fa-arrow-circle-o-up:before{content:\\\"\\\\F01B\\\"}.fa-inbox:before{content:\\\"\\\\F01C\\\"}.fa-play-circle-o:before{content:\\\"\\\\F01D\\\"}.fa-repeat:before,.fa-rotate-right:before{content:\\\"\\\\F01E\\\"}.fa-refresh:before{content:\\\"\\\\F021\\\"}.fa-list-alt:before{content:\\\"\\\\F022\\\"}.fa-lock:before{content:\\\"\\\\F023\\\"}.fa-flag:before{content:\\\"\\\\F024\\\"}.fa-headphones:before{content:\\\"\\\\F025\\\"}.fa-volume-off:before{content:\\\"\\\\F026\\\"}.fa-volume-down:before{content:\\\"\\\\F027\\\"}.fa-volume-up:before{content:\\\"\\\\F028\\\"}.fa-qrcode:before{content:\\\"\\\\F029\\\"}.fa-barcode:before{content:\\\"\\\\F02A\\\"}.fa-tag:before{content:\\\"\\\\F02B\\\"}.fa-tags:before{content:\\\"\\\\F02C\\\"}.fa-book:before{content:\\\"\\\\F02D\\\"}.fa-bookmark:before{content:\\\"\\\\F02E\\\"}.fa-print:before{content:\\\"\\\\F02F\\\"}.fa-camera:before{content:\\\"\\\\F030\\\"}.fa-font:before{content:\\\"\\\\F031\\\"}.fa-bold:before{content:\\\"\\\\F032\\\"}.fa-italic:before{content:\\\"\\\\F033\\\"}.fa-text-height:before{content:\\\"\\\\F034\\\"}.fa-text-width:before{content:\\\"\\\\F035\\\"}.fa-align-left:before{content:\\\"\\\\F036\\\"}.fa-align-center:before{content:\\\"\\\\F037\\\"}.fa-align-right:before{content:\\\"\\\\F038\\\"}.fa-align-justify:before{content:\\\"\\\\F039\\\"}.fa-list:before{content:\\\"\\\\F03A\\\"}.fa-dedent:before,.fa-outdent:before{content:\\\"\\\\F03B\\\"}.fa-indent:before{content:\\\"\\\\F03C\\\"}.fa-video-camera:before{content:\\\"\\\\F03D\\\"}.fa-image:before,.fa-photo:before,.fa-picture-o:before{content:\\\"\\\\F03E\\\"}.fa-pencil:before{content:\\\"\\\\F040\\\"}.fa-map-marker:before{content:\\\"\\\\F041\\\"}.fa-adjust:before{content:\\\"\\\\F042\\\"}.fa-tint:before{content:\\\"\\\\F043\\\"}.fa-edit:before,.fa-pencil-square-o:before{content:\\\"\\\\F044\\\"}.fa-share-square-o:before{content:\\\"\\\\F045\\\"}.fa-check-square-o:before{content:\\\"\\\\F046\\\"}.fa-arrows:before{content:\\\"\\\\F047\\\"}.fa-step-backward:before{content:\\\"\\\\F048\\\"}.fa-fast-backward:before{content:\\\"\\\\F049\\\"}.fa-backward:before{content:\\\"\\\\F04A\\\"}.fa-play:before{content:\\\"\\\\F04B\\\"}.fa-pause:before{content:\\\"\\\\F04C\\\"}.fa-stop:before{content:\\\"\\\\F04D\\\"}.fa-forward:before{content:\\\"\\\\F04E\\\"}.fa-fast-forward:before{content:\\\"\\\\F050\\\"}.fa-step-forward:before{content:\\\"\\\\F051\\\"}.fa-eject:before{content:\\\"\\\\F052\\\"}.fa-chevron-left:before{content:\\\"\\\\F053\\\"}.fa-chevron-right:before{content:\\\"\\\\F054\\\"}.fa-plus-circle:before{content:\\\"\\\\F055\\\"}.fa-minus-circle:before{content:\\\"\\\\F056\\\"}.fa-times-circle:before{content:\\\"\\\\F057\\\"}.fa-check-circle:before{content:\\\"\\\\F058\\\"}.fa-question-circle:before{content:\\\"\\\\F059\\\"}.fa-info-circle:before{content:\\\"\\\\F05A\\\"}.fa-crosshairs:before{content:\\\"\\\\F05B\\\"}.fa-times-circle-o:before{content:\\\"\\\\F05C\\\"}.fa-check-circle-o:before{content:\\\"\\\\F05D\\\"}.fa-ban:before{content:\\\"\\\\F05E\\\"}.fa-arrow-left:before{content:\\\"\\\\F060\\\"}.fa-arrow-right:before{content:\\\"\\\\F061\\\"}.fa-arrow-up:before{content:\\\"\\\\F062\\\"}.fa-arrow-down:before{content:\\\"\\\\F063\\\"}.fa-mail-forward:before,.fa-share:before{content:\\\"\\\\F064\\\"}.fa-expand:before{content:\\\"\\\\F065\\\"}.fa-compress:before{content:\\\"\\\\F066\\\"}.fa-plus:before{content:\\\"\\\\F067\\\"}.fa-minus:before{content:\\\"\\\\F068\\\"}.fa-asterisk:before{content:\\\"\\\\F069\\\"}.fa-exclamation-circle:before{content:\\\"\\\\F06A\\\"}.fa-gift:before{content:\\\"\\\\F06B\\\"}.fa-leaf:before{content:\\\"\\\\F06C\\\"}.fa-fire:before{content:\\\"\\\\F06D\\\"}.fa-eye:before{content:\\\"\\\\F06E\\\"}.fa-eye-slash:before{content:\\\"\\\\F070\\\"}.fa-exclamation-triangle:before,.fa-warning:before{content:\\\"\\\\F071\\\"}.fa-plane:before{content:\\\"\\\\F072\\\"}.fa-calendar:before{content:\\\"\\\\F073\\\"}.fa-random:before{content:\\\"\\\\F074\\\"}.fa-comment:before{content:\\\"\\\\F075\\\"}.fa-magnet:before{content:\\\"\\\\F076\\\"}.fa-chevron-up:before{content:\\\"\\\\F077\\\"}.fa-chevron-down:before{content:\\\"\\\\F078\\\"}.fa-retweet:before{content:\\\"\\\\F079\\\"}.fa-shopping-cart:before{content:\\\"\\\\F07A\\\"}.fa-folder:before{content:\\\"\\\\F07B\\\"}.fa-folder-open:before{content:\\\"\\\\F07C\\\"}.fa-arrows-v:before{content:\\\"\\\\F07D\\\"}.fa-arrows-h:before{content:\\\"\\\\F07E\\\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\\\"\\\\F080\\\"}.fa-twitter-square:before{content:\\\"\\\\F081\\\"}.fa-facebook-square:before{content:\\\"\\\\F082\\\"}.fa-camera-retro:before{content:\\\"\\\\F083\\\"}.fa-key:before{content:\\\"\\\\F084\\\"}.fa-cogs:before,.fa-gears:before{content:\\\"\\\\F085\\\"}.fa-comments:before{content:\\\"\\\\F086\\\"}.fa-thumbs-o-up:before{content:\\\"\\\\F087\\\"}.fa-thumbs-o-down:before{content:\\\"\\\\F088\\\"}.fa-star-half:before{content:\\\"\\\\F089\\\"}.fa-heart-o:before{content:\\\"\\\\F08A\\\"}.fa-sign-out:before{content:\\\"\\\\F08B\\\"}.fa-linkedin-square:before{content:\\\"\\\\F08C\\\"}.fa-thumb-tack:before{content:\\\"\\\\F08D\\\"}.fa-external-link:before{content:\\\"\\\\F08E\\\"}.fa-sign-in:before{content:\\\"\\\\F090\\\"}.fa-trophy:before{content:\\\"\\\\F091\\\"}.fa-github-square:before{content:\\\"\\\\F092\\\"}.fa-upload:before{content:\\\"\\\\F093\\\"}.fa-lemon-o:before{content:\\\"\\\\F094\\\"}.fa-phone:before{content:\\\"\\\\F095\\\"}.fa-square-o:before{content:\\\"\\\\F096\\\"}.fa-bookmark-o:before{content:\\\"\\\\F097\\\"}.fa-phone-square:before{content:\\\"\\\\F098\\\"}.fa-twitter:before{content:\\\"\\\\F099\\\"}.fa-facebook-f:before,.fa-facebook:before{content:\\\"\\\\F09A\\\"}.fa-github:before{content:\\\"\\\\F09B\\\"}.fa-unlock:before{content:\\\"\\\\F09C\\\"}.fa-credit-card:before{content:\\\"\\\\F09D\\\"}.fa-feed:before,.fa-rss:before{content:\\\"\\\\F09E\\\"}.fa-hdd-o:before{content:\\\"\\\\F0A0\\\"}.fa-bullhorn:before{content:\\\"\\\\F0A1\\\"}.fa-bell:before{content:\\\"\\\\F0F3\\\"}.fa-certificate:before{content:\\\"\\\\F0A3\\\"}.fa-hand-o-right:before{content:\\\"\\\\F0A4\\\"}.fa-hand-o-left:before{content:\\\"\\\\F0A5\\\"}.fa-hand-o-up:before{content:\\\"\\\\F0A6\\\"}.fa-hand-o-down:before{content:\\\"\\\\F0A7\\\"}.fa-arrow-circle-left:before{content:\\\"\\\\F0A8\\\"}.fa-arrow-circle-right:before{content:\\\"\\\\F0A9\\\"}.fa-arrow-circle-up:before{content:\\\"\\\\F0AA\\\"}.fa-arrow-circle-down:before{content:\\\"\\\\F0AB\\\"}.fa-globe:before{content:\\\"\\\\F0AC\\\"}.fa-wrench:before{content:\\\"\\\\F0AD\\\"}.fa-tasks:before{content:\\\"\\\\F0AE\\\"}.fa-filter:before{content:\\\"\\\\F0B0\\\"}.fa-briefcase:before{content:\\\"\\\\F0B1\\\"}.fa-arrows-alt:before{content:\\\"\\\\F0B2\\\"}.fa-group:before,.fa-users:before{content:\\\"\\\\F0C0\\\"}.fa-chain:before,.fa-link:before{content:\\\"\\\\F0C1\\\"}.fa-cloud:before{content:\\\"\\\\F0C2\\\"}.fa-flask:before{content:\\\"\\\\F0C3\\\"}.fa-cut:before,.fa-scissors:before{content:\\\"\\\\F0C4\\\"}.fa-copy:before,.fa-files-o:before{content:\\\"\\\\F0C5\\\"}.fa-paperclip:before{content:\\\"\\\\F0C6\\\"}.fa-floppy-o:before,.fa-save:before{content:\\\"\\\\F0C7\\\"}.fa-square:before{content:\\\"\\\\F0C8\\\"}.fa-bars:before,.fa-navicon:before,.fa-reorder:before{content:\\\"\\\\F0C9\\\"}.fa-list-ul:before{content:\\\"\\\\F0CA\\\"}.fa-list-ol:before{content:\\\"\\\\F0CB\\\"}.fa-strikethrough:before{content:\\\"\\\\F0CC\\\"}.fa-underline:before{content:\\\"\\\\F0CD\\\"}.fa-table:before{content:\\\"\\\\F0CE\\\"}.fa-magic:before{content:\\\"\\\\F0D0\\\"}.fa-truck:before{content:\\\"\\\\F0D1\\\"}.fa-pinterest:before{content:\\\"\\\\F0D2\\\"}.fa-pinterest-square:before{content:\\\"\\\\F0D3\\\"}.fa-google-plus-square:before{content:\\\"\\\\F0D4\\\"}.fa-google-plus:before{content:\\\"\\\\F0D5\\\"}.fa-money:before{content:\\\"\\\\F0D6\\\"}.fa-caret-down:before{content:\\\"\\\\F0D7\\\"}.fa-caret-up:before{content:\\\"\\\\F0D8\\\"}.fa-caret-left:before{content:\\\"\\\\F0D9\\\"}.fa-caret-right:before{content:\\\"\\\\F0DA\\\"}.fa-columns:before{content:\\\"\\\\F0DB\\\"}.fa-sort:before,.fa-unsorted:before{content:\\\"\\\\F0DC\\\"}.fa-sort-desc:before,.fa-sort-down:before{content:\\\"\\\\F0DD\\\"}.fa-sort-asc:before,.fa-sort-up:before{content:\\\"\\\\F0DE\\\"}.fa-envelope:before{content:\\\"\\\\F0E0\\\"}.fa-linkedin:before{content:\\\"\\\\F0E1\\\"}.fa-rotate-left:before,.fa-undo:before{content:\\\"\\\\F0E2\\\"}.fa-gavel:before,.fa-legal:before{content:\\\"\\\\F0E3\\\"}.fa-dashboard:before,.fa-tachometer:before{content:\\\"\\\\F0E4\\\"}.fa-comment-o:before{content:\\\"\\\\F0E5\\\"}.fa-comments-o:before{content:\\\"\\\\F0E6\\\"}.fa-bolt:before,.fa-flash:before{content:\\\"\\\\F0E7\\\"}.fa-sitemap:before{content:\\\"\\\\F0E8\\\"}.fa-umbrella:before{content:\\\"\\\\F0E9\\\"}.fa-clipboard:before,.fa-paste:before{content:\\\"\\\\F0EA\\\"}.fa-lightbulb-o:before{content:\\\"\\\\F0EB\\\"}.fa-exchange:before{content:\\\"\\\\F0EC\\\"}.fa-cloud-download:before{content:\\\"\\\\F0ED\\\"}.fa-cloud-upload:before{content:\\\"\\\\F0EE\\\"}.fa-user-md:before{content:\\\"\\\\F0F0\\\"}.fa-stethoscope:before{content:\\\"\\\\F0F1\\\"}.fa-suitcase:before{content:\\\"\\\\F0F2\\\"}.fa-bell-o:before{content:\\\"\\\\F0A2\\\"}.fa-coffee:before{content:\\\"\\\\F0F4\\\"}.fa-cutlery:before{content:\\\"\\\\F0F5\\\"}.fa-file-text-o:before{content:\\\"\\\\F0F6\\\"}.fa-building-o:before{content:\\\"\\\\F0F7\\\"}.fa-hospital-o:before{content:\\\"\\\\F0F8\\\"}.fa-ambulance:before{content:\\\"\\\\F0F9\\\"}.fa-medkit:before{content:\\\"\\\\F0FA\\\"}.fa-fighter-jet:before{content:\\\"\\\\F0FB\\\"}.fa-beer:before{content:\\\"\\\\F0FC\\\"}.fa-h-square:before{content:\\\"\\\\F0FD\\\"}.fa-plus-square:before{content:\\\"\\\\F0FE\\\"}.fa-angle-double-left:before{content:\\\"\\\\F100\\\"}.fa-angle-double-right:before{content:\\\"\\\\F101\\\"}.fa-angle-double-up:before{content:\\\"\\\\F102\\\"}.fa-angle-double-down:before{content:\\\"\\\\F103\\\"}.fa-angle-left:before{content:\\\"\\\\F104\\\"}.fa-angle-right:before{content:\\\"\\\\F105\\\"}.fa-angle-up:before{content:\\\"\\\\F106\\\"}.fa-angle-down:before{content:\\\"\\\\F107\\\"}.fa-desktop:before{content:\\\"\\\\F108\\\"}.fa-laptop:before{content:\\\"\\\\F109\\\"}.fa-tablet:before{content:\\\"\\\\F10A\\\"}.fa-mobile-phone:before,.fa-mobile:before{content:\\\"\\\\F10B\\\"}.fa-circle-o:before{content:\\\"\\\\F10C\\\"}.fa-quote-left:before{content:\\\"\\\\F10D\\\"}.fa-quote-right:before{content:\\\"\\\\F10E\\\"}.fa-spinner:before{content:\\\"\\\\F110\\\"}.fa-circle:before{content:\\\"\\\\F111\\\"}.fa-mail-reply:before,.fa-reply:before{content:\\\"\\\\F112\\\"}.fa-github-alt:before{content:\\\"\\\\F113\\\"}.fa-folder-o:before{content:\\\"\\\\F114\\\"}.fa-folder-open-o:before{content:\\\"\\\\F115\\\"}.fa-smile-o:before{content:\\\"\\\\F118\\\"}.fa-frown-o:before{content:\\\"\\\\F119\\\"}.fa-meh-o:before{content:\\\"\\\\F11A\\\"}.fa-gamepad:before{content:\\\"\\\\F11B\\\"}.fa-keyboard-o:before{content:\\\"\\\\F11C\\\"}.fa-flag-o:before{content:\\\"\\\\F11D\\\"}.fa-flag-checkered:before{content:\\\"\\\\F11E\\\"}.fa-terminal:before{content:\\\"\\\\F120\\\"}.fa-code:before{content:\\\"\\\\F121\\\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\\\"\\\\F122\\\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\\\"\\\\F123\\\"}.fa-location-arrow:before{content:\\\"\\\\F124\\\"}.fa-crop:before{content:\\\"\\\\F125\\\"}.fa-code-fork:before{content:\\\"\\\\F126\\\"}.fa-chain-broken:before,.fa-unlink:before{content:\\\"\\\\F127\\\"}.fa-question:before{content:\\\"\\\\F128\\\"}.fa-info:before{content:\\\"\\\\F129\\\"}.fa-exclamation:before{content:\\\"\\\\F12A\\\"}.fa-superscript:before{content:\\\"\\\\F12B\\\"}.fa-subscript:before{content:\\\"\\\\F12C\\\"}.fa-eraser:before{content:\\\"\\\\F12D\\\"}.fa-puzzle-piece:before{content:\\\"\\\\F12E\\\"}.fa-microphone:before{content:\\\"\\\\F130\\\"}.fa-microphone-slash:before{content:\\\"\\\\F131\\\"}.fa-shield:before{content:\\\"\\\\F132\\\"}.fa-calendar-o:before{content:\\\"\\\\F133\\\"}.fa-fire-extinguisher:before{content:\\\"\\\\F134\\\"}.fa-rocket:before{content:\\\"\\\\F135\\\"}.fa-maxcdn:before{content:\\\"\\\\F136\\\"}.fa-chevron-circle-left:before{content:\\\"\\\\F137\\\"}.fa-chevron-circle-right:before{content:\\\"\\\\F138\\\"}.fa-chevron-circle-up:before{content:\\\"\\\\F139\\\"}.fa-chevron-circle-down:before{content:\\\"\\\\F13A\\\"}.fa-html5:before{content:\\\"\\\\F13B\\\"}.fa-css3:before{content:\\\"\\\\F13C\\\"}.fa-anchor:before{content:\\\"\\\\F13D\\\"}.fa-unlock-alt:before{content:\\\"\\\\F13E\\\"}.fa-bullseye:before{content:\\\"\\\\F140\\\"}.fa-ellipsis-h:before{content:\\\"\\\\F141\\\"}.fa-ellipsis-v:before{content:\\\"\\\\F142\\\"}.fa-rss-square:before{content:\\\"\\\\F143\\\"}.fa-play-circle:before{content:\\\"\\\\F144\\\"}.fa-ticket:before{content:\\\"\\\\F145\\\"}.fa-minus-square:before{content:\\\"\\\\F146\\\"}.fa-minus-square-o:before{content:\\\"\\\\F147\\\"}.fa-level-up:before{content:\\\"\\\\F148\\\"}.fa-level-down:before{content:\\\"\\\\F149\\\"}.fa-check-square:before{content:\\\"\\\\F14A\\\"}.fa-pencil-square:before{content:\\\"\\\\F14B\\\"}.fa-external-link-square:before{content:\\\"\\\\F14C\\\"}.fa-share-square:before{content:\\\"\\\\F14D\\\"}.fa-compass:before{content:\\\"\\\\F14E\\\"}.fa-caret-square-o-down:before,.fa-toggle-down:before{content:\\\"\\\\F150\\\"}.fa-caret-square-o-up:before,.fa-toggle-up:before{content:\\\"\\\\F151\\\"}.fa-caret-square-o-right:before,.fa-toggle-right:before{content:\\\"\\\\F152\\\"}.fa-eur:before,.fa-euro:before{content:\\\"\\\\F153\\\"}.fa-gbp:before{content:\\\"\\\\F154\\\"}.fa-dollar:before,.fa-usd:before{content:\\\"\\\\F155\\\"}.fa-inr:before,.fa-rupee:before{content:\\\"\\\\F156\\\"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen:before{content:\\\"\\\\F157\\\"}.fa-rouble:before,.fa-rub:before,.fa-ruble:before{content:\\\"\\\\F158\\\"}.fa-krw:before,.fa-won:before{content:\\\"\\\\F159\\\"}.fa-bitcoin:before,.fa-btc:before{content:\\\"\\\\F15A\\\"}.fa-file:before{content:\\\"\\\\F15B\\\"}.fa-file-text:before{content:\\\"\\\\F15C\\\"}.fa-sort-alpha-asc:before{content:\\\"\\\\F15D\\\"}.fa-sort-alpha-desc:before{content:\\\"\\\\F15E\\\"}.fa-sort-amount-asc:before{content:\\\"\\\\F160\\\"}.fa-sort-amount-desc:before{content:\\\"\\\\F161\\\"}.fa-sort-numeric-asc:before{content:\\\"\\\\F162\\\"}.fa-sort-numeric-desc:before{content:\\\"\\\\F163\\\"}.fa-thumbs-up:before{content:\\\"\\\\F164\\\"}.fa-thumbs-down:before{content:\\\"\\\\F165\\\"}.fa-youtube-square:before{content:\\\"\\\\F166\\\"}.fa-youtube:before{content:\\\"\\\\F167\\\"}.fa-xing:before{content:\\\"\\\\F168\\\"}.fa-xing-square:before{content:\\\"\\\\F169\\\"}.fa-youtube-play:before{content:\\\"\\\\F16A\\\"}.fa-dropbox:before{content:\\\"\\\\F16B\\\"}.fa-stack-overflow:before{content:\\\"\\\\F16C\\\"}.fa-instagram:before{content:\\\"\\\\F16D\\\"}.fa-flickr:before{content:\\\"\\\\F16E\\\"}.fa-adn:before{content:\\\"\\\\F170\\\"}.fa-bitbucket:before{content:\\\"\\\\F171\\\"}.fa-bitbucket-square:before{content:\\\"\\\\F172\\\"}.fa-tumblr:before{content:\\\"\\\\F173\\\"}.fa-tumblr-square:before{content:\\\"\\\\F174\\\"}.fa-long-arrow-down:before{content:\\\"\\\\F175\\\"}.fa-long-arrow-up:before{content:\\\"\\\\F176\\\"}.fa-long-arrow-left:before{content:\\\"\\\\F177\\\"}.fa-long-arrow-right:before{content:\\\"\\\\F178\\\"}.fa-apple:before{content:\\\"\\\\F179\\\"}.fa-windows:before{content:\\\"\\\\F17A\\\"}.fa-android:before{content:\\\"\\\\F17B\\\"}.fa-linux:before{content:\\\"\\\\F17C\\\"}.fa-dribbble:before{content:\\\"\\\\F17D\\\"}.fa-skype:before{content:\\\"\\\\F17E\\\"}.fa-foursquare:before{content:\\\"\\\\F180\\\"}.fa-trello:before{content:\\\"\\\\F181\\\"}.fa-female:before{content:\\\"\\\\F182\\\"}.fa-male:before{content:\\\"\\\\F183\\\"}.fa-gittip:before,.fa-gratipay:before{content:\\\"\\\\F184\\\"}.fa-sun-o:before{content:\\\"\\\\F185\\\"}.fa-moon-o:before{content:\\\"\\\\F186\\\"}.fa-archive:before{content:\\\"\\\\F187\\\"}.fa-bug:before{content:\\\"\\\\F188\\\"}.fa-vk:before{content:\\\"\\\\F189\\\"}.fa-weibo:before{content:\\\"\\\\F18A\\\"}.fa-renren:before{content:\\\"\\\\F18B\\\"}.fa-pagelines:before{content:\\\"\\\\F18C\\\"}.fa-stack-exchange:before{content:\\\"\\\\F18D\\\"}.fa-arrow-circle-o-right:before{content:\\\"\\\\F18E\\\"}.fa-arrow-circle-o-left:before{content:\\\"\\\\F190\\\"}.fa-caret-square-o-left:before,.fa-toggle-left:before{content:\\\"\\\\F191\\\"}.fa-dot-circle-o:before{content:\\\"\\\\F192\\\"}.fa-wheelchair:before{content:\\\"\\\\F193\\\"}.fa-vimeo-square:before{content:\\\"\\\\F194\\\"}.fa-try:before,.fa-turkish-lira:before{content:\\\"\\\\F195\\\"}.fa-plus-square-o:before{content:\\\"\\\\F196\\\"}.fa-space-shuttle:before{content:\\\"\\\\F197\\\"}.fa-slack:before{content:\\\"\\\\F198\\\"}.fa-envelope-square:before{content:\\\"\\\\F199\\\"}.fa-wordpress:before{content:\\\"\\\\F19A\\\"}.fa-openid:before{content:\\\"\\\\F19B\\\"}.fa-bank:before,.fa-institution:before,.fa-university:before{content:\\\"\\\\F19C\\\"}.fa-graduation-cap:before,.fa-mortar-board:before{content:\\\"\\\\F19D\\\"}.fa-yahoo:before{content:\\\"\\\\F19E\\\"}.fa-google:before{content:\\\"\\\\F1A0\\\"}.fa-reddit:before{content:\\\"\\\\F1A1\\\"}.fa-reddit-square:before{content:\\\"\\\\F1A2\\\"}.fa-stumbleupon-circle:before{content:\\\"\\\\F1A3\\\"}.fa-stumbleupon:before{content:\\\"\\\\F1A4\\\"}.fa-delicious:before{content:\\\"\\\\F1A5\\\"}.fa-digg:before{content:\\\"\\\\F1A6\\\"}.fa-pied-piper-pp:before{content:\\\"\\\\F1A7\\\"}.fa-pied-piper-alt:before{content:\\\"\\\\F1A8\\\"}.fa-drupal:before{content:\\\"\\\\F1A9\\\"}.fa-joomla:before{content:\\\"\\\\F1AA\\\"}.fa-language:before{content:\\\"\\\\F1AB\\\"}.fa-fax:before{content:\\\"\\\\F1AC\\\"}.fa-building:before{content:\\\"\\\\F1AD\\\"}.fa-child:before{content:\\\"\\\\F1AE\\\"}.fa-paw:before{content:\\\"\\\\F1B0\\\"}.fa-spoon:before{content:\\\"\\\\F1B1\\\"}.fa-cube:before{content:\\\"\\\\F1B2\\\"}.fa-cubes:before{content:\\\"\\\\F1B3\\\"}.fa-behance:before{content:\\\"\\\\F1B4\\\"}.fa-behance-square:before{content:\\\"\\\\F1B5\\\"}.fa-steam:before{content:\\\"\\\\F1B6\\\"}.fa-steam-square:before{content:\\\"\\\\F1B7\\\"}.fa-recycle:before{content:\\\"\\\\F1B8\\\"}.fa-automobile:before,.fa-car:before{content:\\\"\\\\F1B9\\\"}.fa-cab:before,.fa-taxi:before{content:\\\"\\\\F1BA\\\"}.fa-tree:before{content:\\\"\\\\F1BB\\\"}.fa-spotify:before{content:\\\"\\\\F1BC\\\"}.fa-deviantart:before{content:\\\"\\\\F1BD\\\"}.fa-soundcloud:before{content:\\\"\\\\F1BE\\\"}.fa-database:before{content:\\\"\\\\F1C0\\\"}.fa-file-pdf-o:before{content:\\\"\\\\F1C1\\\"}.fa-file-word-o:before{content:\\\"\\\\F1C2\\\"}.fa-file-excel-o:before{content:\\\"\\\\F1C3\\\"}.fa-file-powerpoint-o:before{content:\\\"\\\\F1C4\\\"}.fa-file-image-o:before,.fa-file-photo-o:before,.fa-file-picture-o:before{content:\\\"\\\\F1C5\\\"}.fa-file-archive-o:before,.fa-file-zip-o:before{content:\\\"\\\\F1C6\\\"}.fa-file-audio-o:before,.fa-file-sound-o:before{content:\\\"\\\\F1C7\\\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\\\"\\\\F1C8\\\"}.fa-file-code-o:before{content:\\\"\\\\F1C9\\\"}.fa-vine:before{content:\\\"\\\\F1CA\\\"}.fa-codepen:before{content:\\\"\\\\F1CB\\\"}.fa-jsfiddle:before{content:\\\"\\\\F1CC\\\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-ring:before,.fa-life-saver:before,.fa-support:before{content:\\\"\\\\F1CD\\\"}.fa-circle-o-notch:before{content:\\\"\\\\F1CE\\\"}.fa-ra:before,.fa-rebel:before,.fa-resistance:before{content:\\\"\\\\F1D0\\\"}.fa-empire:before,.fa-ge:before{content:\\\"\\\\F1D1\\\"}.fa-git-square:before{content:\\\"\\\\F1D2\\\"}.fa-git:before{content:\\\"\\\\F1D3\\\"}.fa-hacker-news:before,.fa-y-combinator-square:before,.fa-yc-square:before{content:\\\"\\\\F1D4\\\"}.fa-tencent-weibo:before{content:\\\"\\\\F1D5\\\"}.fa-qq:before{content:\\\"\\\\F1D6\\\"}.fa-wechat:before,.fa-weixin:before{content:\\\"\\\\F1D7\\\"}.fa-paper-plane:before,.fa-send:before{content:\\\"\\\\F1D8\\\"}.fa-paper-plane-o:before,.fa-send-o:before{content:\\\"\\\\F1D9\\\"}.fa-history:before{content:\\\"\\\\F1DA\\\"}.fa-circle-thin:before{content:\\\"\\\\F1DB\\\"}.fa-header:before{content:\\\"\\\\F1DC\\\"}.fa-paragraph:before{content:\\\"\\\\F1DD\\\"}.fa-sliders:before{content:\\\"\\\\F1DE\\\"}.fa-share-alt:before{content:\\\"\\\\F1E0\\\"}.fa-share-alt-square:before{content:\\\"\\\\F1E1\\\"}.fa-bomb:before{content:\\\"\\\\F1E2\\\"}.fa-futbol-o:before,.fa-soccer-ball-o:before{content:\\\"\\\\F1E3\\\"}.fa-tty:before{content:\\\"\\\\F1E4\\\"}.fa-binoculars:before{content:\\\"\\\\F1E5\\\"}.fa-plug:before{content:\\\"\\\\F1E6\\\"}.fa-slideshare:before{content:\\\"\\\\F1E7\\\"}.fa-twitch:before{content:\\\"\\\\F1E8\\\"}.fa-yelp:before{content:\\\"\\\\F1E9\\\"}.fa-newspaper-o:before{content:\\\"\\\\F1EA\\\"}.fa-wifi:before{content:\\\"\\\\F1EB\\\"}.fa-calculator:before{content:\\\"\\\\F1EC\\\"}.fa-paypal:before{content:\\\"\\\\F1ED\\\"}.fa-google-wallet:before{content:\\\"\\\\F1EE\\\"}.fa-cc-visa:before{content:\\\"\\\\F1F0\\\"}.fa-cc-mastercard:before{content:\\\"\\\\F1F1\\\"}.fa-cc-discover:before{content:\\\"\\\\F1F2\\\"}.fa-cc-amex:before{content:\\\"\\\\F1F3\\\"}.fa-cc-paypal:before{content:\\\"\\\\F1F4\\\"}.fa-cc-stripe:before{content:\\\"\\\\F1F5\\\"}.fa-bell-slash:before{content:\\\"\\\\F1F6\\\"}.fa-bell-slash-o:before{content:\\\"\\\\F1F7\\\"}.fa-trash:before{content:\\\"\\\\F1F8\\\"}.fa-copyright:before{content:\\\"\\\\F1F9\\\"}.fa-at:before{content:\\\"\\\\F1FA\\\"}.fa-eyedropper:before{content:\\\"\\\\F1FB\\\"}.fa-paint-brush:before{content:\\\"\\\\F1FC\\\"}.fa-birthday-cake:before{content:\\\"\\\\F1FD\\\"}.fa-area-chart:before{content:\\\"\\\\F1FE\\\"}.fa-pie-chart:before{content:\\\"\\\\F200\\\"}.fa-line-chart:before{content:\\\"\\\\F201\\\"}.fa-lastfm:before{content:\\\"\\\\F202\\\"}.fa-lastfm-square:before{content:\\\"\\\\F203\\\"}.fa-toggle-off:before{content:\\\"\\\\F204\\\"}.fa-toggle-on:before{content:\\\"\\\\F205\\\"}.fa-bicycle:before{content:\\\"\\\\F206\\\"}.fa-bus:before{content:\\\"\\\\F207\\\"}.fa-ioxhost:before{content:\\\"\\\\F208\\\"}.fa-angellist:before{content:\\\"\\\\F209\\\"}.fa-cc:before{content:\\\"\\\\F20A\\\"}.fa-ils:before,.fa-shekel:before,.fa-sheqel:before{content:\\\"\\\\F20B\\\"}.fa-meanpath:before{content:\\\"\\\\F20C\\\"}.fa-buysellads:before{content:\\\"\\\\F20D\\\"}.fa-connectdevelop:before{content:\\\"\\\\F20E\\\"}.fa-dashcube:before{content:\\\"\\\\F210\\\"}.fa-forumbee:before{content:\\\"\\\\F211\\\"}.fa-leanpub:before{content:\\\"\\\\F212\\\"}.fa-sellsy:before{content:\\\"\\\\F213\\\"}.fa-shirtsinbulk:before{content:\\\"\\\\F214\\\"}.fa-simplybuilt:before{content:\\\"\\\\F215\\\"}.fa-skyatlas:before{content:\\\"\\\\F216\\\"}.fa-cart-plus:before{content:\\\"\\\\F217\\\"}.fa-cart-arrow-down:before{content:\\\"\\\\F218\\\"}.fa-diamond:before{content:\\\"\\\\F219\\\"}.fa-ship:before{content:\\\"\\\\F21A\\\"}.fa-user-secret:before{content:\\\"\\\\F21B\\\"}.fa-motorcycle:before{content:\\\"\\\\F21C\\\"}.fa-street-view:before{content:\\\"\\\\F21D\\\"}.fa-heartbeat:before{content:\\\"\\\\F21E\\\"}.fa-venus:before{content:\\\"\\\\F221\\\"}.fa-mars:before{content:\\\"\\\\F222\\\"}.fa-mercury:before{content:\\\"\\\\F223\\\"}.fa-intersex:before,.fa-transgender:before{content:\\\"\\\\F224\\\"}.fa-transgender-alt:before{content:\\\"\\\\F225\\\"}.fa-venus-double:before{content:\\\"\\\\F226\\\"}.fa-mars-double:before{content:\\\"\\\\F227\\\"}.fa-venus-mars:before{content:\\\"\\\\F228\\\"}.fa-mars-stroke:before{content:\\\"\\\\F229\\\"}.fa-mars-stroke-v:before{content:\\\"\\\\F22A\\\"}.fa-mars-stroke-h:before{content:\\\"\\\\F22B\\\"}.fa-neuter:before{content:\\\"\\\\F22C\\\"}.fa-genderless:before{content:\\\"\\\\F22D\\\"}.fa-facebook-official:before{content:\\\"\\\\F230\\\"}.fa-pinterest-p:before{content:\\\"\\\\F231\\\"}.fa-whatsapp:before{content:\\\"\\\\F232\\\"}.fa-server:before{content:\\\"\\\\F233\\\"}.fa-user-plus:before{content:\\\"\\\\F234\\\"}.fa-user-times:before{content:\\\"\\\\F235\\\"}.fa-bed:before,.fa-hotel:before{content:\\\"\\\\F236\\\"}.fa-viacoin:before{content:\\\"\\\\F237\\\"}.fa-train:before{content:\\\"\\\\F238\\\"}.fa-subway:before{content:\\\"\\\\F239\\\"}.fa-medium:before{content:\\\"\\\\F23A\\\"}.fa-y-combinator:before,.fa-yc:before{content:\\\"\\\\F23B\\\"}.fa-optin-monster:before{content:\\\"\\\\F23C\\\"}.fa-opencart:before{content:\\\"\\\\F23D\\\"}.fa-expeditedssl:before{content:\\\"\\\\F23E\\\"}.fa-battery-4:before,.fa-battery-full:before,.fa-battery:before{content:\\\"\\\\F240\\\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\\\"\\\\F241\\\"}.fa-battery-2:before,.fa-battery-half:before{content:\\\"\\\\F242\\\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\\\"\\\\F243\\\"}.fa-battery-0:before,.fa-battery-empty:before{content:\\\"\\\\F244\\\"}.fa-mouse-pointer:before{content:\\\"\\\\F245\\\"}.fa-i-cursor:before{content:\\\"\\\\F246\\\"}.fa-object-group:before{content:\\\"\\\\F247\\\"}.fa-object-ungroup:before{content:\\\"\\\\F248\\\"}.fa-sticky-note:before{content:\\\"\\\\F249\\\"}.fa-sticky-note-o:before{content:\\\"\\\\F24A\\\"}.fa-cc-jcb:before{content:\\\"\\\\F24B\\\"}.fa-cc-diners-club:before{content:\\\"\\\\F24C\\\"}.fa-clone:before{content:\\\"\\\\F24D\\\"}.fa-balance-scale:before{content:\\\"\\\\F24E\\\"}.fa-hourglass-o:before{content:\\\"\\\\F250\\\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\\\"\\\\F251\\\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\\\"\\\\F252\\\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\\\"\\\\F253\\\"}.fa-hourglass:before{content:\\\"\\\\F254\\\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\\\"\\\\F255\\\"}.fa-hand-paper-o:before,.fa-hand-stop-o:before{content:\\\"\\\\F256\\\"}.fa-hand-scissors-o:before{content:\\\"\\\\F257\\\"}.fa-hand-lizard-o:before{content:\\\"\\\\F258\\\"}.fa-hand-spock-o:before{content:\\\"\\\\F259\\\"}.fa-hand-pointer-o:before{content:\\\"\\\\F25A\\\"}.fa-hand-peace-o:before{content:\\\"\\\\F25B\\\"}.fa-trademark:before{content:\\\"\\\\F25C\\\"}.fa-registered:before{content:\\\"\\\\F25D\\\"}.fa-creative-commons:before{content:\\\"\\\\F25E\\\"}.fa-gg:before{content:\\\"\\\\F260\\\"}.fa-gg-circle:before{content:\\\"\\\\F261\\\"}.fa-tripadvisor:before{content:\\\"\\\\F262\\\"}.fa-odnoklassniki:before{content:\\\"\\\\F263\\\"}.fa-odnoklassniki-square:before{content:\\\"\\\\F264\\\"}.fa-get-pocket:before{content:\\\"\\\\F265\\\"}.fa-wikipedia-w:before{content:\\\"\\\\F266\\\"}.fa-safari:before{content:\\\"\\\\F267\\\"}.fa-chrome:before{content:\\\"\\\\F268\\\"}.fa-firefox:before{content:\\\"\\\\F269\\\"}.fa-opera:before{content:\\\"\\\\F26A\\\"}.fa-internet-explorer:before{content:\\\"\\\\F26B\\\"}.fa-television:before,.fa-tv:before{content:\\\"\\\\F26C\\\"}.fa-contao:before{content:\\\"\\\\F26D\\\"}.fa-500px:before{content:\\\"\\\\F26E\\\"}.fa-amazon:before{content:\\\"\\\\F270\\\"}.fa-calendar-plus-o:before{content:\\\"\\\\F271\\\"}.fa-calendar-minus-o:before{content:\\\"\\\\F272\\\"}.fa-calendar-times-o:before{content:\\\"\\\\F273\\\"}.fa-calendar-check-o:before{content:\\\"\\\\F274\\\"}.fa-industry:before{content:\\\"\\\\F275\\\"}.fa-map-pin:before{content:\\\"\\\\F276\\\"}.fa-map-signs:before{content:\\\"\\\\F277\\\"}.fa-map-o:before{content:\\\"\\\\F278\\\"}.fa-map:before{content:\\\"\\\\F279\\\"}.fa-commenting:before{content:\\\"\\\\F27A\\\"}.fa-commenting-o:before{content:\\\"\\\\F27B\\\"}.fa-houzz:before{content:\\\"\\\\F27C\\\"}.fa-vimeo:before{content:\\\"\\\\F27D\\\"}.fa-black-tie:before{content:\\\"\\\\F27E\\\"}.fa-fonticons:before{content:\\\"\\\\F280\\\"}.fa-reddit-alien:before{content:\\\"\\\\F281\\\"}.fa-edge:before{content:\\\"\\\\F282\\\"}.fa-credit-card-alt:before{content:\\\"\\\\F283\\\"}.fa-codiepie:before{content:\\\"\\\\F284\\\"}.fa-modx:before{content:\\\"\\\\F285\\\"}.fa-fort-awesome:before{content:\\\"\\\\F286\\\"}.fa-usb:before{content:\\\"\\\\F287\\\"}.fa-product-hunt:before{content:\\\"\\\\F288\\\"}.fa-mixcloud:before{content:\\\"\\\\F289\\\"}.fa-scribd:before{content:\\\"\\\\F28A\\\"}.fa-pause-circle:before{content:\\\"\\\\F28B\\\"}.fa-pause-circle-o:before{content:\\\"\\\\F28C\\\"}.fa-stop-circle:before{content:\\\"\\\\F28D\\\"}.fa-stop-circle-o:before{content:\\\"\\\\F28E\\\"}.fa-shopping-bag:before{content:\\\"\\\\F290\\\"}.fa-shopping-basket:before{content:\\\"\\\\F291\\\"}.fa-hashtag:before{content:\\\"\\\\F292\\\"}.fa-bluetooth:before{content:\\\"\\\\F293\\\"}.fa-bluetooth-b:before{content:\\\"\\\\F294\\\"}.fa-percent:before{content:\\\"\\\\F295\\\"}.fa-gitlab:before{content:\\\"\\\\F296\\\"}.fa-wpbeginner:before{content:\\\"\\\\F297\\\"}.fa-wpforms:before{content:\\\"\\\\F298\\\"}.fa-envira:before{content:\\\"\\\\F299\\\"}.fa-universal-access:before{content:\\\"\\\\F29A\\\"}.fa-wheelchair-alt:before{content:\\\"\\\\F29B\\\"}.fa-question-circle-o:before{content:\\\"\\\\F29C\\\"}.fa-blind:before{content:\\\"\\\\F29D\\\"}.fa-audio-description:before{content:\\\"\\\\F29E\\\"}.fa-volume-control-phone:before{content:\\\"\\\\F2A0\\\"}.fa-braille:before{content:\\\"\\\\F2A1\\\"}.fa-assistive-listening-systems:before{content:\\\"\\\\F2A2\\\"}.fa-american-sign-language-interpreting:before,.fa-asl-interpreting:before{content:\\\"\\\\F2A3\\\"}.fa-deaf:before,.fa-deafness:before,.fa-hard-of-hearing:before{content:\\\"\\\\F2A4\\\"}.fa-glide:before{content:\\\"\\\\F2A5\\\"}.fa-glide-g:before{content:\\\"\\\\F2A6\\\"}.fa-sign-language:before,.fa-signing:before{content:\\\"\\\\F2A7\\\"}.fa-low-vision:before{content:\\\"\\\\F2A8\\\"}.fa-viadeo:before{content:\\\"\\\\F2A9\\\"}.fa-viadeo-square:before{content:\\\"\\\\F2AA\\\"}.fa-snapchat:before{content:\\\"\\\\F2AB\\\"}.fa-snapchat-ghost:before{content:\\\"\\\\F2AC\\\"}.fa-snapchat-square:before{content:\\\"\\\\F2AD\\\"}.fa-pied-piper:before{content:\\\"\\\\F2AE\\\"}.fa-first-order:before{content:\\\"\\\\F2B0\\\"}.fa-yoast:before{content:\\\"\\\\F2B1\\\"}.fa-themeisle:before{content:\\\"\\\\F2B2\\\"}.fa-google-plus-circle:before,.fa-google-plus-official:before{content:\\\"\\\\F2B3\\\"}.fa-fa:before,.fa-font-awesome:before{content:\\\"\\\\F2B4\\\"}.fa-handshake-o:before{content:\\\"\\\\F2B5\\\"}.fa-envelope-open:before{content:\\\"\\\\F2B6\\\"}.fa-envelope-open-o:before{content:\\\"\\\\F2B7\\\"}.fa-linode:before{content:\\\"\\\\F2B8\\\"}.fa-address-book:before{content:\\\"\\\\F2B9\\\"}.fa-address-book-o:before{content:\\\"\\\\F2BA\\\"}.fa-address-card:before,.fa-vcard:before{content:\\\"\\\\F2BB\\\"}.fa-address-card-o:before,.fa-vcard-o:before{content:\\\"\\\\F2BC\\\"}.fa-user-circle:before{content:\\\"\\\\F2BD\\\"}.fa-user-circle-o:before{content:\\\"\\\\F2BE\\\"}.fa-user-o:before{content:\\\"\\\\F2C0\\\"}.fa-id-badge:before{content:\\\"\\\\F2C1\\\"}.fa-drivers-license:before,.fa-id-card:before{content:\\\"\\\\F2C2\\\"}.fa-drivers-license-o:before,.fa-id-card-o:before{content:\\\"\\\\F2C3\\\"}.fa-quora:before{content:\\\"\\\\F2C4\\\"}.fa-free-code-camp:before{content:\\\"\\\\F2C5\\\"}.fa-telegram:before{content:\\\"\\\\F2C6\\\"}.fa-thermometer-4:before,.fa-thermometer-full:before,.fa-thermometer:before{content:\\\"\\\\F2C7\\\"}.fa-thermometer-3:before,.fa-thermometer-three-quarters:before{content:\\\"\\\\F2C8\\\"}.fa-thermometer-2:before,.fa-thermometer-half:before{content:\\\"\\\\F2C9\\\"}.fa-thermometer-1:before,.fa-thermometer-quarter:before{content:\\\"\\\\F2CA\\\"}.fa-thermometer-0:before,.fa-thermometer-empty:before{content:\\\"\\\\F2CB\\\"}.fa-shower:before{content:\\\"\\\\F2CC\\\"}.fa-bath:before,.fa-bathtub:before,.fa-s15:before{content:\\\"\\\\F2CD\\\"}.fa-podcast:before{content:\\\"\\\\F2CE\\\"}.fa-window-maximize:before{content:\\\"\\\\F2D0\\\"}.fa-window-minimize:before{content:\\\"\\\\F2D1\\\"}.fa-window-restore:before{content:\\\"\\\\F2D2\\\"}.fa-times-rectangle:before,.fa-window-close:before{content:\\\"\\\\F2D3\\\"}.fa-times-rectangle-o:before,.fa-window-close-o:before{content:\\\"\\\\F2D4\\\"}.fa-bandcamp:before{content:\\\"\\\\F2D5\\\"}.fa-grav:before{content:\\\"\\\\F2D6\\\"}.fa-etsy:before{content:\\\"\\\\F2D7\\\"}.fa-imdb:before{content:\\\"\\\\F2D8\\\"}.fa-ravelry:before{content:\\\"\\\\F2D9\\\"}.fa-eercast:before{content:\\\"\\\\F2DA\\\"}.fa-microchip:before{content:\\\"\\\\F2DB\\\"}.fa-snowflake-o:before{content:\\\"\\\\F2DC\\\"}.fa-superpowers:before{content:\\\"\\\\F2DD\\\"}.fa-wpexplorer:before{content:\\\"\\\\F2DE\\\"}.fa-meetup:before{content:\\\"\\\\F2E0\\\"}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/font-awesome/css/font-awesome.min.css\n// module id = 54\n// module chunks = 0","exports = module.exports = require(\"../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/normalize.css/normalize.css\n// module id = 55\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".About{min-height:calc(100% - 350px - 400px);width:90%;margin-left:5%}.About .action-button{display:block;margin:9px auto;border-radius:34px;font-weight:700;overflow-y:hidden;transition:opacity 1.5s;opacity:1}.About .action-button.hide-button{opacity:0}.About .account-container{margin-top:10px;display:block;text-align:center;font-weight:600}.About .account-container i{display:block;font-size:3.7em}.About .title{font-size:2.3rem;font-weight:500;margin:30px 0 15px;text-align:center}.About .description-list{margin-top:15px;margin-bottom:15px;min-height:160px;text-align:center}.About .description-list p{font-size:18px;display:inline-block;white-space:pre-wrap}.About .description-list .typing-cursor{border-left:1.5px solid #000;opacity:1;transition:opacity 2s;white-space:pre}.About .description-list .typing-cursor.done{opacity:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/sass-loader?outputStyle=expanded!./src/styles/About.scss\n// module id = 56\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"*{box-sizing:border-box}h1,h2,h3,h4,h5{cursor:default;color:#2f4f4f;font-family:Helvetica Neue,Helvetica,Roboto,Arial,sans-serif;font-style:normal;font-weight:400}h1{position:absolute;left:0;top:0}body{background:#fff;margin:0;font-family:arial,helvetica,clean,sans-serif}button{padding:.85em 1em;border:1px solid transparent;border-radius:0;font-size:.9rem;line-height:1;cursor:pointer;background-color:#2199e8;color:#fefefe}#app,.App,button{text-align:center}#app,.App{height:100%;line-height:1.6}a{color:#1976d2;text-decoration:none}a:hover{color:#0d47a1}p{cursor:default;margin-bottom:15px;line-height:1.6}.button{background-color:#1976d2}.button:hover{background-color:#0d47a1}.flex-container{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.column{padding:0 1rem}@media (max-width:640px){body .small-10{width:80%}body .small-6{width:50%}body .small-11{width:90%}}@media (min-width:641px) and (max-width:1024px){body .small-10{width:80%}body .small-6{width:50%}body .small-11{width:90%}body .medium-3{width:25%}body .medium-6{width:50%}body .medium-9{width:75%}}@media (min-width:1025px){body .small-10{width:80%}body .small-6{width:50%}body .small-11{width:90%}body .medium-3{width:25%}body .medium-6{width:50%}body .medium-9{width:75%}body .large-7{width:60%}body large-4{width:33%}}.thumbnail{display:inline-block;max-width:100%;margin-bottom:1rem;border:4px solid #fefefe;border-radius:0;box-shadow:0 0 0 1px hsla(0,0%,4%,.2);line-height:0}.Header{background:#fff;height:400px;position:relative;text-align:center}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/sass-loader?outputStyle=expanded!./src/styles/App.scss\n// module id = 57\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".articles-container{text-align:left}.articles-container .article{padding:10px 0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;max-width:800px;margin:0 auto}.articles-container .article .link{font-size:23px;text-align:left;padding-right:20px}.articles-container .article .date{text-align:right;min-width:70px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/sass-loader?outputStyle=expanded!./src/styles/Articles.scss\n// module id = 58\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".Footer{background-color:#3f51b5;min-height:60px;margin-top:20px;padding-top:15px;text-align:center}.Footer>a{margin:5px 0 20px;color:#fff;display:block;font-size:1.5em;text-align:center;transition:color .5s}.Footer>a:focus{outline-color:#fff}.Footer>a:hover{color:skyblue}.Footer>a i{display:block}.Footer .mail{display:inline-block;font-size:20px;color:#fff}.Footer .footer-link{font-size:3.5em;margin:0 15px;display:inline-block}.Footer .snack-bar{text-align:center;padding:10px 15px;position:fixed;bottom:20px;width:300px;box-sizing:border-box;left:calc(50% - 150px);background:#323232;color:#fff;border-radius:8px;transition:opacity 1s;display:none;opacity:0}.Footer .snack-bar p{margin:10px 0;font-size:18px;font-weight:700}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/sass-loader?outputStyle=expanded!./src/styles/Footer.scss\n// module id = 59\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".work{min-height:520px}.work>a>img:hover{filter:none}.work>div>p{margin-bottom:5px}.work iframe{border:none;box-shadow:0 0 0 1px hsla(0,0%,4%,.2);margin-bottom:1rem}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/sass-loader?outputStyle=expanded!./src/styles/Work.scss\n// module id = 60\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".work-container{text-align:center}.work-container .img{height:300px;width:300px}.work-container.speeches .img{height:400px;width:400px}.work-container>div{clear:none!important}.work-container h5{cursor:default;font-weight:700}.work-container .description{margin-bottom:10px}@media screen and (min-width:40em){.work-container>div:last-child:not(:first-child){float:none}}@media screen and (min-width:64em){.work-container>div:last-child:not(:first-child){float:right}}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader!./~/sass-loader?outputStyle=expanded!./src/styles/Works.scss\n// module id = 61\n// module chunks = 0","module.exports = __webpack_public_path__ + \"674f50d287a8c48dc19ba404d20fe713.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/fonts/fontawesome-webfont.eot\n// module id = 62\n// module chunks = 0","module.exports = __webpack_public_path__ + \"912ec66d7572ff821749319396470bde.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/fonts/fontawesome-webfont.svg?v=4.7.0\n// module id = 64\n// module chunks = 0","/** @license React v16.11.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),q=require(\"scheduler\");function u(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(u(227));var ba=null,ca={};\nfunction da(){if(ba)for(var a in ca){var b=ca[a],c=ba.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!ea[c]){if(!b.extractEvents)throw Error(u(97,a));ea[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(fa.hasOwnProperty(h))throw Error(u(99,h));fa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ha(k[e],g,h);e=!0}else f.registrationName?(ha(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\nfunction ha(a,b,c){if(ia[a])throw Error(u(100,a));ia[a]=b;ja[a]=b.eventTypes[c].dependencies}var ea=[],fa={},ia={},ja={};function ka(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var la=!1,ma=null,na=!1,oa=null,pa={onError:function(a){la=!0;ma=a}};function qa(a,b,c,d,e,f,g,h,k){la=!1;ma=null;ka.apply(pa,arguments)}\nfunction ra(a,b,c,d,e,f,g,h,k){qa.apply(this,arguments);if(la){if(la){var l=ma;la=!1;ma=null}else throw Error(u(198));na||(na=!0,oa=l)}}var sa=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ra(d,b,void 0,a);a.currentTarget=null}function xa(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ba(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a){ya(a,Aa);if(za)throw Error(u(95));if(na)throw a=oa,na=!1,oa=null,a;}}\nvar Ca={injectEventPluginOrder:function(a){if(ba)throw Error(u(101));ba=Array.prototype.slice.call(a);da()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!ca.hasOwnProperty(c)||ca[c]!==d){if(ca[c])throw Error(u(102,c));ca[c]=d;b=!0}}b&&da()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=sa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(u(231,b,typeof c));\nreturn c}var Ea=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ea.hasOwnProperty(\"ReactCurrentDispatcher\")||(Ea.ReactCurrentDispatcher={current:null});Ea.hasOwnProperty(\"ReactCurrentBatchConfig\")||(Ea.ReactCurrentBatchConfig={suspense:null});\nvar Fa=/^(.*)[\\\\\\/]/,w=\"function\"===typeof Symbol&&Symbol.for,Ga=w?Symbol.for(\"react.element\"):60103,Ha=w?Symbol.for(\"react.portal\"):60106,Ia=w?Symbol.for(\"react.fragment\"):60107,Ja=w?Symbol.for(\"react.strict_mode\"):60108,Ka=w?Symbol.for(\"react.profiler\"):60114,La=w?Symbol.for(\"react.provider\"):60109,Ma=w?Symbol.for(\"react.context\"):60110,Na=w?Symbol.for(\"react.concurrent_mode\"):60111,Oa=w?Symbol.for(\"react.forward_ref\"):60112,Pa=w?Symbol.for(\"react.suspense\"):60113,Qa=w?Symbol.for(\"react.suspense_list\"):\n60120,Ra=w?Symbol.for(\"react.memo\"):60115,Sa=w?Symbol.for(\"react.lazy\"):60116;w&&Symbol.for(\"react.fundamental\");w&&Symbol.for(\"react.responder\");w&&Symbol.for(\"react.scope\");var Ta=\"function\"===typeof Symbol&&Symbol.iterator;function Ua(a){if(null===a||\"object\"!==typeof a)return null;a=Ta&&a[Ta]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Va(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\nfunction Wa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case Ia:return\"Fragment\";case Ha:return\"Portal\";case Ka:return\"Profiler\";case Ja:return\"StrictMode\";case Pa:return\"Suspense\";case Qa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ma:return\"Context.Consumer\";case La:return\"Context.Provider\";case Oa:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\");case Ra:return Wa(a.type);case Sa:if(a=1===a._status?a._result:null)return Wa(a)}return null}function Xa(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=Wa(a.type);c=null;d&&(c=Wa(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Fa,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar Ya=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),Za=null,$a=null,ab=null;function bb(a){if(a=ua(a)){if(\"function\"!==typeof Za)throw Error(u(280));var b=sa(a.stateNode);Za(a.stateNode,a.type,b)}}function cb(a){$a?ab?ab.push(a):ab=[a]:$a=a}function db(){if($a){var a=$a,b=ab;ab=$a=null;bb(a);if(b)for(a=0;a<b.length;a++)bb(b[a])}}function eb(a,b){return a(b)}function fb(a,b,c,d){return a(b,c,d)}function gb(){}\nvar hb=eb,ib=!1,jb=!1;function kb(){if(null!==$a||null!==ab)gb(),db()}new Map;var lb=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,mb=Object.prototype.hasOwnProperty,nb={},ob={};\nfunction pb(a){if(mb.call(ob,a))return!0;if(mb.call(nb,a))return!1;if(lb.test(a))return ob[a]=!0;nb[a]=!0;return!1}function qb(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction rb(a,b,c,d){if(null===b||\"undefined\"===typeof b||qb(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1)});var sb=/[\\-:]([a-z])/g;function tb(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(sb,\ntb);D[b]=new B(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0)});function ub(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}\nfunction vb(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(rb(b,c,e,d)&&(c=null),d||null===e?pb(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction wb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction xb(a){var b=wb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function yb(a){a._valueTracker||(a._valueTracker=xb(a))}function zb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=wb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Ab(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bb(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=ub(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cb(a,b){b=b.checked;null!=b&&vb(a,\"checked\",b,!1)}\nfunction Eb(a,b){Cb(a,b);var c=ub(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Fb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Fb(a,b.type,ub(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Gb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Fb(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function Hb(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Ib(a,b){a=n({children:void 0},b);if(b=Hb(b.children))a.children=b;return a}\nfunction Jb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+ub(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Kb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Lb(a,b){var c=b.value;if(null==c){c=b.defaultValue;b=b.children;if(null!=b){if(null!=c)throw Error(u(92));if(Array.isArray(b)){if(!(1>=b.length))throw Error(u(93));b=b[0]}c=b}null==c&&(c=\"\")}a._wrapperState={initialValue:ub(c)}}\nfunction Mb(a,b){var c=ub(b.value),d=ub(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Nb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var Ob={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Pb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Qb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Pb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Rb,Sb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ob.svg||\"innerHTML\"in a)a.innerHTML=b;else{Rb=Rb||document.createElement(\"div\");Rb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Rb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Tb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Ub(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Vb={animationend:Ub(\"Animation\",\"AnimationEnd\"),animationiteration:Ub(\"Animation\",\"AnimationIteration\"),animationstart:Ub(\"Animation\",\"AnimationStart\"),transitionend:Ub(\"Transition\",\"TransitionEnd\")},Wb={},Xb={};\nYa&&(Xb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Vb.animationend.animation,delete Vb.animationiteration.animation,delete Vb.animationstart.animation),\"TransitionEvent\"in window||delete Vb.transitionend.transition);function Yb(a){if(Wb[a])return Wb[a];if(!Vb[a])return a;var b=Vb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Xb)return Wb[a]=b[c];return a}var Zb=Yb(\"animationend\"),$b=Yb(\"animationiteration\"),ac=Yb(\"animationstart\"),bc=Yb(\"transitionend\"),dc=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \");\nfunction ec(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function fc(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function gc(a){if(ec(a)!==a)throw Error(u(188));}\nfunction hc(a){var b=a.alternate;if(!b){b=ec(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return gc(e),a;if(f===d)return gc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function ic(a){a=hc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar jc,kc,lc,mc=!1,nc=[],oc=null,pc=null,qc=null,rc=new Map,sc=new Map,tc=[],uc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit\".split(\" \"),vc=\"focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture\".split(\" \");\nfunction wc(a){var b=xc(a);uc.forEach(function(c){yc(c,a,b)});vc.forEach(function(c){yc(c,a,b)})}function zc(a,b,c,d){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:d}}function Ac(a,b){switch(a){case \"focus\":case \"blur\":oc=null;break;case \"dragenter\":case \"dragleave\":pc=null;break;case \"mouseover\":case \"mouseout\":qc=null;break;case \"pointerover\":case \"pointerout\":rc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":sc.delete(b.pointerId)}}\nfunction Bc(a,b,c,d,e){if(null===a||a.nativeEvent!==e)return a=zc(b,c,d,e),null!==b&&(b=Cc(b),null!==b&&kc(b)),a;a.eventSystemFlags|=d;return a}function Dc(a,b,c,d){switch(b){case \"focus\":return oc=Bc(oc,a,b,c,d),!0;case \"dragenter\":return pc=Bc(pc,a,b,c,d),!0;case \"mouseover\":return qc=Bc(qc,a,b,c,d),!0;case \"pointerover\":var e=d.pointerId;rc.set(e,Bc(rc.get(e)||null,a,b,c,d));return!0;case \"gotpointercapture\":return e=d.pointerId,sc.set(e,Bc(sc.get(e)||null,a,b,c,d)),!0}return!1}\nfunction Ec(a){var b=Fc(a.target);if(null!==b){var c=ec(b);if(null!==c)if(b=c.tag,13===b){if(b=fc(c),null!==b){a.blockedOn=b;q.unstable_runWithPriority(a.priority,function(){lc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Gc(a){if(null!==a.blockedOn)return!1;var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);if(null!==b){var c=Cc(b);null!==c&&kc(c);a.blockedOn=b;return!1}return!0}\nfunction Ic(a,b,c){Gc(a)&&c.delete(b)}function Jc(){for(mc=!1;0<nc.length;){var a=nc[0];if(null!==a.blockedOn){a=Cc(a.blockedOn);null!==a&&jc(a);break}var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);null!==b?a.blockedOn=b:nc.shift()}null!==oc&&Gc(oc)&&(oc=null);null!==pc&&Gc(pc)&&(pc=null);null!==qc&&Gc(qc)&&(qc=null);rc.forEach(Ic);sc.forEach(Ic)}function Kc(a,b){a.blockedOn===b&&(a.blockedOn=null,mc||(mc=!0,q.unstable_scheduleCallback(q.unstable_NormalPriority,Jc)))}\nfunction Lc(a){function b(b){return Kc(b,a)}if(0<nc.length){Kc(nc[0],a);for(var c=1;c<nc.length;c++){var d=nc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==oc&&Kc(oc,a);null!==pc&&Kc(pc,a);null!==qc&&Kc(qc,a);rc.forEach(b);sc.forEach(b);for(c=0;c<tc.length;c++)d=tc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<tc.length&&(c=tc[0],null===c.blockedOn);)Ec(c),null===c.blockedOn&&tc.shift()}\nfunction Mc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Nc(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Oc(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Pc(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Nc(b);for(b=c.length;0<b--;)Oc(c[b],\"captured\",a);for(b=0;b<c.length;b++)Oc(c[b],\"bubbled\",a)}}function Qc(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Rc(a){a&&a.dispatchConfig.registrationName&&Qc(a._targetInst,null,a)}\nfunction Sc(a){ya(a,Pc)}function Tc(){return!0}function Uc(){return!1}function E(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?Tc:Uc;this.isPropagationStopped=Uc;return this}\nn(E.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=Tc)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=Tc)},persist:function(){this.isPersistent=Tc},isPersistent:Uc,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=Uc;this._dispatchInstances=this._dispatchListeners=null}});E.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nE.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;Vc(c);return c};Vc(E);function Wc(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Xc(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Vc(a){a.eventPool=[];a.getPooled=Wc;a.release=Xc}var Yc=E.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zc=E.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),$c=E.extend({view:null,detail:null}),ad=$c.extend({relatedTarget:null});\nfunction bd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar cd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},ed={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},fd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function gd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=fd[a])?!!b[a]:!1}function hd(){return gd}\nvar id=$c.extend({key:function(a){if(a.key){var b=cd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=bd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?ed[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:hd,charCode:function(a){return\"keypress\"===a.type?bd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?bd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),jd=0,kd=0,ld=!1,md=!1,nd=$c.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:hd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=jd;jd=a.screenX;return ld?\"mousemove\"===a.type?a.screenX-\nb:0:(ld=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;var b=kd;kd=a.screenY;return md?\"mousemove\"===a.type?a.screenY-b:0:(md=!0,0)}}),od=nd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),pd=nd.extend({dataTransfer:null}),qd=$c.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:hd}),rd=E.extend({propertyName:null,\nelapsedTime:null,pseudoElement:null}),sd=nd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"blur\",\"blur\",0],[\"cancel\",\"cancel\",0],[\"click\",\"click\",0],[\"close\",\"close\",0],[\"contextmenu\",\"contextMenu\",0],[\"copy\",\"copy\",0],[\"cut\",\"cut\",0],[\"auxclick\",\"auxClick\",0],[\"dblclick\",\"doubleClick\",0],[\"dragend\",\"dragEnd\",\n0],[\"dragstart\",\"dragStart\",0],[\"drop\",\"drop\",0],[\"focus\",\"focus\",0],[\"input\",\"input\",0],[\"invalid\",\"invalid\",0],[\"keydown\",\"keyDown\",0],[\"keypress\",\"keyPress\",0],[\"keyup\",\"keyUp\",0],[\"mousedown\",\"mouseDown\",0],[\"mouseup\",\"mouseUp\",0],[\"paste\",\"paste\",0],[\"pause\",\"pause\",0],[\"play\",\"play\",0],[\"pointercancel\",\"pointerCancel\",0],[\"pointerdown\",\"pointerDown\",0],[\"pointerup\",\"pointerUp\",0],[\"ratechange\",\"rateChange\",0],[\"reset\",\"reset\",0],[\"seeked\",\"seeked\",0],[\"submit\",\"submit\",0],[\"touchcancel\",\"touchCancel\",\n0],[\"touchend\",\"touchEnd\",0],[\"touchstart\",\"touchStart\",0],[\"volumechange\",\"volumeChange\",0],[\"drag\",\"drag\",1],[\"dragenter\",\"dragEnter\",1],[\"dragexit\",\"dragExit\",1],[\"dragleave\",\"dragLeave\",1],[\"dragover\",\"dragOver\",1],[\"mousemove\",\"mouseMove\",1],[\"mouseout\",\"mouseOut\",1],[\"mouseover\",\"mouseOver\",1],[\"pointermove\",\"pointerMove\",1],[\"pointerout\",\"pointerOut\",1],[\"pointerover\",\"pointerOver\",1],[\"scroll\",\"scroll\",1],[\"toggle\",\"toggle\",1],[\"touchmove\",\"touchMove\",1],[\"wheel\",\"wheel\",1],[\"abort\",\"abort\",\n2],[Zb,\"animationEnd\",2],[$b,\"animationIteration\",2],[ac,\"animationStart\",2],[\"canplay\",\"canPlay\",2],[\"canplaythrough\",\"canPlayThrough\",2],[\"durationchange\",\"durationChange\",2],[\"emptied\",\"emptied\",2],[\"encrypted\",\"encrypted\",2],[\"ended\",\"ended\",2],[\"error\",\"error\",2],[\"gotpointercapture\",\"gotPointerCapture\",2],[\"load\",\"load\",2],[\"loadeddata\",\"loadedData\",2],[\"loadedmetadata\",\"loadedMetadata\",2],[\"loadstart\",\"loadStart\",2],[\"lostpointercapture\",\"lostPointerCapture\",2],[\"playing\",\"playing\",2],[\"progress\",\n\"progress\",2],[\"seeking\",\"seeking\",2],[\"stalled\",\"stalled\",2],[\"suspend\",\"suspend\",2],[\"timeupdate\",\"timeUpdate\",2],[bc,\"transitionEnd\",2],[\"waiting\",\"waiting\",2]],ud={},vd={},xd=0;for(;xd<td.length;xd++){var yd=td[xd],zd=yd[0],Ad=yd[1],Bd=yd[2],Cd=\"on\"+(Ad[0].toUpperCase()+Ad.slice(1)),Dd={phasedRegistrationNames:{bubbled:Cd,captured:Cd+\"Capture\"},dependencies:[zd],eventPriority:Bd};ud[Ad]=Dd;vd[zd]=Dd}\nvar Ed={eventTypes:ud,getEventPriority:function(a){a=vd[a];return void 0!==a?a.eventPriority:2},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===bd(c))return null;case \"keydown\":case \"keyup\":a=id;break;case \"blur\":case \"focus\":a=ad;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=nd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Zb:case $b:case ac:a=Yc;break;case bc:a=rd;break;case \"scroll\":a=$c;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=Zc;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=od;break;default:a=E}b=a.getPooled(e,b,c,d);Sc(b);return b}},Fd=q.unstable_UserBlockingPriority,\nGd=q.unstable_runWithPriority,Hd=Ed.getEventPriority,Id=10,Jd=[];\nfunction Kd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=Fc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Mc(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=a.eventSystemFlags,h=null,k=0;k<ea.length;k++){var l=ea[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=xa(h,l))}Ba(h)}}\nvar Ld=!0;function F(a,b){Md(b,a,!1)}function Md(a,b,c){switch(Hd(b)){case 0:var d=Nd.bind(null,b,1);break;case 1:d=Od.bind(null,b,1);break;default:d=Pd.bind(null,b,1)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function Nd(a,b,c){ib||gb();var d=Pd,e=ib;ib=!0;try{fb(d,a,b,c)}finally{(ib=e)||kb()}}function Od(a,b,c){Gd(Fd,Pd.bind(null,a,b,c))}\nfunction Qd(a,b,c,d){if(Jd.length){var e=Jd.pop();e.topLevelType=a;e.eventSystemFlags=b;e.nativeEvent=c;e.targetInst=d;a=e}else a={topLevelType:a,eventSystemFlags:b,nativeEvent:c,targetInst:d,ancestors:[]};try{if(b=Kd,c=a,jb)b(c,void 0);else{jb=!0;try{hb(b,c,void 0)}finally{jb=!1,kb()}}}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,Jd.length<Id&&Jd.push(a)}}\nfunction Pd(a,b,c){if(Ld)if(0<nc.length&&-1<uc.indexOf(a))a=zc(null,a,b,c),nc.push(a);else{var d=Hc(a,b,c);null===d?Ac(a,c):-1<uc.indexOf(a)?(a=zc(d,a,b,c),nc.push(a)):Dc(d,a,b,c)||(Ac(a,c),Qd(a,b,c,null))}}function Hc(a,b,c){var d=Mc(c);d=Fc(d);if(null!==d){var e=ec(d);if(null===e)d=null;else{var f=e.tag;if(13===f){d=fc(e);if(null!==d)return d;d=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;d=null}else e!==d&&(d=null)}}Qd(a,b,c,d);return null}\nfunction Rd(a){if(!Ya)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}var Sd=new (\"function\"===typeof WeakMap?WeakMap:Map);function xc(a){var b=Sd.get(a);void 0===b&&(b=new Set,Sd.set(a,b));return b}\nfunction yc(a,b,c){if(!c.has(a)){switch(a){case \"scroll\":Md(b,\"scroll\",!0);break;case \"focus\":case \"blur\":Md(b,\"focus\",!0);Md(b,\"blur\",!0);c.add(\"blur\");c.add(\"focus\");break;case \"cancel\":case \"close\":Rd(a)&&Md(b,a,!0);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===dc.indexOf(a)&&F(a,b)}c.add(a)}}\nvar Td={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ud=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Td).forEach(function(a){Ud.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Td[b]=Td[a]})});function Vd(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||Td.hasOwnProperty(a)&&Td[a]?(\"\"+b).trim():b+\"px\"}\nfunction Wd(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=Vd(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Xd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Yd(a,b){if(b){if(Xd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,\"\"));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(u(62,\"\"));}}\nfunction Zd(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function $d(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=xc(a);b=ja[b];for(var d=0;d<b.length;d++)yc(b[d],a,c)}function ae(){}\nfunction be(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ce(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function de(a,b){var c=ce(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ce(c)}}\nfunction ee(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?ee(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function fe(){for(var a=window,b=be();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=be(a.document)}return b}\nfunction ge(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}var he=\"$\",ie=\"/$\",je=\"$?\",ke=\"$!\",le=null,me=null;function ne(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction oe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var pe=\"function\"===typeof setTimeout?setTimeout:void 0,qe=\"function\"===typeof clearTimeout?clearTimeout:void 0;function re(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\nfunction se(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===he||c===ke||c===je){if(0===b)return a;b--}else c===ie&&b++}a=a.previousSibling}return null}var te=Math.random().toString(36).slice(2),ue=\"__reactInternalInstance$\"+te,ve=\"__reactEventHandlers$\"+te,we=\"__reactContainere$\"+te;\nfunction Fc(a){var b=a[ue];if(b)return b;for(var c=a.parentNode;c;){if(b=c[we]||c[ue]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=se(a);null!==a;){if(c=a[ue])return c;a=se(a)}return b}a=c;c=a.parentNode}return null}function Cc(a){a=a[ue]||a[we];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function xe(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function ye(a){return a[ve]||null}var ze=null,Ae=null,Be=null;\nfunction Ce(){if(Be)return Be;var a,b=Ae,c=b.length,d,e=\"value\"in ze?ze.value:ze.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return Be=e.slice(a,1<d?1-d:void 0)}var De=E.extend({data:null}),Ee=E.extend({data:null}),Fe=[9,13,27,32],Ge=Ya&&\"CompositionEvent\"in window,He=null;Ya&&\"documentMode\"in document&&(He=document.documentMode);\nvar Ie=Ya&&\"TextEvent\"in window&&!He,Je=Ya&&(!Ge||He&&8<He&&11>=He),Ke=String.fromCharCode(32),Le={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Me=!1;\nfunction Ne(a,b){switch(a){case \"keyup\":return-1!==Fe.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Oe(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Pe=!1;function Qe(a,b){switch(a){case \"compositionend\":return Oe(b);case \"keypress\":if(32!==b.which)return null;Me=!0;return Ke;case \"textInput\":return a=b.data,a===Ke&&Me?null:a;default:return null}}\nfunction Re(a,b){if(Pe)return\"compositionend\"===a||!Ge&&Ne(a,b)?(a=Ce(),Be=Ae=ze=null,Pe=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return Je&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Se={eventTypes:Le,extractEvents:function(a,b,c,d){var e;if(Ge)b:{switch(a){case \"compositionstart\":var f=Le.compositionStart;break b;case \"compositionend\":f=Le.compositionEnd;break b;case \"compositionupdate\":f=Le.compositionUpdate;break b}f=void 0}else Pe?Ne(a,c)&&(f=Le.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(f=Le.compositionStart);f?(Je&&\"ko\"!==c.locale&&(Pe||f!==Le.compositionStart?f===Le.compositionEnd&&Pe&&(e=Ce()):(ze=d,Ae=\"value\"in ze?ze.value:ze.textContent,Pe=!0)),f=De.getPooled(f,\nb,c,d),e?f.data=e:(e=Oe(c),null!==e&&(f.data=e)),Sc(f),e=f):e=null;(a=Ie?Qe(a,c):Re(a,c))?(b=Ee.getPooled(Le.beforeInput,b,c,d),b.data=a,Sc(b)):b=null;return null===e?b:null===b?e:[e,b]}},Te={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Te[a.type]:\"textarea\"===b?!0:!1}\nvar Ve={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function We(a,b,c){a=E.getPooled(Ve.change,a,b,c);a.type=\"change\";cb(c);Sc(a);return a}var Xe=null,Ye=null;function Ze(a){Ba(a)}function $e(a){var b=xe(a);if(zb(b))return a}function af(a,b){if(\"change\"===a)return b}var bf=!1;Ya&&(bf=Rd(\"input\")&&(!document.documentMode||9<document.documentMode));\nfunction cf(){Xe&&(Xe.detachEvent(\"onpropertychange\",df),Ye=Xe=null)}function df(a){if(\"value\"===a.propertyName&&$e(Ye))if(a=We(Ye,a,Mc(a)),ib)Ba(a);else{ib=!0;try{eb(Ze,a)}finally{ib=!1,kb()}}}function ef(a,b,c){\"focus\"===a?(cf(),Xe=b,Ye=c,Xe.attachEvent(\"onpropertychange\",df)):\"blur\"===a&&cf()}function ff(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return $e(Ye)}function gf(a,b){if(\"click\"===a)return $e(b)}function hf(a,b){if(\"input\"===a||\"change\"===a)return $e(b)}\nvar jf={eventTypes:Ve,_isInputEventSupported:bf,extractEvents:function(a,b,c,d){var e=b?xe(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=af;else if(Ue(e))if(bf)g=hf;else{g=ff;var h=ef}else(f=e.nodeName)&&\"input\"===f.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(g=gf);if(g&&(g=g(a,b)))return We(g,c,d);h&&h(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Fb(e,\"number\",e.value)}},kf={mouseEnter:{registrationName:\"onMouseEnter\",\ndependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},lf,mf={eventTypes:kf,extractEvents:function(a,b,c,d,e){var f=\"mouseover\"===a||\"pointerover\"===a,g=\"mouseout\"===a||\"pointerout\"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;\ne=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?Fc(b):null,null!==b&&(f=ec(b),b!==f||5!==b.tag&&6!==b.tag))b=null}else g=null;if(g===b)return null;if(\"mouseout\"===a||\"mouseover\"===a){var h=nd;var k=kf.mouseLeave;var l=kf.mouseEnter;var m=\"mouse\"}else if(\"pointerout\"===a||\"pointerover\"===a)h=od,k=kf.pointerLeave,l=kf.pointerEnter,m=\"pointer\";a=null==g?e:xe(g);e=null==b?e:xe(b);k=h.getPooled(k,g,c,d);k.type=m+\"leave\";k.target=\na;k.relatedTarget=e;d=h.getPooled(l,b,c,d);d.type=m+\"enter\";d.target=e;d.relatedTarget=a;h=g;m=b;if(h&&m)a:{l=h;a=m;g=0;for(b=l;b;b=Nc(b))g++;b=0;for(e=a;e;e=Nc(e))b++;for(;0<g-b;)l=Nc(l),g--;for(;0<b-g;)a=Nc(a),b--;for(;g--;){if(l===a||l===a.alternate)break a;l=Nc(l);a=Nc(a)}l=null}else l=null;a=l;for(l=[];h&&h!==a;){g=h.alternate;if(null!==g&&g===a)break;l.push(h);h=Nc(h)}for(h=[];m&&m!==a;){g=m.alternate;if(null!==g&&g===a)break;h.push(m);m=Nc(m)}for(m=0;m<l.length;m++)Qc(l[m],\"bubbled\",k);for(m=\nh.length;0<m--;)Qc(h[m],\"captured\",d);if(c===lf)return lf=null,[k];lf=c;return[k,d]}};function nf(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var of=\"function\"===typeof Object.is?Object.is:nf,pf=Object.prototype.hasOwnProperty;function qf(a,b){if(of(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!pf.call(b,c[d])||!of(a[c[d]],b[c[d]]))return!1;return!0}\nvar rf=Ya&&\"documentMode\"in document&&11>=document.documentMode,sf={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},tf=null,uf=null,vf=null,wf=!1;\nfunction xf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(wf||null==tf||tf!==be(c))return null;c=tf;\"selectionStart\"in c&&ge(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return vf&&qf(vf,c)?null:(vf=c,a=E.getPooled(sf.select,uf,a,b),a.type=\"select\",a.target=tf,Sc(a),a)}\nvar yf={eventTypes:sf,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=xc(e);f=ja.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?xe(b):window;switch(a){case \"focus\":if(Ue(e)||\"true\"===e.contentEditable)tf=e,uf=b,vf=null;break;case \"blur\":vf=uf=tf=null;break;case \"mousedown\":wf=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return wf=!1,xf(c,d);case \"selectionchange\":if(rf)break;\ncase \"keydown\":case \"keyup\":return xf(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));var zf=Cc;sa=ye;ua=zf;va=xe;Ca.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:mf,ChangeEventPlugin:jf,SelectEventPlugin:yf,BeforeInputEventPlugin:Se});new Set;var Af=[],Bf=-1;function G(a){0>Bf||(a.current=Af[Bf],Af[Bf]=null,Bf--)}\nfunction I(a,b){Bf++;Af[Bf]=a.current;a.current=b}var Cf={},J={current:Cf},K={current:!1},Df=Cf;function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\nfunction Ff(a){G(K,a);G(J,a)}function Gf(a){G(K,a);G(J,a)}function Hf(a,b,c){if(J.current!==Cf)throw Error(u(168));I(J,b,a);I(K,c,a)}function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,Wa(b)||\"Unknown\",e));return n({},c,{},d)}function Jf(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Cf;Df=J.current;I(J,b,a);I(K,K.current,a);return!0}\nfunction Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(b=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=b,G(K,a),G(J,a),I(J,b,a)):G(K,a);I(K,c,a)}\nvar Lf=q.unstable_runWithPriority,Mf=q.unstable_scheduleCallback,Nf=q.unstable_cancelCallback,Of=q.unstable_shouldYield,Pf=q.unstable_requestPaint,Qf=q.unstable_now,Rf=q.unstable_getCurrentPriorityLevel,Sf=q.unstable_ImmediatePriority,Tf=q.unstable_UserBlockingPriority,Uf=q.unstable_NormalPriority,Vf=q.unstable_LowPriority,Wf=q.unstable_IdlePriority,Xf={},Yf=void 0!==Pf?Pf:function(){},Zf=null,$f=null,ag=!1,bg=Qf(),cg=1E4>bg?Qf:function(){return Qf()-bg};\nfunction dg(){switch(Rf()){case Sf:return 99;case Tf:return 98;case Uf:return 97;case Vf:return 96;case Wf:return 95;default:throw Error(u(332));}}function eg(a){switch(a){case 99:return Sf;case 98:return Tf;case 97:return Uf;case 96:return Vf;case 95:return Wf;default:throw Error(u(332));}}function fg(a,b){a=eg(a);return Lf(a,b)}function gg(a,b,c){a=eg(a);return Mf(a,b,c)}function hg(a){null===Zf?(Zf=[a],$f=Mf(Sf,ig)):Zf.push(a);return Xf}function jg(){if(null!==$f){var a=$f;$f=null;Nf(a)}ig()}\nfunction ig(){if(!ag&&null!==Zf){ag=!0;var a=0;try{var b=Zf;fg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Zf=null}catch(c){throw null!==Zf&&(Zf=Zf.slice(a+1)),Mf(Sf,jg),c;}finally{ag=!1}}}var kg=3;function lg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function mg(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var ng={current:null},og=null,pg=null,qg=null;function rg(){qg=pg=og=null}\nfunction sg(a,b){var c=a.type._context;I(ng,c._currentValue,a);c._currentValue=b}function tg(a){var b=ng.current;G(ng,a);a.type._context._currentValue=b}function ug(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}\nfunction vg(a,b){og=a;qg=pg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(wg=!0),a.firstContext=null)}function xg(a,b){if(qg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)qg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===pg){if(null===og)throw Error(u(308));pg=b;og.dependencies={expirationTime:0,firstContext:b,responders:null}}else pg=pg.next=b}return a._currentValue}var yg=!1;\nfunction zg(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ag(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Bg(a,b){return{expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Cg(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction Dg(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=zg(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=zg(a.memoizedState),e=c.updateQueue=zg(c.memoizedState)):d=a.updateQueue=Ag(e):null===e&&(e=c.updateQueue=Ag(d));null===e||d===e?Cg(d,b):null===d.lastUpdate||null===e.lastUpdate?(Cg(d,b),Cg(e,b)):(Cg(d,b),e.lastUpdate=b)}\nfunction Eg(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=zg(a.memoizedState):Fg(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function Fg(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Ag(b));return b}\nfunction Gg(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-4097|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:yg=!0}return d}\nfunction Hg(a,b,c,d,e){yg=!1;b=Fg(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(Ig(m,k.suspenseConfig),l=Gg(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var C=k.expirationTime;C<e?(null===m&&(m=k,null===g&&(f=l)),h<C&&(h=C)):(l=Gg(a,b,k,l,c,d),null!==\nk.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;Jg(h);a.expirationTime=h;a.memoizedState=l}\nfunction Kg(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);Lg(b.firstEffect,c);b.firstEffect=b.lastEffect=null;Lg(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function Lg(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;if(\"function\"!==typeof c)throw Error(u(191,c));c.call(d)}a=a.nextEffect}}\nvar Mg=Ea.ReactCurrentBatchConfig,Ng=(new aa.Component).refs;function Og(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Sg={isMounted:function(a){return(a=a._reactInternalFiber)?ec(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Pg(),d=Mg.suspense;\nc=Qg(c,a,d);d=Bg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);Dg(a,d);Rg(a,c)}};function Tg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!qf(c,d)||!qf(e,f):!0}\nfunction Ug(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=xg(f):(e=L(b)?Df:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Sg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Vg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Sg.enqueueReplaceState(b,b.state,null)}\nfunction Wg(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Ng;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=xg(f):(f=L(b)?Df:J.current,e.context=Ef(a,f));f=a.updateQueue;null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Og(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Sg.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Xg=Array.isArray;\nfunction Yg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ng&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\nfunction Zg(a,b){if(\"textarea\"!==a.type)throw Error(u(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\"));}\nfunction $g(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ah(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=bh(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Yg(a,b,c),d.return=a,d;d=ch(c.type,c.key,c.props,null,a.mode,d);d.ref=Yg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=dh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=eh(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function C(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=bh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Ga:return c=ch(b.type,b.key,b.props,null,a.mode,c),c.ref=Yg(a,null,b),c.return=a,c;case Ha:return b=dh(b,a.mode,c),b.return=a,b}if(Xg(b)||\nUa(b))return b=eh(b,a.mode,c,null),b.return=a,b;Zg(a,b)}return null}function y(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Ga:return c.key===e?c.type===Ia?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case Ha:return c.key===e?l(a,b,c,d):null}if(Xg(c)||Ua(c))return null!==e?null:m(a,b,c,d,null);Zg(a,c)}return null}function H(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Ga:return a=a.get(null===d.key?c:d.key)||null,d.type===Ia?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case Ha:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Xg(d)||Ua(d))return a=a.get(c)||null,m(b,a,d,e,null);Zg(b,d)}return null}function z(e,g,h,k){for(var l=null,m=null,r=g,x=g=0,A=null;null!==r&&x<h.length;x++){r.index>x?(A=r,r=null):A=r.sibling;var p=y(e,r,h[x],k);if(null===p){null===r&&(r=A);break}a&&\nr&&null===p.alternate&&b(e,r);g=f(p,g,x);null===m?l=p:m.sibling=p;m=p;r=A}if(x===h.length)return c(e,r),l;if(null===r){for(;x<h.length;x++)r=C(e,h[x],k),null!==r&&(g=f(r,g,x),null===m?l=r:m.sibling=r,m=r);return l}for(r=d(e,r);x<h.length;x++)A=H(r,e,x,h[x],k),null!==A&&(a&&null!==A.alternate&&r.delete(null===A.key?x:A.key),g=f(A,g,x),null===m?l=A:m.sibling=A,m=A);a&&r.forEach(function(a){return b(e,a)});return l}function ta(e,g,h,k){var l=Ua(h);if(\"function\"!==typeof l)throw Error(u(150));h=l.call(h);\nif(null==h)throw Error(u(151));for(var m=l=null,r=g,x=g=0,A=null,p=h.next();null!==r&&!p.done;x++,p=h.next()){r.index>x?(A=r,r=null):A=r.sibling;var z=y(e,r,p.value,k);if(null===z){null===r&&(r=A);break}a&&r&&null===z.alternate&&b(e,r);g=f(z,g,x);null===m?l=z:m.sibling=z;m=z;r=A}if(p.done)return c(e,r),l;if(null===r){for(;!p.done;x++,p=h.next())p=C(e,p.value,k),null!==p&&(g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);return l}for(r=d(e,r);!p.done;x++,p=h.next())p=H(r,e,x,p.value,k),null!==p&&(a&&null!==\np.alternate&&r.delete(null===p.key?x:p.key),g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);a&&r.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Ia&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Ga:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Ia:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Ia?f.props.children:f.props,h);d.ref=Yg(a,k,f);d.return=a;a=d;break a}else{c(a,\nk);break}else b(a,k);k=k.sibling}f.type===Ia?(d=eh(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=ch(f.type,f.key,f.props,null,a.mode,h),h.ref=Yg(a,d,f),h.return=a,a=h)}return g(a);case Ha:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=dh(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===\ntypeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=bh(f,a.mode,h),d.return=a,a=d),g(a);if(Xg(f))return z(a,d,f,h);if(Ua(f))return ta(a,d,f,h);l&&Zg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||\"Component\"));}return c(a,d)}}var fh=$g(!0),gh=$g(!1),hh={},ih={current:hh},jh={current:hh},kh={current:hh};function lh(a){if(a===hh)throw Error(u(174));return a}\nfunction mh(a,b){I(kh,b,a);I(jh,a,a);I(ih,hh,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Qb(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Qb(b,c)}G(ih,a);I(ih,b,a)}function nh(a){G(ih,a);G(jh,a);G(kh,a)}function oh(a){lh(kh.current);var b=lh(ih.current);var c=Qb(b,a.type);b!==c&&(I(jh,a,a),I(ih,c,a))}function ph(a){jh.current===a&&(G(ih,a),G(jh,a))}var M={current:0};\nfunction qh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===je||c.data===ke))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function rh(a,b){return{responder:a,props:b}}\nvar sh=Ea.ReactCurrentDispatcher,N=Ea.ReactCurrentBatchConfig,th=0,uh=null,O=null,vh=null,wh=null,P=null,xh=null,yh=0,zh=null,Ah=0,Bh=!1,Ch=null,Gh=0;function Q(){throw Error(u(321));}function Hh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!of(a[c],b[c]))return!1;return!0}\nfunction Ih(a,b,c,d,e,f){th=f;uh=b;vh=null!==a?a.memoizedState:null;sh.current=null===vh?Jh:Kh;b=c(d,e);if(Bh){do Bh=!1,Gh+=1,vh=null!==a?a.memoizedState:null,xh=wh,zh=P=O=null,sh.current=Kh,b=c(d,e);while(Bh);Ch=null;Gh=0}sh.current=Lh;a=uh;a.memoizedState=wh;a.expirationTime=yh;a.updateQueue=zh;a.effectTag|=Ah;a=null!==O&&null!==O.next;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;if(a)throw Error(u(300));return b}\nfunction Mh(){sh.current=Lh;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;Bh=!1;Ch=null;Gh=0}function Nh(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===P?wh=P=a:P=P.next=a;return P}function Oh(){if(null!==xh)P=xh,xh=P.next,O=vh,vh=null!==O?O.next:null;else{if(null===vh)throw Error(u(310));O=vh;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};P=null===P?wh=a:P.next=a;vh=O.next}return P}\nfunction Ph(a,b){return\"function\"===typeof b?b(a):b}\nfunction Qh(a){var b=Oh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;if(0<Gh){var d=c.dispatch;if(null!==Ch){var e=Ch.get(c);if(void 0!==e){Ch.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,k=d,l=!1;do{var m=k.expirationTime;m<th?(l||(l=!0,h=g,e=f),m>yh&&(yh=m,Jg(yh))):(Ig(m,k.suspenseConfig),f=k.eagerReducer===a?k.eagerState:a(f,k.action));g=k;k=k.next}while(null!==k&&k!==d);l||(h=g,e=f);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction Rh(a){var b=Nh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,lastRenderedReducer:Ph,lastRenderedState:a};a=a.dispatch=Sh.bind(null,uh,a);return[b.memoizedState,a]}function Th(a){return Qh(Ph,a)}function Uh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===zh?(zh={lastEffect:null},zh.lastEffect=a.next=a):(b=zh.lastEffect,null===b?zh.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,zh.lastEffect=a));return a}\nfunction Vh(a,b,c,d){var e=Nh();Ah|=a;e.memoizedState=Uh(b,c,void 0,void 0===d?null:d)}function Wh(a,b,c,d){var e=Oh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Hh(d,g.deps)){Uh(0,c,f,d);return}}Ah|=a;e.memoizedState=Uh(b,c,f,d)}function Xh(a,b){return Vh(516,192,a,b)}function Yh(a,b){return Wh(516,192,a,b)}\nfunction Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function $h(){}function ai(a,b){Nh().memoizedState=[a,void 0===b?null:b];return a}function bi(a,b){var c=Oh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Sh(a,b,c){if(!(25>Gh))throw Error(u(301));var d=a.alternate;if(a===uh||null!==d&&d===uh)if(Bh=!0,a={expirationTime:th,suspenseConfig:null,action:c,eagerReducer:null,eagerState:null,next:null},null===Ch&&(Ch=new Map),c=Ch.get(b),void 0===c)Ch.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{var e=Pg(),f=Mg.suspense;e=Qg(e,a,f);f={expirationTime:e,suspenseConfig:f,action:c,eagerReducer:null,eagerState:null,next:null};var g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&\n(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===d||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var k=b.lastRenderedState,l=d(k,c);f.eagerReducer=d;f.eagerState=l;if(of(l,k))return}catch(m){}finally{}Rg(a,e)}}\nvar Lh={readContext:xg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},Jh={readContext:xg,useCallback:ai,useContext:xg,useEffect:Xh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Vh(4,36,a,b)},useMemo:function(a,b){var c=Nh();b=void 0===b?null:b;a=a();c.memoizedState=\n[a,b];return a},useReducer:function(a,b,c){var d=Nh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Sh.bind(null,uh,a);return[d.memoizedState,a]},useRef:function(a){var b=Nh();a={current:a};return b.memoizedState=a},useState:Rh,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Rh(a),d=c[0],e=c[1];Xh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=\nc}})},[a,b]);return d},useTransition:function(a){var b=Rh(!1),c=b[0],d=b[1];return[ai(function(b){d(!0);q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},Kh={readContext:xg,useCallback:bi,useContext:xg,useEffect:Yh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Wh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Wh(4,36,a,b)},useMemo:function(a,b){var c=Oh();b=void 0===b?\nnull:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:Qh,useRef:function(){return Oh().memoizedState},useState:Th,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Th(a),d=c[0],e=c[1];Yh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=c}})},[a,b]);return d},useTransition:function(a){var b=Th(!1),c=b[0],d=b[1];return[bi(function(b){d(!0);q.unstable_next(function(){var c=\nN.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},ci=null,di=null,ei=!1;function fi(a,b){var c=gi(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction hi(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ii(a){if(ei){var b=di;if(b){var c=b;if(!hi(a,b)){b=re(c.nextSibling);if(!b||!hi(a,b)){a.effectTag=a.effectTag&-1025|2;ei=!1;ci=a;return}fi(ci,c)}ci=a;di=re(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,ei=!1,ci=a}}function ji(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;ci=a}\nfunction ki(a){if(a!==ci)return!1;if(!ei)return ji(a),ei=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!oe(b,a.memoizedProps))for(b=di;b;)fi(a,b),b=re(b.nextSibling);ji(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===ie){if(0===b){di=re(a.nextSibling);break a}b--}else c!==he&&c!==ke&&c!==je||b++}a=a.nextSibling}di=null}}else di=ci?re(a.stateNode.nextSibling):null;return!0}\nfunction li(){di=ci=null;ei=!1}var mi=Ea.ReactCurrentOwner,wg=!1;function R(a,b,c,d){b.child=null===a?gh(b,null,c,d):fh(b,a.child,c,d)}function ni(a,b,c,d,e){c=c.render;var f=b.ref;vg(b,e);d=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\nfunction pi(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!qi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ri(a,b,g,d,e,f);a=ch(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:qf,c(e,d)&&a.ref===b.ref))return oi(a,b,f);b.effectTag|=1;a=ah(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ri(a,b,c,d,e,f){return null!==a&&qf(a.memoizedProps,d)&&a.ref===b.ref&&(wg=!1,e<f)?oi(a,b,f):si(a,b,c,d,f)}function ti(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function si(a,b,c,d,e){var f=L(c)?Df:J.current;f=Ef(b,f);vg(b,e);c=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\nfunction ui(a,b,c,d,e){if(L(c)){var f=!0;Jf(b)}else f=!1;vg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Ug(b,c,d,e),Wg(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l));var m=c.getDerivedStateFromProps,C=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;C||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l);yg=!1;var y=b.memoizedState;k=g.state=y;var H=b.updateQueue;null!==H&&(Hg(b,H,d,g,e),k=b.memoizedState);h!==d||y!==k||K.current||yg?(\"function\"===typeof m&&(Og(b,c,m,d),k=b.memoizedState),(h=yg||Tg(b,c,h,d,y,k,l))?(C||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:mg(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l)),m=c.getDerivedStateFromProps,(C=\n\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l),yg=!1,k=b.memoizedState,y=g.state=k,H=b.updateQueue,null!==H&&(Hg(b,H,d,g,e),y=b.memoizedState),h!==d||k!==y||K.current||yg?(\"function\"===typeof m&&(Og(b,c,m,d),y=b.memoizedState),(m=yg||Tg(b,c,h,d,k,y,l))?(C||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,y,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,y,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=y),g.props=d,g.state=y,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return vi(a,b,c,d,f,e)}\nfunction vi(a,b,c,d,e,f){ti(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Kf(b,c,!1),oi(a,b,f);d=b.stateNode;mi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=fh(b,a.child,null,f),b.child=fh(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function wi(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);mh(a,b.containerInfo)}\nvar xi={dehydrated:null,retryTime:0};\nfunction yi(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1,b);if(null===a){void 0!==e.fallback&&ii(b);if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=\nb;e.sibling=c;b.memoizedState=xi;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=gh(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=ah(a,a.pendingProps,0);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=ah(d,e,d.expirationTime);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=xi;b.child=c;return d}c=fh(b,a.child,e.children,c);b.memoizedState=\nnull;return b.child=c}a=a.child;if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=xi;b.child=e;return c}b.memoizedState=null;return b.child=fh(b,a,e.children,c)}\nfunction zi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);ug(a.return,b)}function Ai(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\nfunction Bi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&zi(a,c);else if(19===a.tag)zi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d,b);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===qh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Ai(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===qh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}Ai(b,!0,c,null,f,b.lastEffect);break;case \"together\":Ai(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction oi(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Jg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=ah(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ah(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}function Ci(a){a.effectTag|=4}var Hi,Ii,Ji,Ki;\nHi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ii=function(){};\nJi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;lh(ih.current);a=null;switch(c){case \"input\":f=Ab(g,f);d=Ab(g,d);a=[];break;case \"option\":f=Ib(g,f);d=Ib(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=Kb(g,f);d=Kb(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ae)}Yd(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if(\"style\"===\nh)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]=\"\");else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ia.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if(\"style\"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]=\"\");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\nc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,\"\"+l)):\"children\"===h?g===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(ia.hasOwnProperty(h)?(null!=l&&$d(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push(\"style\",c);e=a;(b.updateQueue=e)&&Ci(b)}};Ki=function(a,b,c,d){c!==d&&Ci(b)};\nfunction Li(a,b){switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Mi(a){switch(a.tag){case 1:L(a.type)&&Ff(a);var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:nh(a);Gf(a);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return ph(a),null;case 13:return G(M,a),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return G(M,a),null;case 4:return nh(a),null;case 10:return tg(a),null;default:return null}}function Ni(a,b){return{value:a,source:b,stack:Xa(b)}}\nvar Oi=\"function\"===typeof WeakSet?WeakSet:Set;function Pi(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=Xa(c));null!==c&&Wa(c.type);b=b.value;null!==a&&1===a.tag&&Wa(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Qi(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ri(a,c)}}function Si(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Ri(a,c)}else b.current=null}\nfunction Ti(a,b){switch(b.tag){case 0:case 11:case 15:Ui(2,0,b);break;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:mg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(u(163));}}\nfunction Ui(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if(0!==(d.tag&a)){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}0!==(d.tag&b)&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction Vi(a,b,c){\"function\"===typeof Wi&&Wi(b);switch(b.tag){case 0:case 11:case 14:case 15:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;fg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ri(g,h)}}a=a.next}while(a!==d)})}break;case 1:Si(b);c=b.stateNode;\"function\"===typeof c.componentWillUnmount&&Qi(b,c);break;case 5:Si(b);break;case 4:Xi(a,b,c)}}\nfunction Yi(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;null!==b&&Yi(b)}function Zi(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction $i(a){a:{for(var b=a.return;null!==b;){if(Zi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Tb(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Zi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){var f=5===e.tag||6===e.tag;if(f){var g=f?e.stateNode:e.stateNode.instance;if(c)if(d){f=b;var h=g;g=c;8===f.nodeType?f.parentNode.insertBefore(h,g):f.insertBefore(h,g)}else b.insertBefore(g,c);else d?(h=b,8===h.nodeType?(f=h.parentNode,f.insertBefore(g,h)):(f=h,f.appendChild(g)),h=h._reactRootContainer,null!==h&&void 0!==h||null!==f.onclick||(f.onclick=ae)):b.appendChild(g)}else if(4!==\ne.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Xi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Vi(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\nf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Vi(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\nfunction aj(a,b){switch(b.tag){case 0:case 11:case 14:case 15:Ui(4,8,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[ve]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cb(c,d);Zd(a,e);b=Zd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?Wd(c,h):\"dangerouslySetInnerHTML\"===g?Sb(c,h):\"children\"===g?Tb(c,h):vb(c,g,h,b)}switch(a){case \"input\":Eb(c,d);break;case \"textarea\":Mb(c,\nd);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Jb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Jb(c,!!d.multiple,d.defaultValue,!0):Jb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;break;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Lc(b.containerInfo));break;case 12:break;case 13:c=b;null===b.memoizedState?d=!1:(d=!0,c=b.child,bj=cg());\nif(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null,f.style.display=Vd(\"display\",e));else if(6===a.tag)a.stateNode.nodeValue=d?\"\":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=f;continue}else if(null!==a.child){a.child.return=\na;a=a.child;continue}if(a===c)break a;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}cj(b);break;case 19:cj(b);break;case 17:break;case 20:break;case 21:break;default:throw Error(u(163));}}function cj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Oi);b.forEach(function(b){var d=dj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}var ej=\"function\"===typeof WeakMap?WeakMap:Map;\nfunction fj(a,b,c){c=Bg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gj||(gj=!0,hj=d);Pi(a,b)};return c}\nfunction ij(a,b,c){c=Bg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Pi(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===jj?jj=new Set([this]):jj.add(this),Pi(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nvar kj=Math.ceil,lj=Ea.ReactCurrentDispatcher,mj=Ea.ReactCurrentOwner,S=0,nj=8,oj=16,pj=32,qj=0,rj=1,sj=2,tj=3,uj=4,vj=5,T=S,U=null,V=null,W=0,X=qj,wj=null,xj=1073741823,yj=1073741823,zj=null,Aj=0,Bj=!1,bj=0,Cj=500,Y=null,gj=!1,hj=null,jj=null,Dj=!1,Ej=null,Fj=90,Gj=null,Hj=0,Ij=null,Jj=0;function Pg(){return(T&(oj|pj))!==S?1073741821-(cg()/10|0):0!==Jj?Jj:Jj=1073741821-(cg()/10|0)}\nfunction Qg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=dg();if(0===(b&4))return 99===d?1073741823:1073741822;if((T&oj)!==S)return W;if(null!==c)a=lg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=lg(a,150,100);break;case 97:case 96:a=lg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==U&&a===W&&--a;return a}\nfunction Rg(a,b){if(50<Hj)throw Hj=0,Ij=null,Error(u(185));a=Kj(a,b);if(null!==a){var c=dg();1073741823===b?(T&nj)!==S&&(T&(oj|pj))===S?Lj(a):(Z(a),T===S&&jg()):Z(a);(T&4)===S||98!==c&&99!==c||(null===Gj?Gj=new Map([[a,b]]):(c=Gj.get(a),(void 0===c||c>b)&&Gj.set(a,b)))}}\nfunction Kj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(U===e&&(Jg(b),X===uj&&Mj(e,W)),Nj(e,b));return e}\nfunction Oj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Pj(a,b))return b;b=a.lastPingedTime;a=a.nextKnownPendingLevel;return b>a?b:a}\nfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=hg(Lj.bind(null,a));else{var b=Oj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Pg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Xf&&Nf(c)}a.callbackExpirationTime=\nb;a.callbackPriority=d;b=1073741823===b?hg(Lj.bind(null,a)):gg(d,Qj.bind(null,a),{timeout:10*(1073741821-b)-cg()});a.callbackNode=b}}}\nfunction Qj(a,b){Jj=0;if(b)return b=Pg(),Rj(a,b),Z(a),null;var c=Oj(a);if(0!==c){b=a.callbackNode;if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&c===W||Tj(a,c);if(null!==V){var d=T;T|=oj;var e=Uj(a);do try{Vj();break}catch(h){Wj(a,h)}while(1);rg();T=d;lj.current=e;if(X===rj)throw b=wj,Tj(a,c),Mj(a,c),Z(a),b;if(null===V)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=X,U=null,d){case qj:case rj:throw Error(u(345));case sj:Rj(a,2<c?2:c);break;case tj:Mj(a,c);d=a.lastSuspendedTime;\nc===d&&(a.nextKnownPendingLevel=Xj(e));if(1073741823===xj&&(e=bj+Cj-cg(),10<e)){if(Bj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Tj(a,c);break}}f=Oj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=pe(Yj.bind(null,a),e);break}Yj(a);break;case uj:Mj(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Xj(e));if(Bj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Tj(a,c);break}e=Oj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\nd;break}1073741823!==yj?d=10*(1073741821-yj)-cg():1073741823===xj?d=0:(d=10*(1073741821-xj)-5E3,e=cg(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*kj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=pe(Yj.bind(null,a),d);break}Yj(a);break;case vj:if(1073741823!==xj&&null!==zj){f=xj;var g=zj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=cg()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){Mj(a,c);a.timeoutHandle=\npe(Yj.bind(null,a),d);break}}Yj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Qj.bind(null,a)}}return null}\nfunction Lj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if(a.finishedExpirationTime===b)Yj(a);else{if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&b===W||Tj(a,b);if(null!==V){var c=T;T|=oj;var d=Uj(a);do try{Zj();break}catch(e){Wj(a,e)}while(1);rg();T=c;lj.current=d;if(X===rj)throw c=wj,Tj(a,b),Mj(a,b),Z(a),c;if(null!==V)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;U=null;Yj(a);Z(a)}}return null}\nfunction ak(){if(null!==Gj){var a=Gj;Gj=null;a.forEach(function(a,c){Rj(c,a);Z(c)});jg()}}function bk(a,b){var c=T;T|=1;try{return a(b)}finally{T=c,T===S&&jg()}}function ck(a,b){var c=T;T&=-2;T|=nj;try{return a(b)}finally{T=c,T===S&&jg()}}\nfunction Tj(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,qe(c));if(null!==V)for(c=V.return;null!==c;){var d=c;switch(d.tag){case 1:var e=d.type.childContextTypes;null!==e&&void 0!==e&&Ff(d);break;case 3:nh(d);Gf(d);break;case 5:ph(d);break;case 4:nh(d);break;case 13:G(M,d);break;case 19:G(M,d);break;case 10:tg(d)}c=c.return}U=a;V=ah(a.current,null,b);W=b;X=qj;wj=null;yj=xj=1073741823;zj=null;Aj=0;Bj=!1}\nfunction Wj(a,b){do{try{rg();Mh();if(null===V||null===V.return)return X=rj,wj=b,null;a:{var c=a,d=V.return,e=V,f=b;b=W;e.effectTag|=2048;e.firstEffect=e.lastEffect=null;if(null!==f&&\"object\"===typeof f&&\"function\"===typeof f.then){var g=f,h=0!==(M.current&1),k=d;do{var l;if(l=13===k.tag){var m=k.memoizedState;if(null!==m)l=null!==m.dehydrated?!0:!1;else{var C=k.memoizedProps;l=void 0===C.fallback?!1:!0!==C.unstable_avoidThisFallback?!0:h?!1:!0}}if(l){var y=k.updateQueue;if(null===y){var H=new Set;\nH.add(g);k.updateQueue=H}else y.add(g);if(0===(k.mode&2)){k.effectTag|=64;e.effectTag&=-2981;if(1===e.tag)if(null===e.alternate)e.tag=17;else{var z=Bg(1073741823,null);z.tag=2;Dg(e,z)}e.expirationTime=1073741823;break a}f=void 0;e=b;var ta=c.pingCache;null===ta?(ta=c.pingCache=new ej,f=new Set,ta.set(g,f)):(f=ta.get(g),void 0===f&&(f=new Set,ta.set(g,f)));if(!f.has(e)){f.add(e);var r=dk.bind(null,c,g,e);g.then(r,r)}k.effectTag|=4096;k.expirationTime=b;break a}k=k.return}while(null!==k);f=Error((Wa(e.type)||\n\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+Xa(e))}X!==vj&&(X=sj);f=Ni(f,e);k=d;do{switch(k.tag){case 3:g=f;k.effectTag|=4096;k.expirationTime=b;var x=fj(k,g,b);Eg(k,x);break a;case 1:g=f;var A=k.type,p=k.stateNode;if(0===(k.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==p&&\"function\"===typeof p.componentDidCatch&&\n(null===jj||!jj.has(p)))){k.effectTag|=4096;k.expirationTime=b;var t=ij(k,g,b);Eg(k,t);break a}}k=k.return}while(null!==k)}V=ek(V)}catch(v){b=v;continue}break}while(1)}function Uj(){var a=lj.current;lj.current=Lh;return null===a?Lh:a}function Ig(a,b){a<xj&&2<a&&(xj=a);null!==b&&a<yj&&2<a&&(yj=a,zj=b)}function Jg(a){a>Aj&&(Aj=a)}function Zj(){for(;null!==V;)V=fk(V)}function Vj(){for(;null!==V&&!Of();)V=fk(V)}\nfunction fk(a){var b=gk(a.alternate,a,W);a.memoizedProps=a.pendingProps;null===b&&(b=ek(a));mj.current=null;return b}\nfunction ek(a){V=a;do{var b=V.alternate;a=V.return;if(0===(V.effectTag&2048)){a:{var c=b;b=V;var d=W;var e=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:L(b.type)&&Ff(b);break;case 3:nh(b);Gf(b);e=b.stateNode;e.pendingContext&&(e.context=e.pendingContext,e.pendingContext=null);(null===c||null===c.child)&&ki(b)&&Ci(b);Ii(b);break;case 5:ph(b);d=lh(kh.current);var f=b.type;if(null!==c&&null!=b.stateNode)Ji(c,b,f,e,d),c.ref!==b.ref&&(b.effectTag|=128);else if(e){var g=\nlh(ih.current);if(ki(b)){e=b;var h=e.stateNode;c=e.type;var k=e.memoizedProps,l=d;h[ue]=e;h[ve]=k;f=void 0;d=h;switch(c){case \"iframe\":case \"object\":case \"embed\":F(\"load\",d);break;case \"video\":case \"audio\":for(h=0;h<dc.length;h++)F(dc[h],d);break;case \"source\":F(\"error\",d);break;case \"img\":case \"image\":case \"link\":F(\"error\",d);F(\"load\",d);break;case \"form\":F(\"reset\",d);F(\"submit\",d);break;case \"details\":F(\"toggle\",d);break;case \"input\":Bb(d,k);F(\"invalid\",d);$d(l,\"onChange\");break;case \"select\":d._wrapperState=\n{wasMultiple:!!k.multiple};F(\"invalid\",d);$d(l,\"onChange\");break;case \"textarea\":Lb(d,k),F(\"invalid\",d),$d(l,\"onChange\")}Yd(c,k);h=null;for(f in k)k.hasOwnProperty(f)&&(g=k[f],\"children\"===f?\"string\"===typeof g?d.textContent!==g&&(h=[\"children\",g]):\"number\"===typeof g&&d.textContent!==\"\"+g&&(h=[\"children\",\"\"+g]):ia.hasOwnProperty(f)&&null!=g&&$d(l,f));switch(c){case \"input\":yb(d);Gb(d,k,!0);break;case \"textarea\":yb(d);Nb(d,k);break;case \"select\":case \"option\":break;default:\"function\"===typeof k.onClick&&\n(d.onclick=ae)}f=h;e.updateQueue=f;e=null!==f?!0:!1;e&&Ci(b)}else{c=b;l=f;k=e;h=9===d.nodeType?d:d.ownerDocument;g===Ob.html&&(g=Pb(l));g===Ob.html?\"script\"===l?(k=h.createElement(\"div\"),k.innerHTML=\"<script>\\x3c/script>\",h=k.removeChild(k.firstChild)):\"string\"===typeof k.is?h=h.createElement(l,{is:k.is}):(h=h.createElement(l),\"select\"===l&&(l=h,k.multiple?l.multiple=!0:k.size&&(l.size=k.size))):h=h.createElementNS(g,l);k=h;k[ue]=c;k[ve]=e;Hi(k,b,!1,!1);b.stateNode=k;l=f;c=e;var m=d,C=Zd(l,c);switch(l){case \"iframe\":case \"object\":case \"embed\":F(\"load\",\nk);d=c;break;case \"video\":case \"audio\":for(d=0;d<dc.length;d++)F(dc[d],k);d=c;break;case \"source\":F(\"error\",k);d=c;break;case \"img\":case \"image\":case \"link\":F(\"error\",k);F(\"load\",k);d=c;break;case \"form\":F(\"reset\",k);F(\"submit\",k);d=c;break;case \"details\":F(\"toggle\",k);d=c;break;case \"input\":Bb(k,c);d=Ab(k,c);F(\"invalid\",k);$d(m,\"onChange\");break;case \"option\":d=Ib(k,c);break;case \"select\":k._wrapperState={wasMultiple:!!c.multiple};d=n({},c,{value:void 0});F(\"invalid\",k);$d(m,\"onChange\");break;case \"textarea\":Lb(k,\nc);d=Kb(k,c);F(\"invalid\",k);$d(m,\"onChange\");break;default:d=c}Yd(l,d);h=void 0;g=l;var y=k,H=d;for(h in H)if(H.hasOwnProperty(h)){var z=H[h];\"style\"===h?Wd(y,z):\"dangerouslySetInnerHTML\"===h?(z=z?z.__html:void 0,null!=z&&Sb(y,z)):\"children\"===h?\"string\"===typeof z?(\"textarea\"!==g||\"\"!==z)&&Tb(y,z):\"number\"===typeof z&&Tb(y,\"\"+z):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ia.hasOwnProperty(h)?null!=z&&$d(m,h):null!=z&&vb(y,h,z,C))}switch(l){case \"input\":yb(k);\nGb(k,c,!1);break;case \"textarea\":yb(k);Nb(k,c);break;case \"option\":null!=c.value&&k.setAttribute(\"value\",\"\"+ub(c.value));break;case \"select\":d=k;d.multiple=!!c.multiple;k=c.value;null!=k?Jb(d,!!c.multiple,k,!1):null!=c.defaultValue&&Jb(d,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof d.onClick&&(k.onclick=ae)}(e=ne(f,e))&&Ci(b)}null!==b.ref&&(b.effectTag|=128)}else if(null===b.stateNode)throw Error(u(166));break;case 6:if(c&&null!=b.stateNode)Ki(c,b,c.memoizedProps,e);else{if(\"string\"!==\ntypeof e&&null===b.stateNode)throw Error(u(166));d=lh(kh.current);lh(ih.current);ki(b)?(e=b,f=e.stateNode,d=e.memoizedProps,f[ue]=e,(e=f.nodeValue!==d)&&Ci(b)):(f=b,e=(9===d.nodeType?d:d.ownerDocument).createTextNode(e),e[ue]=f,b.stateNode=e)}break;case 11:break;case 13:G(M,b);e=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=d;break a}e=null!==e;f=!1;null===c?void 0!==b.memoizedProps.fallback&&ki(b):(d=c.memoizedState,f=null!==d,e||null===d||(d=c.child.sibling,null!==d&&(k=b.firstEffect,\nnull!==k?(b.firstEffect=d,d.nextEffect=k):(b.firstEffect=b.lastEffect=d,d.nextEffect=null),d.effectTag=8)));if(e&&!f&&0!==(b.mode&2))if(null===c&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))X===qj&&(X=tj);else{if(X===qj||X===tj)X=uj;0!==Aj&&null!==U&&(Mj(U,W),Nj(U,Aj))}if(e||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:nh(b);Ii(b);break;case 10:tg(b);break;case 9:break;case 14:break;case 17:L(b.type)&&Ff(b);break;case 19:G(M,b);e=b.memoizedState;if(null===\ne)break;f=0!==(b.effectTag&64);k=e.rendering;if(null===k)if(f)Li(e,!1);else{if(X!==qj||null!==c&&0!==(c.effectTag&64))for(c=b.child;null!==c;){k=qh(c);if(null!==k){b.effectTag|=64;Li(e,!1);f=k.updateQueue;null!==f&&(b.updateQueue=f,b.effectTag|=4);null===e.lastEffect&&(b.firstEffect=null);b.lastEffect=e.lastEffect;e=d;for(f=b.child;null!==f;)d=f,c=e,d.effectTag&=2,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null,k=d.alternate,null===k?(d.childExpirationTime=0,d.expirationTime=c,d.child=null,\nd.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null):(d.childExpirationTime=k.childExpirationTime,d.expirationTime=k.expirationTime,d.child=k.child,d.memoizedProps=k.memoizedProps,d.memoizedState=k.memoizedState,d.updateQueue=k.updateQueue,c=k.dependencies,d.dependencies=null===c?null:{expirationTime:c.expirationTime,firstContext:c.firstContext,responders:c.responders}),f=f.sibling;I(M,M.current&1|2,b);b=b.child;break a}c=c.sibling}}else{if(!f)if(c=qh(k),null!==c){if(b.effectTag|=\n64,f=!0,d=c.updateQueue,null!==d&&(b.updateQueue=d,b.effectTag|=4),Li(e,!0),null===e.tail&&\"hidden\"===e.tailMode){b=b.lastEffect=e.lastEffect;null!==b&&(b.nextEffect=null);break}}else cg()>e.tailExpiration&&1<d&&(b.effectTag|=64,f=!0,Li(e,!1),b.expirationTime=b.childExpirationTime=d-1);e.isBackwards?(k.sibling=b.child,b.child=k):(d=e.last,null!==d?d.sibling=k:b.child=k,e.last=k)}if(null!==e.tail){0===e.tailExpiration&&(e.tailExpiration=cg()+500);d=e.tail;e.rendering=d;e.tail=d.sibling;e.lastEffect=\nb.lastEffect;d.sibling=null;e=M.current;e=f?e&1|2:e&1;I(M,e,b);b=d;break a}break;case 20:break;case 21:break;default:throw Error(u(156,b.tag));}b=null}e=V;if(1===W||1!==e.childExpirationTime){f=0;for(d=e.child;null!==d;)c=d.expirationTime,k=d.childExpirationTime,c>f&&(f=c),k>f&&(f=k),d=d.sibling;e.childExpirationTime=f}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=V.firstEffect),null!==V.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=V.firstEffect),\na.lastEffect=V.lastEffect),1<V.effectTag&&(null!==a.lastEffect?a.lastEffect.nextEffect=V:a.firstEffect=V,a.lastEffect=V))}else{b=Mi(V,W);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=V.sibling;if(null!==b)return b;V=a}while(null!==V);X===qj&&(X=vj);return null}function Xj(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Yj(a){var b=dg();fg(99,ik.bind(null,a,b));return null}\nfunction ik(a,b){Sj();if((T&(oj|pj))!==S)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Xj(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=d-1);d<=a.lastPingedTime&&\n(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===U&&(V=U=null,W=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=T;T|=pj;mj.current=null;le=Ld;var g=fe();if(ge(g)){if(\"selectionStart\"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,m=k.focusNode;k=k.focusOffset;\ntry{h.nodeType,m.nodeType}catch(Db){h=null;break a}var C=0,y=-1,H=-1,z=0,ta=0,r=g,x=null;b:for(;;){for(var A;;){r!==h||0!==l&&3!==r.nodeType||(y=C+l);r!==m||0!==k&&3!==r.nodeType||(H=C+k);3===r.nodeType&&(C+=r.nodeValue.length);if(null===(A=r.firstChild))break;x=r;r=A}for(;;){if(r===g)break b;x===h&&++z===l&&(y=C);x===m&&++ta===k&&(H=C);if(null!==(A=r.nextSibling))break;r=x;x=r.parentNode}r=A}h=-1===y||-1===H?null:{start:y,end:H}}else h=null}h=h||{start:0,end:0}}else h=null;me={focusedElem:g,selectionRange:h};\nLd=!1;Y=e;do try{jk()}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var p=Y.effectTag;p&16&&Tb(Y.stateNode,\"\");if(p&128){var t=Y.alternate;if(null!==t){var v=t.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(p&1038){case 2:$i(Y);Y.effectTag&=-3;break;case 6:$i(Y);Y.effectTag&=-3;aj(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=-1025;aj(Y.alternate,Y);break;case 4:aj(Y.alternate,\nY);break;case 8:l=Y,Xi(g,l,h),Yi(l)}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);v=me;t=fe();p=v.focusedElem;h=v.selectionRange;if(t!==p&&p&&p.ownerDocument&&ee(p.ownerDocument.documentElement,p)){null!==h&&ge(p)&&(t=h.start,v=h.end,void 0===v&&(v=t),\"selectionStart\"in p?(p.selectionStart=t,p.selectionEnd=Math.min(v,p.value.length)):(v=(t=p.ownerDocument||document)&&t.defaultView||window,v.getSelection&&(v=v.getSelection(),l=p.textContent.length,\ng=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!v.extend&&g>h&&(l=h,h=g,g=l),l=de(p,g),m=de(p,h),l&&m&&(1!==v.rangeCount||v.anchorNode!==l.node||v.anchorOffset!==l.offset||v.focusNode!==m.node||v.focusOffset!==m.offset)&&(t=t.createRange(),t.setStart(l.node,l.offset),v.removeAllRanges(),g>h?(v.addRange(t),v.extend(m.node,m.offset)):(t.setEnd(m.node,m.offset),v.addRange(t))))));t=[];for(v=p;v=v.parentNode;)1===v.nodeType&&t.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===\ntypeof p.focus&&p.focus();for(p=0;p<t.length;p++)v=t[p],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}me=null;Ld=!!le;le=null;a.current=c;Y=e;do try{for(p=d;null!==Y;){var Dh=Y.effectTag;if(Dh&36){var cc=Y.alternate;t=Y;v=p;switch(t.tag){case 0:case 11:case 15:Ui(16,32,t);break;case 1:var dd=t.stateNode;if(t.effectTag&4)if(null===cc)dd.componentDidMount();else{var hk=t.elementType===t.type?cc.memoizedProps:mg(t.type,cc.memoizedProps);dd.componentDidUpdate(hk,cc.memoizedState,dd.__reactInternalSnapshotBeforeUpdate)}var Eh=\nt.updateQueue;null!==Eh&&Kg(t,Eh,dd,v);break;case 3:var Fh=t.updateQueue;if(null!==Fh){g=null;if(null!==t.child)switch(t.child.tag){case 5:g=t.child.stateNode;break;case 1:g=t.child.stateNode}Kg(t,Fh,g,v)}break;case 5:var xk=t.stateNode;null===cc&&t.effectTag&4&&ne(t.type,t.memoizedProps)&&xk.focus();break;case 6:break;case 4:break;case 12:break;case 13:if(null===t.memoizedState){var Di=t.alternate;if(null!==Di){var Ei=Di.memoizedState;if(null!==Ei){var Fi=Ei.dehydrated;null!==Fi&&Lc(Fi)}}}break;\ncase 19:case 17:case 20:case 21:break;default:throw Error(u(163));}}if(Dh&128){t=void 0;var wd=Y.ref;if(null!==wd){var Gi=Y.stateNode;switch(Y.tag){case 5:t=Gi;break;default:t=Gi}\"function\"===typeof wd?wd(t):wd.current=t}}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=null;Yf();T=f}else a.current=c;if(Dj)Dj=!1,Ej=a,Fj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(jj=null);1073741823===b?a===Ij?Hj++:(Hj=\n0,Ij=a):Hj=0;\"function\"===typeof kk&&kk(c.stateNode,d);Z(a);if(gj)throw gj=!1,a=hj,hj=null,a;if((T&nj)!==S)return null;jg();return null}function jk(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Ti(Y.alternate,Y);0===(a&512)||Dj||(Dj=!0,gg(97,function(){Sj();return null}));Y=Y.nextEffect}}function Sj(){if(90!==Fj){var a=97<Fj?97:Fj;Fj=90;return fg(a,lk)}}\nfunction lk(){if(null===Ej)return!1;var a=Ej;Ej=null;if((T&(oj|pj))!==S)throw Error(u(331));var b=T;T|=pj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:Ui(128,0,c),Ui(0,64,c)}}catch(d){if(null===a)throw Error(u(330));Ri(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}T=b;jg();return!0}function mk(a,b,c){b=Ni(c,b);b=fj(a,b,1073741823);Dg(a,b);a=Kj(a,1073741823);null!==a&&Z(a)}\nfunction Ri(a,b){if(3===a.tag)mk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){mk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===jj||!jj.has(d))){a=Ni(b,a);a=ij(c,a,1073741823);Dg(c,a);c=Kj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\nfunction dk(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);U===a&&W===c?X===uj||X===tj&&1073741823===xj&&cg()-bj<Cj?Tj(a,W):Bj=!0:Pj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,a.finishedExpirationTime===c&&(a.finishedExpirationTime=0,a.finishedWork=null),Z(a)))}function dj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Pg(),b=Qg(b,a,null));a=Kj(a,b);null!==a&&Z(a)}var gk;\ngk=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)wg=!0;else{if(d<c){wg=!1;switch(b.tag){case 3:wi(b);li();break;case 5:oh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Jf(b);break;case 4:mh(b,b.stateNode.containerInfo);break;case 10:sg(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return yi(a,b,c);I(M,M.current&\n1,b);b=oi(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1,b);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return Bi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current,b);if(!d)return null}return oi(a,b,c)}wg=!1}}else wg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Ef(b,J.current);vg(b,c);e=Ih(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;Mh();if(L(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Og(b,d,g,a);e.updater=Sg;b.stateNode=e;e._reactInternalFiber=b;Wg(b,d,a,c);b=vi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;Va(e);if(1!==e._status)throw e._result;\ne=e._result;b.type=e;f=b.tag=nk(e);a=mg(e,a);switch(f){case 0:b=si(null,b,e,a,c);break;case 1:b=ui(null,b,e,a,c);break;case 11:b=ni(null,b,e,a,c);break;case 14:b=pi(null,b,e,mg(e.type,a),d,c);break;default:throw Error(u(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),si(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ui(a,b,d,e,c);case 3:wi(b);d=b.updateQueue;if(null===d)throw Error(u(282));e=b.memoizedState;e=null!==e?e.element:\nnull;Hg(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)li(),b=oi(a,b,c);else{if(e=b.stateNode.hydrate)di=re(b.stateNode.containerInfo.firstChild),ci=b,e=ei=!0;if(e)for(c=gh(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),li();b=b.child}return b;case 5:return oh(b),null===a&&ii(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,oe(d,e)?g=null:null!==f&&oe(d,f)&&(b.effectTag|=16),ti(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=\nb.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&ii(b),null;case 13:return yi(a,b,c);case 4:return mh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=fh(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ni(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;\ne=b.pendingProps;g=b.memoizedProps;f=e.value;sg(b,f);if(null!==g){var h=g.value;f=of(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!K.current){b=oi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=Bg(c,null),l.tag=2,Dg(h,l));h.expirationTime<c&&(h.expirationTime=\nc);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);ug(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,vg(b,c),e=xg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;\ncase 14:return e=b.type,f=mg(e,b.pendingProps),f=mg(e.type,f),pi(a,b,e,f,d,c);case 15:return ri(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Jf(b)):a=!1,vg(b,c),Ug(b,d,e,c),Wg(b,d,e,c),vi(null,b,d,!0,a,c);case 19:return Bi(a,b,c)}throw Error(u(156,b.tag));};var kk=null,Wi=null;\nfunction ok(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);kk=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Wi=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\nfunction pk(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function gi(a,b,c,d){return new pk(a,b,c,d)}\nfunction qi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function nk(a){if(\"function\"===typeof a)return qi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Oa)return 11;if(a===Ra)return 14}return 2}\nfunction ah(a,b){var c=a.alternate;null===c?(c=gi(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\nfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction ch(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)qi(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Ia:return eh(c.children,e,f,b);case Na:g=8;e|=7;break;case Ja:g=8;e|=1;break;case Ka:return a=gi(12,c,b,e|8),a.elementType=Ka,a.type=Ka,a.expirationTime=f,a;case Pa:return a=gi(13,c,b,e),a.type=Pa,a.elementType=Pa,a.expirationTime=f,a;case Qa:return a=gi(19,c,b,e),a.elementType=Qa,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case La:g=\n10;break a;case Ma:g=9;break a;case Oa:g=11;break a;case Ra:g=14;break a;case Sa:g=16;d=null;break a}throw Error(u(130,null==a?a:typeof a,\"\"));}b=gi(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function eh(a,b,c,d){a=gi(7,a,d,b);a.expirationTime=c;return a}function bh(a,b,c){a=gi(6,a,null,b);a.expirationTime=c;return a}\nfunction dh(a,b,c){b=gi(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction qk(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\nfunction Pj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function Mj(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\nfunction Nj(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Rj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\nfunction rk(a,b,c,d){var e=b.current,f=Pg(),g=Mg.suspense;f=Qg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(ec(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=Bg(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);Dg(e,b);Rg(e,f);return f}function sk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function tk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function uk(a,b){tk(a,b);(a=a.alternate)&&tk(a,b)}\nfunction vk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ha,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}jc=function(a){if(13===a.tag){var b=lg(Pg(),150,100);Rg(a,b);uk(a,b)}};kc=function(a){if(13===a.tag){Pg();var b=kg++;Rg(a,b);uk(a,b)}};lc=function(a){if(13===a.tag){var b=Pg();b=Qg(b,a,null);Rg(a,b);uk(a,b)}};\nZa=function(a,b,c){switch(b){case \"input\":Eb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=ye(d);if(!e)throw Error(u(90));zb(d);Eb(d,e)}}}break;case \"textarea\":Mb(a,c);break;case \"select\":b=c.value,null!=b&&Jb(a,!!c.multiple,b,!1)}};\nfunction wk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new qk(a,b,c),e=gi(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;a[we]=d.current;c&&0!==b&&wc(9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}wk.prototype.render=function(a,b){var c=this._internalRoot;rk(a,c,null,void 0===b?null:b)};wk.prototype.unmount=function(a){var b=this._internalRoot;rk(null,b,null,void 0===a?null:a)};\nfunction yk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}eb=bk;fb=function(a,b,c,d){var e=T;T|=4;try{return fg(98,a.bind(null,b,c,d))}finally{T=e,T===S&&jg()}};gb=function(){(T&(1|oj|pj))===S&&(ak(),Sj())};hb=function(a,b){var c=T;T|=2;try{return a(b)}finally{T=c,T===S&&jg()}};\nfunction zk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new wk(a,0,b?{hydrate:!0}:void 0)}\nfunction Ak(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=sk(g);h.call(a)}}rk(b,g,a,e)}else{f=c._reactRootContainer=zk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=sk(g);k.call(a)}}ck(function(){rk(b,g,a,e)})}return sk(g)}function Bk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!yk(b))throw Error(u(200));return vk(a,b,null,c)}\nvar Ck={createPortal:Bk,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if(\"function\"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=ic(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){if(!yk(b))throw Error(u(200));return Ak(null,a,b,!0,c)},render:function(a,b,c){if(!yk(b))throw Error(u(200));return Ak(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){if(!yk(c))throw Error(u(200));\nif(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return Ak(a,b,c,!1,d)},unmountComponentAtNode:function(a){if(!yk(a))throw Error(u(40));return a._reactRootContainer?(ck(function(){Ak(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Bk.apply(void 0,arguments)},unstable_batchedUpdates:bk,flushSync:function(a,b){if((T&(oj|pj))!==S)throw Error(u(187));var c=T;T|=1;try{return fg(99,a.bind(null,b))}finally{T=c,jg()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Cc,\nxe,ye,Ca.injectEventPluginsByName,fa,Sc,function(a){ya(a,Rc)},cb,db,Pd,Ba,Sj,{current:!1}]}};\n(function(a){var b=a.findFiberByHostInstance;return ok(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ea.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=ic(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:Fc,bundleType:0,version:\"16.11.0\",\nrendererPackageName:\"react-dom\"});var Dk={default:Ck},Ek=Dk&&Ck||Dk;module.exports=Ek.default||Ek;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 65\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 66\n// module chunks = 0","/** @license React v16.11.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var h=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113;n&&Symbol.for(\"react.suspense_list\");\nvar z=n?Symbol.for(\"react.memo\"):60115,aa=n?Symbol.for(\"react.lazy\"):60116;n&&Symbol.for(\"react.fundamental\");n&&Symbol.for(\"react.responder\");n&&Symbol.for(\"react.scope\");var A=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction B(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(B(85));this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}var H=G.prototype=new F;\nH.constructor=G;h(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,l=null;if(null!=b)for(e in void 0!==b.ref&&(l=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var k=Array(f),m=0;m<f;m++)k[m]=arguments[m+2];d.children=k}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:l,props:d,_owner:J.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,c,e){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var l=0;l<a.length;l++){d=a[l];var f=b+T(d,l);g+=S(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),l=\n0;!(d=a.next()).done;)d=d.value,f=b+T(d,l++),g+=S(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(B(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function U(a,b,c){return null==a?0:S(a,\"\",b,c)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,e,c,function(a){return a}):null!=a&&(N(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+c)),e.push(a))}function V(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(O,\"$&/\")+\"/\");b=Q(b,g,e,d);U(a,da,b);R(b)}function W(){var a=I.current;if(null===a)throw Error(B(321));return a}\nvar X={Children:{map:function(a,b,c){if(null==a)return a;var e=[];V(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=Q(null,null,b,c);U(a,ca,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){if(!N(a))throw Error(B(143));return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:x,render:a}},lazy:function(a){return{$$typeof:aa,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,c){return W().useImperativeHandle(a,b,c)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,c){return W().useReducer(a,b,c)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,Profiler:u,StrictMode:t,Suspense:y,createElement:M,cloneElement:function(a,b,c){if(null===a||void 0===a)throw Error(B(267,a));var e=h({},a.props),d=a.key,g=a.ref,l=a._owner;\nif(null!=b){void 0!==b.ref&&(g=b.ref,l=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(k in b)K.call(b,k)&&!L.hasOwnProperty(k)&&(e[k]=void 0===b[k]&&void 0!==f?f[k]:b[k])}var k=arguments.length-2;if(1===k)e.children=c;else if(1<k){f=Array(k);for(var m=0;m<k;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,key:d,ref:g,props:e,_owner:l}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.11.0\",\n__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:h}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 67\n// module chunks = 0","/** @license React v0.17.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout,A=window.requestAnimationFrame,B=window.cancelAnimationFrame;\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));if(\"object\"===typeof w&&\n\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var C=x.now();exports.unstable_now=function(){return x.now()-C}}var D=!1,E=null,F=-1,G=5,H=0;k=function(){return exports.unstable_now()>=H};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):G=0<a?Math.floor(1E3/a):33.33};var I=new MessageChannel,J=I.port2;I.port1.onmessage=\nfunction(){if(null!==E){var a=exports.unstable_now();H=a+G;try{E(!0,a)?J.postMessage(null):(D=!1,E=null)}catch(b){throw J.postMessage(null),b;}}else D=!1};f=function(a){E=a;D||(D=!0,J.postMessage(null))};g=function(a,b){F=y(function(){a(exports.unstable_now())},b)};h=function(){z(F);F=-1}}function K(a,b){var c=a.length;a.push(b);a:for(;;){var d=Math.floor((c-1)/2),e=a[d];if(void 0!==e&&0<L(e,b))a[d]=b,a[c]=e,c=d;else break a}}function M(a){a=a[0];return void 0===a?null:a}\nfunction N(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>L(n,c))void 0!==r&&0>L(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>L(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function L(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var O=[],P=[],Q=1,R=null,S=3,T=!1,U=!1,V=!1;\nfunction W(a){for(var b=M(P);null!==b;){if(null===b.callback)N(P);else if(b.startTime<=a)N(P),b.sortIndex=b.expirationTime,K(O,b);else break;b=M(P)}}function X(a){V=!1;W(a);if(!U)if(null!==M(O))U=!0,f(Y);else{var b=M(P);null!==b&&g(X,b.startTime-a)}}\nfunction Y(a,b){U=!1;V&&(V=!1,h());T=!0;var c=S;try{W(b);for(R=M(O);null!==R&&(!(R.expirationTime>b)||a&&!k());){var d=R.callback;if(null!==d){R.callback=null;S=R.priorityLevel;var e=d(R.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?R.callback=e:R===M(O)&&N(O);W(b)}else N(O);R=M(O)}if(null!==R)var m=!0;else{var n=M(P);null!==n&&g(X,n.startTime-b);m=!1}return m}finally{R=null,S=c,T=!1}}\nfunction Z(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var aa=l;exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=S;S=a;try{return b()}finally{S=c}};\nexports.unstable_next=function(a){switch(S){case 1:case 2:case 3:var b=3;break;default:b=S}var c=S;S=b;try{return a()}finally{S=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Z(a)}else c=Z(a),e=d;c=e+c;a={id:Q++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,K(P,a),null===M(O)&&a===M(P)&&(V?h():V=!0,g(X,e-d))):(a.sortIndex=c,K(O,a),U||T||(U=!0,f(Y)));return a};exports.unstable_cancelCallback=function(a){a.callback=null};\nexports.unstable_wrapCallback=function(a){var b=S;return function(){var c=S;S=b;try{return a.apply(this,arguments)}finally{S=c}}};exports.unstable_getCurrentPriorityLevel=function(){return S};exports.unstable_shouldYield=function(){var a=exports.unstable_now();W(a);var b=M(O);return b!==R&&null!==R&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<R.expirationTime||k()};exports.unstable_requestPaint=aa;exports.unstable_continueExecution=function(){U||T||(U=!0,f(Y))};\nexports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return M(O)};exports.unstable_Profiling=null;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 68\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 69\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!../../postcss-loader/index.js!./font-awesome.min.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!../../postcss-loader/index.js!./font-awesome.min.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!../../postcss-loader/index.js!./font-awesome.min.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/css/font-awesome.min.css\n// module id = 70\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/index.js!../postcss-loader/index.js!./normalize.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../css-loader/index.js!../postcss-loader/index.js!./normalize.css\", function() {\n\t\t\tvar newContent = require(\"!!../css-loader/index.js!../postcss-loader/index.js!./normalize.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/normalize.css/normalize.css\n// module id = 71\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./About.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./About.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./About.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/About.scss\n// module id = 72\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./App.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./App.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./App.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/App.scss\n// module id = 73\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Articles.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Articles.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Articles.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/Articles.scss\n// module id = 74\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Footer.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Footer.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Footer.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/Footer.scss\n// module id = 75\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Work.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Work.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Work.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/Work.scss\n// module id = 76\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Works.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Works.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/index.js!../../node_modules/sass-loader/index.js?outputStyle=expanded!./Works.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/Works.scss\n// module id = 77\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '87';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\" : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector2();\n\t\t\tvar max = new Vector2();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\t\tthis.y = c.y;\n\t\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x = new Vector3();\n\t\t\tvar y = new Vector3();\n\t\t\tvar z = new Vector3();\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target );\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\t// up and z are parallel\n\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tz.normalize();\n\t\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\t}\n\n\t\t\t\tx.normalize();\n\t\t\t\ty.crossVectors( z, x );\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\t\t\t\tmatrix.copy( this );\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat3array.set( v.elements );\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t}\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tif ( v.elements === undefined ) {\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t} else {\n\n\t\t\tmat4array.set( v.elements );\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor ( ; ; ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t},\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( flares, scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tstate.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.buffers.depth.setMask( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\n\t\t\t\t\t\t\ttextures.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.buffers.depth.setMask( true );\n\n\t\t\tstate.reset();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + capabilities.precision + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new CanvasTexture( canvas );\n\n\t\t}\n\n\t\tthis.render = function ( sprites, scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tstate.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( fog.isFog ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\n\t\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\tstate.reset();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\t\tif ( this.visible === false ) data.visible = false;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function expandByObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum(),\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t\t_lookTarget = new Vector3(),\n\t\t\t_lightPositionWorld = new Vector3(),\n\n\t\t\t_MorphingFlag = 1,\n\t\t\t_SkinningFlag = 2,\n\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\t//\n\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( lights.length === 0 ) return;\n\n\t\t\t// TODO Clean up (needed in case of contextlost)\n\t\t\tvar _gl = _renderer.context;\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount;\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\t\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = {};\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = gl.FLOAT;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = gl.FLOAT;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = gl.SHORT;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = gl.INT;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = gl.BYTE;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( attribute.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers[ attribute.uuid ];\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\t\t\t\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers[ attribute.uuid ];\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tvar object3DId = 0;\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( this.isCamera ) {\n\n\t\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\t}\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar count = 0;\n\tfunction GeometryIdCount() { return count++; }\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) return - Infinity;\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar position = this.attributes.position;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function normalizeNormals() {\n\n\t\t\t\tvar normals = this.attributes.normal;\n\n\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\t\tvector.normalize();\n\n\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t// BoxBufferGeometry\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tnormal: function () {\n\n\t\t\tvar v0 = new Vector3();\n\n\t\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tresult.subVectors( c, b );\n\t\t\t\tv0.subVectors( a, b );\n\t\t\t\tresult.cross( v0 );\n\n\t\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tbarycoordFromPoint: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\t\tv0.subVectors( c, a );\n\t\t\t\tv1.subVectors( b, a );\n\t\t\t\tv2.subVectors( point, a );\n\n\t\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\t// collinear or singular triangle\n\t\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t\t}\n\n\t\t\t\tvar invDenom = 1 / denom;\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t\t// barycentric coordinates must always sum to 1\n\t\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane = new Plane();\n\t\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\tvar projectedPoint = new Vector3();\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uv ) {\n\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar intersection;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\t\tvar i, l;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar uvs;\n\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeCamera, planeMesh;\n\t\tvar boxMesh;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tpolygonOffset: true,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tvar scale = camera.far;\n\n\t\t\t\t\t\tthis.matrixWorld.makeScale( scale, scale, scale );\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t\tthis.material.polygonOffsetUnits = scale * 10;\n\n\t\t\t\t\t};\n\n\t\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t\t);\n\n\t\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.map = background;\n\n\t\t\t\t// TODO Push this to renderList\n\n\t\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t\trenderItemsIndex ++;\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = {};\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar hash = scene.id + ',' + camera.id;\n\t\t\tvar list = lists[ hash ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists[ hash ] = list;\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\tvar length = objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\t// Remove current morphAttributes\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\t// Add morphAttributes\n\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence ) {\n\n\t\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\t\tvar geometries = {};\n\t\tvar wireframeAttributes = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO Remove duplicate code\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t\t}\n\n\t\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfoMemory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfoMemory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) return attribute;\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar state = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\n\t\t};\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\t\tuniforms.color\n\t\t\t\t\t\t.copy( color )\n\t\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5,                0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set(              0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t// TODO (sam-g-steel) why aren't we using join\n\t\t\tstate.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( geometries, infoRender ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = infoRender.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tclear: clear\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\tvar precision = capabilities.precision;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {\n\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tinfoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t        console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\tfunction get( object ) {\n\n\t\t\tvar uuid = object.uuid;\n\t\t\tvar map = properties[ uuid ];\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tdelete properties[ object.uuid ];\n\n\t\t}\n\n\t\tfunction clear() {\n\n\t\t\tproperties = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tclear: clear\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, utils ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\t\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\t\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( gl.DEPTH_TEST );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( gl.CULL_FACE );\n\n\t\tenable( gl.BLEND );\n\t\tsetBlending( NormalBlending );\n\n\t\t//\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t} else {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t: enable( gl.CULL_FACE );\n\n\t\t\tsetFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: setBlending( NoBlending );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tif ( 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tvar currentSize, currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( device !== null && device.isPresenting ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\t} else if ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t}\n\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\t\tthis.standing = false;\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( device === null ) return camera;\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tvar pose = frameData.pose;\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t\t//\n\n\t\t\tcameraL.near = camera.near;\n\t\t\tcameraR.near = camera.near;\n\n\t\t\tcameraL.far = camera.far;\n\t\t\tcameraR.far = camera.far;\n\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\tif ( this.standing && stageParameters ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = camera.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\t// HACK @mrdoob\n\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t\t}\n\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t\t};\n\n\t\tthis.dispose = function() {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils ( gl, extensions ) {\n\n\t\tfunction convert ( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return gl.BYTE;\n\t\t\tif ( p === ShortType ) return gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\t\tif ( p === OneFactor ) return gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\treturn { convert: convert }\n\n\t}\n\n\t// import { Sphere } from '../math/Sphere';\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tvar currentRenderList = null;\n\n\t\tvar spritesArray = [];\n\t\tvar flaresArray = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t_isContextLost = false,\n\n\t\t\t// internal state cache\n\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\t\t\t_currentGeometryProgram = '',\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t//\n\n\t\t\t_usedTextureUnits = 0,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3(),\n\n\t\t\t// info\n\n\t\t\t_infoMemory = {\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\t\t\t},\n\n\t\t\t_infoRender = {\n\n\t\t\t\tframe: 0,\n\t\t\t\tcalls: 0,\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0,\n\t\t\t\tpoints: 0\n\n\t\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: _infoMemory,\n\t\t\tprograms: null\n\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions, capabilities, state;\n\t\tvar properties, textures, attributes, geometries, objects, lights;\n\t\tvar programCache, renderLists;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tvar flareRenderer, spriteRenderer;\n\n\t\tvar utils;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t\t}\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\t\tobjects = new WebGLObjects( geometries, _infoRender );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\t\tlights = new WebGLLights();\n\t\t\trenderLists = new WebGLRenderLists();\n\n\t\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t\tflareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );\n\t\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\t\t_this.info.programs = programCache.programs;\n\n\t\t\t_this.context = _gl;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// vr\n\n\t\tvar vr = new WebVRManager( _this );\n\n\t\tthis.vr = vr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tvar device = vr.getDevice();\n\n\t\t\tif ( device && device.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width * _pixelRatio,\n\t\t\t\theight: _height * _pixelRatio\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = width * pixelRatio;\n\t\t\t_canvas.height = height * pixelRatio;\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t_viewport.set( x, _height - y - height, width, height );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\t_scissor.set( x, _height - y - height, width, height );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = background.getClearColor;\n\t\tthis.setClearColor = background.setClearColor;\n\t\tthis.getClearAlpha = background.getClearAlpha;\n\t\tthis.setClearAlpha = background.setClearAlpha;\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\n\t\t\tvr.dispose();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( event ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlightsArray.push( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar isAnimating = false;\n\t\tvar onAnimationFrame = null;\n\n\t\tfunction start() {\n\n\t\t\tif ( isAnimating ) return;\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\t\t\tisAnimating = true;\n\n\t\t}\n\n\t\tfunction loop( time ) {\n\n\t\t\tif ( onAnimationFrame !== null ) onAnimationFrame( time );\n\t\t\t( vr.getDevice() || window ).requestAnimationFrame( loop );\n\n\t\t}\n\n\t\tthis.animate = function ( callback ) {\n\n\t\t\tonAnimationFrame = callback;\n\t\t\tstart();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost ) return;\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t\tspritesArray.length = 0;\n\t\t\tflaresArray.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.frame ++;\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom renderers\n\n\t\t\tspriteRenderer.render( spritesArray, scene, camera );\n\t\t\tflareRenderer.render( flaresArray, scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\t/*\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tvar _sphere = new Sphere();\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\t\t*/\n\n\t\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\t\tif ( ! object.visible ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlightsArray.push( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tspritesArray.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tflaresArray.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = null;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar intersectPoint = new Vector3();\n\t\t\tvar worldPosition = new Vector3();\n\t\t\tvar worldScale = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\t\t\tvar identityMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\tvar bones = this.bones;\n\t\t\t\tvar boneInverses = this.boneInverses;\n\t\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tvar bones = this.initBones();\n\t\tvar skeleton = new Skeleton( bones );\n\n\t\tthis.bind( skeleton, this.matrixWorld );\n\n\t\tthis.normalizeSkinWeights();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tinitBones: function () {\n\n\t\t\tvar bones = [], bone, gbone;\n\t\t\tvar i, il;\n\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\t// create new 'Bone' object\n\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t\tbones.push( bone );\n\n\t\t\t\t\t// apply values\n\n\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t\t}\n\n\t\t\t\t// second, create bone hierarchy\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t\t// let's update the corresponding matrices\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn bones;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar scale, i;\n\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tscale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tscale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\tsphere.radius += threshold;\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tp0 = func( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t  1, - 1, - 1,     1, - 1,  1,\n\t\t\t  1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ] ];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( 'THREE.ShapeUtils: Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + ':' + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Duplicate point', key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + ':' + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\t\tvar positionAttribute = this.getAttribute( \"position\" );\n\t\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\t\tvar uvAttribute = this.getAttribute( \"uv\" );\n\t\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\t\tvar IndexAttribute = this.index;\n\t\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\t\treturn {\n\t\t\tposition: verticesArray,\n\t\t\tuv: uvArray,\n\t\t\tindex: indicesArray\n\t\t};\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\t\toptions.arrays = this.getArrays();\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t\tthis.setIndex( options.arrays.index );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t};\n\n\tExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\t\tvar verticesArray = arrays.position;\n\t\tvar indicesArray = arrays.index;\n\t\tvar uvArray = arrays.uv;\n\n\t\tvar placeholder = [];\n\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.material !== undefined ? options.material : 0);\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length/3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length/3 -start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1);\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tindicesArray.push( verticesArray.length / 3 );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t\tif ( ! options.arrays ) {\n\n\t\t\tthis.setIndex( indicesArray );\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry(  text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t\t// also check if holes are in the opposite direction\n\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>,\n\t *  opacity: <float>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.opacity = 1.0;\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FileLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FileLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { type: mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( DataTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\timage.addEventListener( 'load', function () {\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\t/*\n\t\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t\t}, false );\n\t\t\t*/\n\n\t\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar texture = new Texture();\n\t\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.position.set( 0, 1, 0 );\n\t\tthis.updateMatrix();\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t\t// TODO (abelnation): distance/decay\n\n\t\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t\t// TODO (abelnation): shadows\n\n\t}\n\n\t// TODO (abelnation): RectAreaLight update when light shape is changed\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif ( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\tObject.assign( Loader.prototype, {\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar BlendingMode = {\n\t\t\t\tNoBlending: NoBlending,\n\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\tCustomBlending: CustomBlending\n\t\t\t};\n\n\t\t\tvar color = new Color();\n\t\t\tvar textureLoader = new TextureLoader();\n\t\t\tvar materialLoader = new MaterialLoader();\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function ( json, texturePath ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tvar children = data.children;\n\n\t\t\t\t\tfor ( var  i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\treturn new Vector2(\n\t\t\tCatmullRom( weight, point0.x, point1.x, point2.x, point3.x ),\n\t\t\tCatmullRom( weight, point0.y, point1.y, point2.y, point3.y )\n\t\t);\n\n\t};\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector2(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector2(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [];\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tQuadraticBezier( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tCubicBezier( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( context === undefined ) {\n\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = AudioContext.getContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar renderTarget = this.renderTarget;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTarget.activeCubeFace = i;\n\t\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.loop = false;\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\t\tsource.start( 0, this.startTime );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param  {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t\t},\n\n\t\tparseTrackName: function () {\n\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t\t// be matched to parse the rest of the track name.\n\t\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t\t// Object on target node, and accessor. Name may contain only word\n\t\t\t// characters. Accessor may contain any character except closing bracket.\n\t\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t\t// contain any non-bracket characters.\n\t\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\t\tvar trackRe = new RegExp(''\n\t\t\t\t+ '^'\n\t\t\t\t+ directoryRe.source\n\t\t\t\t+ nodeRe.source\n\t\t\t\t+ objectRe.source\n\t\t\t\t+ propertyRe.source\n\t\t\t\t+ '$'\n\t\t\t);\n\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\t\treturn function ( trackName ) {\n\n\t\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar results = {\n\t\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\t\tpropertyName: matches[ 5 ],     // required\n\t\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t\t};\n\n\t\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\t\tif ( lastDot !== undefined && lastDot !== -1 ) {\n\n\t\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t\t// include '.' characters).\n\t\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== -1 ) {\n\n\t\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn results;\n\n\t\t\t\t};\n\n\t\t}(),\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_; }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\t\tknownObject = undefined;\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\n\t\t\t} );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.onUploadCallback = function () {};\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\t\tthis.y = vec3.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.light.updateMatrixWorld();\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.onBeforeRender = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar boneMatrix = new Matrix4();\n\t\tvar matrixWorldInv = new Matrix4();\n\n\t\treturn function onBeforeRender() {\n\n\t\t\tvar bones = this.bones;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tvar bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tj += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction RectAreaLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\t\tthis.line = new Line( geometry, material );\n\t\tthis.add( this.line );\n\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\t// calculate new dimensions of the helper\n\n\t\tvar hx = this.light.width * 0.5;\n\t\tvar hy = this.light.height * 0.5;\n\n\t\tvar position = this.line.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\t// update vertices\n\n\t\tarray[  0 ] =   hx; array[  1 ] = - hy; array[  2 ] = 0;\n\t\tarray[  3 ] =   hx; array[  4 ] =   hy; array[  5 ] = 0;\n\t\tarray[  6 ] = - hx; array[  7 ] =   hy; array[  8 ] = 0;\n\t\tarray[  9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\t\tarray[ 12 ] =   hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\t\tposition.needsUpdate = true;\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.line.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.line.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar color1 = new Color();\n\t\tvar color2 = new Color();\n\n\t\treturn function update() {\n\n\t\t\tvar mesh = this.children[ 0 ];\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t\tcolor1.copy( this.light.color );\n\t\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tthis.lightPlane.lookAt( v3 );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt( v3 );\n\t\t\tthis.targetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", colorFrustum );\n\t\taddLine( \"n2\", \"n4\", colorFrustum );\n\t\taddLine( \"n4\", \"n3\", colorFrustum );\n\t\taddLine( \"n3\", \"n1\", colorFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", colorFrustum );\n\t\taddLine( \"f2\", \"f4\", colorFrustum );\n\t\taddLine( \"f4\", \"f3\", colorFrustum );\n\t\taddLine( \"f3\", \"f1\", colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", colorFrustum );\n\t\taddLine( \"n2\", \"f2\", colorFrustum );\n\t\taddLine( \"n3\", \"f3\", colorFrustum );\n\t\taddLine( \"n4\", \"f4\", colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", colorCone );\n\t\taddLine( \"p\", \"n2\", colorCone );\n\t\taddLine( \"p\", \"n3\", colorCone );\n\t\taddLine( \"p\", \"n4\", colorCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", colorUp );\n\t\taddLine( \"u2\", \"u3\", colorUp );\n\t\taddLine( \"u3\", \"u1\", colorUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", colorTarget );\n\t\taddLine( \"p\", \"c\", colorCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", colorCross );\n\t\taddLine( \"cn3\", \"cn4\", colorCross );\n\n\t\taddLine( \"cf1\", \"cf2\", colorCross );\n\t\taddLine( \"cf3\", \"cf4\", colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t\t}\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\tbox.setFromObject( this.object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, hex ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.onBeforeRender = function () {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n\t\t//\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.onBeforeRender = function () {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.updateMatrixWorld();\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry;\n\tvar coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( lineGeometry === undefined ) {\n\n\t\t\tlineGeometry = new BufferGeometry();\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly();\n\tvar py = new CubicPoly();\n\tvar pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points ) {\n\n\t\tCurve.call( this );\n\n\t\tif ( points.length < 2 ) console.warn( 'THREE.CatmullRomCurve3: Points array needs at least two entries.' );\n\n\t\tthis.points = points || [];\n\t\tthis.closed = false;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar point = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t}\n\n\t\treturn new Vector3( px.calc( weight ), py.calc( weight ), pz.calc( weight ) );\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\treturn new Vector3(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t ) {\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\treturn new Vector3(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar vector = new Vector3();\n\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\tvector.multiplyScalar( t );\n\t\tvector.add( this.v1 );\n\n\t\treturn vector;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tchild.applyMatrix( new Matrix4().getInverse( parent.matrixWorld ) );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) materials = [];\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( optionalTarget ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( samplingCoef ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\t_Math.random16 = function () {\n\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t};\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.'  );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function( buffer, offset, length ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function( array, offset, length ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.error( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tGeometry.prototype.computeTangents = function () {\n\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t};\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.cullFace;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tAudio.prototype.load = function ( file ) {\n\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\tscope.setBuffer( buffer );\n\n\t\t} );\n\t\treturn this;\n\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector() {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function () {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.LineLoop = LineLoop;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.Texture = Texture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.FileLoader = FileLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.RectAreaLight = RectAreaLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.ArrayCamera = ArrayCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.AudioContext = AudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Cylindrical = Cylindrical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.Color = Color;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.Box3Helper = Box3Helper;\n\texports.PlaneHelper = PlaneHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.Path = Path;\n\texports.ShapePath = ShapePath;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Particle;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.Spline = Spline;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.XHRLoader = XHRLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/build/three.js\n// module id = 78\n// module chunks = 0","import * as THREE from 'three';\n\n// Why we need filtered logging.\nconst filterLogging = (undesiredPattern, code) => {\n  console.log(\"foo\");\n  const originalLog = console.log;\n  console.log = function (...args) {\n    return originalLog(...args && args.join(' ').match(undesiredPattern) ? [] : args);\n  };\n  code();\n  console.log = originalLog;\n};\nconst namePoints = [[53, 1], [54, 1], [70, 1], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2], [12, 2], [53, 2], [54, 2], [67, 2], [68, 2], [69, 2], [88, 2], [89, 2], [90, 2], [91, 2], [92, 2], [93, 2], [94, 2], [95, 2], [98, 2], [3, 3], [4, 3], [5, 3], [12, 3], [13, 3], [14, 3], [15, 3], [53, 3], [54, 3], [69, 3], [86, 3], [87, 3], [88, 3], [96, 3], [97, 3], [98, 3], [4, 4], [5, 4], [14, 4], [15, 4], [16, 4], [69, 4], [85, 4], [86, 4], [97, 4], [98, 4], [4, 5], [5, 5], [15, 5], [16, 5], [17, 5], [69, 5], [84, 5], [85, 5], [98, 5], [4, 6], [5, 6], [16, 6], [17, 6], [18, 6], [69, 6], [83, 6], [84, 6], [85, 6], [98, 6], [4, 7], [5, 7], [17, 7], [18, 7], [69, 7], [83, 7], [84, 7], [4, 8], [5, 8], [17, 8], [18, 8], [19, 8], [26, 8], [29, 8], [30, 8], [36, 8], [37, 8], [38, 8], [39, 8], [40, 8], [46, 8], [47, 8], [48, 8], [54, 8], [63, 8], [64, 8], [65, 8], [66, 8], [67, 8], [68, 8], [69, 8], [82, 8], [83, 8], [84, 8], [103, 8], [104, 8], [105, 8], [106, 8], [111, 8], [112, 8], [113, 8], [114, 8], [121, 8], [122, 8], [125, 8], [126, 8], [134, 8], [138, 8], [139, 8], [140, 8], [141, 8], [4, 9], [5, 9], [17, 9], [18, 9], [19, 9], [24, 9], [25, 9], [30, 9], [31, 9], [37, 9], [38, 9], [39, 9], [47, 9], [51, 9], [52, 9], [53, 9], [54, 9], [62, 9], [68, 9], [69, 9], [82, 9], [83, 9], [84, 9], [105, 9], [106, 9], [113, 9], [114, 9], [120, 9], [126, 9], [127, 9], [132, 9], [133, 9], [134, 9], [135, 9], [137, 9], [140, 9], [141, 9], [142, 9], [4, 10], [5, 10], [18, 10], [19, 10], [24, 10], [25, 10], [31, 10], [38, 10], [39, 10], [53, 10], [54, 10], [61, 10], [69, 10], [82, 10], [83, 10], [84, 10], [105, 10], [106, 10], [113, 10], [114, 10], [120, 10], [126, 10], [127, 10], [133, 10], [134, 10], [135, 10], [141, 10], [142, 10], [4, 11], [5, 11], [18, 11], [19, 11], [24, 11], [25, 11], [31, 11], [38, 11], [39, 11], [46, 11], [53, 11], [54, 11], [60, 11], [61, 11], [69, 11], [82, 11], [83, 11], [84, 11], [95, 11], [96, 11], [97, 11], [98, 11], [99, 11], [100, 11], [105, 11], [106, 11], [113, 11], [114, 11], [120, 11], [127, 11], [134, 11], [141, 11], [142, 11], [4, 12], [5, 12], [18, 12], [19, 12], [31, 12], [39, 12], [40, 12], [53, 12], [54, 12], [60, 12], [69, 12], [82, 12], [83, 12], [84, 12], [97, 12], [98, 12], [99, 12], [105, 12], [106, 12], [113, 12], [114, 12], [127, 12], [134, 12], [141, 12], [142, 12], [4, 13], [5, 13], [18, 13], [19, 13], [29, 13], [30, 13], [31, 13], [39, 13], [40, 13], [53, 13], [54, 13], [60, 13], [69, 13], [82, 13], [83, 13], [84, 13], [97, 13], [98, 13], [105, 13], [106, 13], [113, 13], [114, 13], [125, 13], [126, 13], [127, 13], [134, 13], [141, 13], [142, 13], [4, 14], [5, 14], [17, 14], [18, 14], [19, 14], [27, 14], [31, 14], [40, 14], [41, 14], [45, 14], [53, 14], [54, 14], [59, 14], [60, 14], [69, 14], [82, 14], [83, 14], [84, 14], [97, 14], [98, 14], [105, 14], [106, 14], [113, 14], [114, 14], [122, 14], [123, 14], [127, 14], [134, 14], [141, 14], [142, 14], [4, 15], [5, 15], [17, 15], [18, 15], [19, 15], [25, 15], [31, 15], [40, 15], [41, 15], [53, 15], [54, 15], [59, 15], [60, 15], [69, 15], [82, 15], [83, 15], [84, 15], [97, 15], [98, 15], [105, 15], [106, 15], [113, 15], [114, 15], [121, 15], [127, 15], [134, 15], [141, 15], [142, 15], [4, 16], [5, 16], [17, 16], [18, 16], [24, 16], [31, 16], [41, 16], [44, 16], [53, 16], [54, 16], [59, 16], [60, 16], [69, 16], [83, 16], [84, 16], [85, 16], [97, 16], [98, 16], [105, 16], [106, 16], [113, 16], [114, 16], [120, 16], [127, 16], [134, 16], [141, 16], [142, 16], [4, 17], [5, 17], [16, 17], [17, 17], [18, 17], [23, 17], [24, 17], [31, 17], [41, 17], [42, 17], [43, 17], [53, 17], [54, 17], [60, 17], [61, 17], [69, 17], [83, 17], [84, 17], [85, 17], [97, 17], [98, 17], [105, 17], [106, 17], [113, 17], [114, 17], [119, 17], [120, 17], [127, 17], [134, 17], [141, 17], [142, 17], [4, 18], [5, 18], [15, 18], [16, 18], [17, 18], [23, 18], [24, 18], [31, 18], [41, 18], [42, 18], [43, 18], [53, 18], [54, 18], [60, 18], [61, 18], [69, 18], [84, 18], [85, 18], [86, 18], [97, 18], [98, 18], [105, 18], [106, 18], [113, 18], [114, 18], [119, 18], [120, 18], [126, 18], [127, 18], [134, 18], [141, 18], [142, 18], [3, 19], [4, 19], [5, 19], [14, 19], [15, 19], [16, 19], [23, 19], [24, 19], [25, 19], [30, 19], [31, 19], [42, 19], [43, 19], [53, 19], [54, 19], [60, 19], [61, 19], [62, 19], [68, 19], [69, 19], [70, 19], [85, 19], [86, 19], [87, 19], [97, 19], [98, 19], [105, 19], [106, 19], [112, 19], [113, 19], [114, 19], [119, 19], [120, 19], [121, 19], [126, 19], [127, 19], [134, 19], [141, 19], [142, 19], [3, 20], [4, 20], [5, 20], [11, 20], [12, 20], [13, 20], [14, 20], [24, 20], [25, 20], [26, 20], [27, 20], [28, 20], [31, 20], [32, 20], [33, 20], [34, 20], [42, 20], [53, 20], [54, 20], [61, 20], [62, 20], [63, 20], [64, 20], [67, 20], [68, 20], [70, 20], [71, 20], [86, 20], [87, 20], [88, 20], [89, 20], [96, 20], [97, 20], [98, 20], [106, 20], [107, 20], [108, 20], [109, 20], [110, 20], [113, 20], [114, 20], [115, 20], [119, 20], [120, 20], [121, 20], [122, 20], [123, 20], [124, 20], [126, 20], [127, 20], [128, 20], [129, 20], [133, 20], [134, 20], [135, 20], [141, 20], [142, 20], [1, 21], [2, 21], [3, 21], [4, 21], [5, 21], [6, 21], [7, 21], [8, 21], [9, 21], [25, 21], [26, 21], [31, 21], [32, 21], [51, 21], [52, 21], [53, 21], [54, 21], [55, 21], [56, 21], [63, 21], [64, 21], [65, 21], [89, 21], [90, 21], [91, 21], [92, 21], [93, 21], [94, 21], [95, 21], [107, 21], [108, 21], [109, 21], [113, 21], [120, 21], [121, 21], [122, 21], [127, 21], [128, 21], [132, 21], [133, 21], [134, 21], [135, 21], [136, 21], [140, 21], [141, 21], [142, 21], [143, 21], [144, 21]];\n// const posiPoints = [[39, 1], [40, 1], [167, 1], [168, 1], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2], [12, 2], [37, 2], [40, 2], [41, 2], [42, 2], [117, 2], [118, 2], [119, 2], [120, 2], [121, 2], [122, 2], [123, 2], [124, 2], [125, 2], [126, 2], [127, 2], [128, 2], [129, 2], [130, 2], [131, 2], [167, 2], [168, 2], [3, 3], [4, 3], [11, 3], [12, 3], [36, 3], [41, 3], [42, 3], [119, 3], [120, 3], [130, 3], [131, 3], [167, 3], [168, 3], [3, 4], [12, 4], [36, 4], [119, 4], [120, 4], [131, 4], [3, 5], [36, 5], [119, 5], [120, 5], [131, 5], [3, 6], [4, 6], [35, 6], [36, 6], [45, 6], [119, 6], [120, 6], [3, 7], [4, 7], [13, 7], [35, 7], [36, 7], [44, 7], [45, 7], [119, 7], [120, 7], [3, 8], [4, 8], [5, 8], [22, 8], [23, 8], [24, 8], [25, 8], [26, 8], [33, 8], [34, 8], [35, 8], [36, 8], [37, 8], [38, 8], [39, 8], [40, 8], [43, 8], [44, 8], [45, 8], [46, 8], [47, 8], [48, 8], [51, 8], [52, 8], [53, 8], [54, 8], [55, 8], [58, 8], [59, 8], [60, 8], [61, 8], [62, 8], [68, 8], [69, 8], [76, 8], [79, 8], [80, 8], [92, 8], [93, 8], [100, 8], [101, 8], [102, 8], [103, 8], [119, 8], [120, 8], [137, 8], [141, 8], [142, 8], [143, 8], [144, 8], [154, 8], [155, 8], [156, 8], [157, 8], [168, 8], [176, 8], [180, 8], [181, 8], [182, 8], [192, 8], [193, 8], [194, 8], [195, 8], [205, 8], [206, 8], [207, 8], [208, 8], [209, 8], [221, 8], [222, 8], [3, 9], [4, 9], [5, 9], [6, 9], [7, 9], [20, 9], [21, 9], [26, 9], [27, 9], [35, 9], [36, 9], [44, 9], [45, 9], [52, 9], [53, 9], [60, 9], [61, 9], [69, 9], [74, 9], [75, 9], [80, 9], [81, 9], [86, 9], [87, 9], [88, 9], [89, 9], [91, 9], [92, 9], [93, 9], [94, 9], [98, 9], [103, 9], [104, 9], [119, 9], [120, 9], [135, 9], [136, 9], [137, 9], [138, 9], [140, 9], [143, 9], [144, 9], [145, 9], [153, 9], [158, 9], [159, 9], [160, 9], [161, 9], [162, 9], [165, 9], [166, 9], [167, 9], [168, 9], [173, 9], [174, 9], [175, 9], [176, 9], [179, 9], [181, 9], [182, 9], [183, 9], [191, 9], [195, 9], [196, 9], [197, 9], [204, 9], [209, 9], [210, 9], [215, 9], [216, 9], [217, 9], [218, 9], [220, 9], [221, 9], [222, 9], [223, 9], [4, 10], [5, 10], [6, 10], [7, 10], [8, 10], [9, 10], [19, 10], [20, 10], [27, 10], [28, 10], [35, 10], [36, 10], [44, 10], [45, 10], [53, 10], [60, 10], [61, 10], [74, 10], [75, 10], [81, 10], [87, 10], [89, 10], [90, 10], [93, 10], [97, 10], [104, 10], [105, 10], [119, 10], [120, 10], [121, 10], [128, 10], [129, 10], [137, 10], [138, 10], [139, 10], [144, 10], [145, 10], [152, 10], [158, 10], [159, 10], [160, 10], [167, 10], [168, 10], [175, 10], [176, 10], [177, 10], [183, 10], [184, 10], [190, 10], [196, 10], [197, 10], [198, 10], [203, 10], [210, 10], [211, 10], [216, 10], [218, 10], [219, 10], [222, 10], [6, 11], [7, 11], [8, 11], [9, 11], [10, 11], [19, 11], [28, 11], [29, 11], [35, 11], [36, 11], [44, 11], [45, 11], [53, 11], [54, 11], [61, 11], [68, 11], [74, 11], [75, 11], [81, 11], [88, 11], [89, 11], [97, 11], [104, 11], [105, 11], [119, 11], [120, 11], [121, 11], [122, 11], [123, 11], [124, 11], [125, 11], [126, 11], [127, 11], [128, 11], [129, 11], [137, 11], [138, 11], [145, 11], [152, 11], [159, 11], [160, 11], [167, 11], [168, 11], [175, 11], [176, 11], [183, 11], [184, 11], [189, 11], [197, 11], [198, 11], [202, 11], [210, 11], [211, 11], [217, 11], [218, 11], [7, 12], [8, 12], [9, 12], [10, 12], [11, 12], [18, 12], [19, 12], [28, 12], [29, 12], [35, 12], [36, 12], [44, 12], [45, 12], [53, 12], [54, 12], [61, 12], [62, 12], [81, 12], [88, 12], [96, 12], [97, 12], [104, 12], [105, 12], [106, 12], [119, 12], [120, 12], [129, 12], [137, 12], [138, 12], [145, 12], [151, 12], [152, 12], [159, 12], [160, 12], [167, 12], [168, 12], [175, 12], [176, 12], [183, 12], [184, 12], [189, 12], [190, 12], [196, 12], [197, 12], [198, 12], [202, 12], [203, 12], [209, 12], [210, 12], [211, 12], [217, 12], [9, 13], [10, 13], [11, 13], [12, 13], [18, 13], [19, 13], [28, 13], [29, 13], [35, 13], [36, 13], [44, 13], [45, 13], [54, 13], [55, 13], [60, 13], [61, 13], [62, 13], [67, 13], [79, 13], [80, 13], [81, 13], [88, 13], [96, 13], [97, 13], [119, 13], [120, 13], [137, 13], [138, 13], [145, 13], [152, 13], [159, 13], [160, 13], [167, 13], [168, 13], [175, 13], [176, 13], [183, 13], [184, 13], [189, 13], [190, 13], [202, 13], [203, 13], [217, 13], [10, 14], [11, 14], [12, 14], [13, 14], [18, 14], [19, 14], [28, 14], [29, 14], [35, 14], [36, 14], [44, 14], [45, 14], [54, 14], [55, 14], [60, 14], [61, 14], [62, 14], [63, 14], [77, 14], [81, 14], [88, 14], [96, 14], [119, 14], [120, 14], [137, 14], [138, 14], [145, 14], [152, 14], [153, 14], [159, 14], [160, 14], [167, 14], [168, 14], [175, 14], [176, 14], [183, 14], [184, 14], [189, 14], [202, 14], [217, 14], [11, 15], [12, 15], [13, 15], [18, 15], [19, 15], [29, 15], [35, 15], [36, 15], [44, 15], [45, 15], [55, 15], [59, 15], [62, 15], [63, 15], [75, 15], [81, 15], [88, 15], [96, 15], [97, 15], [119, 15], [120, 15], [137, 15], [138, 15], [145, 15], [152, 15], [153, 15], [159, 15], [167, 15], [168, 15], [175, 15], [176, 15], [183, 15], [184, 15], [189, 15], [202, 15], [217, 15], [12, 16], [13, 16], [18, 16], [19, 16], [29, 16], [35, 16], [36, 16], [44, 16], [45, 16], [55, 16], [56, 16], [63, 16], [66, 16], [74, 16], [81, 16], [88, 16], [96, 16], [97, 16], [119, 16], [120, 16], [137, 16], [138, 16], [145, 16], [153, 16], [154, 16], [155, 16], [157, 16], [158, 16], [167, 16], [168, 16], [175, 16], [176, 16], [183, 16], [184, 16], [189, 16], [202, 16], [203, 16], [217, 16], [12, 17], [13, 17], [18, 17], [19, 17], [28, 17], [29, 17], [35, 17], [36, 17], [44, 17], [45, 17], [55, 17], [56, 17], [57, 17], [58, 17], [63, 17], [64, 17], [65, 17], [73, 17], [74, 17], [81, 17], [88, 17], [96, 17], [97, 17], [119, 17], [120, 17], [137, 17], [138, 17], [145, 17], [153, 17], [167, 17], [168, 17], [175, 17], [176, 17], [183, 17], [184, 17], [189, 17], [190, 17], [199, 17], [202, 17], [203, 17], [217, 17], [2, 18], [12, 18], [13, 18], [19, 18], [20, 18], [28, 18], [29, 18], [35, 18], [36, 18], [44, 18], [45, 18], [56, 18], [57, 18], [58, 18], [63, 18], [64, 18], [65, 18], [73, 18], [74, 18], [81, 18], [88, 18], [97, 18], [98, 18], [106, 18], [119, 18], [120, 18], [132, 18], [137, 18], [138, 18], [145, 18], [152, 18], [167, 18], [168, 18], [175, 18], [176, 18], [183, 18], [184, 18], [189, 18], [190, 18], [191, 18], [202, 18], [203, 18], [204, 18], [217, 18], [2, 19], [3, 19], [11, 19], [12, 19], [13, 19], [19, 19], [20, 19], [28, 19], [35, 19], [36, 19], [44, 19], [45, 19], [56, 19], [57, 19], [64, 19], [73, 19], [74, 19], [75, 19], [80, 19], [81, 19], [88, 19], [97, 19], [98, 19], [99, 19], [105, 19], [119, 19], [120, 19], [131, 19], [132, 19], [137, 19], [138, 19], [145, 19], [152, 19], [167, 19], [168, 19], [175, 19], [176, 19], [183, 19], [184, 19], [190, 19], [191, 19], [192, 19], [197, 19], [198, 19], [203, 19], [204, 19], [205, 19], [211, 19], [217, 19], [2, 20], [3, 20], [4, 20], [5, 20], [10, 20], [11, 20], [12, 20], [20, 20], [21, 20], [27, 20], [35, 20], [36, 20], [45, 20], [46, 20], [48, 20], [57, 20], [64, 20], [74, 20], [75, 20], [76, 20], [77, 20], [78, 20], [81, 20], [82, 20], [83, 20], [84, 20], [87, 20], [88, 20], [89, 20], [98, 20], [99, 20], [100, 20], [101, 20], [102, 20], [103, 20], [104, 20], [119, 20], [120, 20], [121, 20], [129, 20], [130, 20], [131, 20], [136, 20], [137, 20], [138, 20], [144, 20], [145, 20], [146, 20], [152, 20], [153, 20], [154, 20], [155, 20], [156, 20], [157, 20], [158, 20], [159, 20], [160, 20], [167, 20], [168, 20], [175, 20], [176, 20], [183, 20], [184, 20], [190, 20], [191, 20], [192, 20], [193, 20], [194, 20], [195, 20], [196, 20], [197, 20], [204, 20], [205, 20], [206, 20], [207, 20], [208, 20], [209, 20], [210, 20], [216, 20], [217, 20], [218, 20], [2, 21], [6, 21], [7, 21], [8, 21], [9, 21], [10, 21], [22, 21], [23, 21], [24, 21], [25, 21], [26, 21], [33, 21], [34, 21], [35, 21], [36, 21], [37, 21], [38, 21], [39, 21], [45, 21], [46, 21], [47, 21], [75, 21], [76, 21], [81, 21], [82, 21], [86, 21], [87, 21], [88, 21], [89, 21], [90, 21], [91, 21], [99, 21], [100, 21], [101, 21], [102, 21], [103, 21], [117, 21], [118, 21], [119, 21], [120, 21], [121, 21], [122, 21], [123, 21], [124, 21], [125, 21], [126, 21], [127, 21], [128, 21], [129, 21], [130, 21], [131, 21], [135, 21], [136, 21], [137, 21], [138, 21], [139, 21], [143, 21], [144, 21], [145, 21], [146, 21], [147, 21], [152, 21], [153, 21], [154, 21], [155, 21], [156, 21], [157, 21], [158, 21], [159, 21], [160, 21], [161, 21], [165, 21], [166, 21], [167, 21], [168, 21], [169, 21], [170, 21], [173, 21], [174, 21], [175, 21], [176, 21], [177, 21], [178, 21], [181, 21], [182, 21], [183, 21], [184, 21], [185, 21], [186, 21], [192, 21], [193, 21], [194, 21], [195, 21], [205, 21], [206, 21], [207, 21], [208, 21], [215, 21], [216, 21], [217, 21], [218, 21], [219, 21], [220, 21], [152, 22], [161, 22], [151, 23], [150, 24], [151, 24], [150, 25], [151, 25], [161, 25], [151, 26], [152, 26], [153, 26], [159, 26], [160, 26], [152, 27], [153, 27], [154, 27], [155, 27], [156, 27], [157, 27]].filter((d, i) => (i % 2 === 0));\n\nfunction mobilecheck() {\n  let check = false;\n  (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || (window as any).opera);\n  return check;\n}\nconst isMobile = mobilecheck();\n\nconst maxSpeed = 14;\nconst planeMaterial = new THREE.MeshStandardMaterial({ color: 0x2199e8, side: THREE.DoubleSide });\nconst planeGeometry = new THREE.PlaneGeometry(1.3, 1.3);\nplaneGeometry.faces.pop();\nclass Plane {\n  private speedX = 0;\n  private speedY = 0;\n  private rotateX = 0.02 * Math.random() + 0.005;\n  private rotateY = 0.02 * Math.random() + 0.005;\n  private mesh: THREE.Mesh;\n\n\n  constructor(private posX: number, private posY: number, rendererWidth: number) {\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    this.mesh = plane;\n\n    this.mesh.rotateX(Math.PI * 2 * Math.random());\n    this.mesh.rotateY(Math.PI * 2 * Math.random());\n    // 400 -> 1.5, 800 -> 1.1\n    this.mesh.scale.divideScalar(-0.0007 * rendererWidth + 1.9);\n\n    this.mesh.scale.multiplyScalar(1 + Math.random());\n\n    this.mesh.position.x = (Math.random() - 0.5) * visibleWidth;\n    this.mesh.position.y = (Math.random() - 0.5) * visibleHeight;\n\n    scene.add(this.mesh);\n  }\n\n  setPos(x: number, y: number) {\n    this.mesh.position.x = x;\n    this.mesh.position.y = y;\n  }\n\n  update(mouseX: number, mouseY: number) {\n    const { x, y } = this.mesh.position;\n    this.speedX = (this.posX - x) / visibleWidth * maxSpeed;\n    this.speedX = Math.min(this.speedX, maxSpeed);\n    this.speedY = (this.posY - y) / visibleHeight * maxSpeed;\n    this.speedY = Math.min(this.speedY, maxSpeed);\n\n    if (!isMobile) {\n      const distance = Math.sqrt(Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2));\n      if (distance < 20) {\n        const accX = (mouseX - x) / 3;\n        this.speedX -= accX;\n\n        const accY = (mouseY - y) / 3;\n        this.speedY -= accY;\n      }\n    }\n\n    this.mesh.position.x += this.speedX;\n    this.mesh.rotateX(this.rotateX);\n    this.mesh.rotateY(this.rotateY);\n    this.mesh.position.y += this.speedY;\n  }\n\n  destroy() {\n    scene.remove(this.mesh);\n  }\n}\n\nlet planes: Plane[] = [];\n\nconst scene = new THREE.Scene();\nscene.add(new THREE.AmbientLight(0xFFFFFF));\nconst light = new THREE.DirectionalLight(0xffffff, .5);\nlight.position.set(200, 200, 5);\nscene.add(light);\nconst hemisphereLight = new THREE.HemisphereLight(0xaaaaaa, 0x444444, 0.9);\nscene.add(hemisphereLight);\n\nlet renderer: THREE.WebGLRenderer;\nfilterLogging(/^THREE\\.WebGLRenderer\\s*\\d*$/, () => {\n  renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n});\n\ndocument.addEventListener('mousemove', onDocumentMouseMove);\nlet rayX = 99999;\nlet rayY = 99999;\nfunction onDocumentMouseMove(evt: MouseEvent) {\n  const yInc = window.scrollY ? window.scrollY : 0;\n  rayX = (evt.clientX - renderer.domElement.offsetLeft) * displayRatio - visibleWidth / 2;\n  rayY = -((evt.clientY + yInc - renderer.domElement.offsetTop) * displayRatio - visibleHeight / 2);\n}\n\nconst drawText = (points: number[][], left: number, right: number, top: number) => {\n  let minX = Number.MAX_VALUE;\n  let minY = Number.MAX_VALUE;\n  let maxX = Number.MIN_VALUE;\n  let maxY = Number.MIN_VALUE;\n\n  const process = (x: number, y: number) => {\n    const plane = new Plane(x, y, renderWidth);\n    planes.push(plane);\n  };\n\n  points.forEach(d => {\n    if (d[0] < minX) minX = d[0];\n    if (d[1] < minY) minY = d[1];\n    if (d[0] > maxX) maxX = d[0];\n    if (d[1] > maxY) maxY = d[1];\n  });\n  const scale = (right - left) / (maxX - minX);\n  let pointer = 0;\n  const renderPoints = () => {\n    const boundary = Math.min(pointer + 100, points.length);\n    for (; pointer < boundary; pointer++) {\n      const [x, y] = points[pointer];\n      process(left + x * scale, top - y * scale);\n    }\n    if(pointer < points.length) {\n      setTimeout(renderPoints, 0);\n    }\n  }\n  renderPoints();\n};\n\nconst distanceFromCamera = 100;\nlet renderWidth = window.innerWidth;\nlet renderHeight = window.innerHeight;\nconst camera = new THREE.PerspectiveCamera(75, renderWidth / renderHeight, 0.1, 1000);\ncamera.position.z = distanceFromCamera;\nlet visibleHeight = 2 * Math.tan((Math.PI / 180) * camera.fov / 2) * distanceFromCamera;\nlet visibleWidth = visibleHeight * renderWidth / renderHeight;\nlet displayRatio = visibleHeight / renderHeight;\n\nlet onReset = false;\nfunction getRendererWidth() {\n  const width = (document.querySelector(targetSelector) as HTMLElement).offsetWidth;\n  return Math.min(1200, width);\n}\n\nfunction rebuildParticles() {\n  onReset = true;\n  renderWidth = getRendererWidth();\n  renderHeight = (document.querySelector(targetSelector) as HTMLElement).offsetHeight;\n  renderer.setSize(renderWidth, renderHeight);\n  camera.aspect = renderWidth / renderHeight;\n  camera.updateProjectionMatrix();\n\n  visibleHeight = 2 * Math.tan((Math.PI / 180) * camera.fov / 2) * distanceFromCamera;\n  visibleWidth = visibleHeight * renderWidth / renderHeight;\n  displayRatio = visibleHeight / renderHeight;\n\n  if (planes.length) {\n    planes.forEach(d => d.destroy());\n    planes = [];\n  }\n  drawText(namePoints, -visibleWidth / 2.6, visibleWidth / 2.6, visibleHeight / 2 - 50);\n  onReset = false;\n}\n\nlet isOnDebounce = false;\nfunction reset() {\n  if (!isOnDebounce) {\n    isOnDebounce = true;\n\n    setTimeout(() => {\n      isOnDebounce = false;\n      if (getRendererWidth() === renderWidth) return;\n      rebuildParticles();\n    }, 1500);\n  }\n}\n\nfunction renderingLoop() {\n  if (!onReset) {\n    renderer.render(scene, camera);\n    planes.forEach(d => d.update(rayX, rayY));\n  }\n  requestAnimationFrame(renderingLoop);\n}\n\nlet targetSelector;\nexport default function render(selector) {\n  targetSelector = selector;\n  window.addEventListener('resize', reset);\n  document.querySelector(selector).appendChild(renderer.domElement);\n  rebuildParticles();\n  renderingLoop();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/particles.ts","module.exports = __webpack_public_path__ + \"b06871f281fee6b241d60582ae9369b9.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/fonts/fontawesome-webfont.ttf?v=4.7.0\n// module id = 80\n// module chunks = 0","module.exports = __webpack_public_path__ + \"af7ae505a9eed503f8b8e6982036873e.woff2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/fonts/fontawesome-webfont.woff2?v=4.7.0\n// module id = 81\n// module chunks = 0","module.exports = __webpack_public_path__ + \"fee66e712a8a08eef5805a46892932ad.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/fonts/fontawesome-webfont.woff?v=4.7.0\n// module id = 82\n// module chunks = 0","module.exports = __webpack_public_path__ + \"fffbb1ff3900fd9c2aa9a11c95e24b3b.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/contests-sub.png\n// module id = 83\n// module chunks = 0","module.exports = __webpack_public_path__ + \"953d1571691157d26d0f78250f9f31bd.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/invaders.png\n// module id = 84\n// module chunks = 0","module.exports = __webpack_public_path__ + \"823825cb2e6a279a80ed469df624e6ac.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/photo-filter.png\n// module id = 85\n// module chunks = 0","module.exports = __webpack_public_path__ + \"9f4738f7a5cbd43ff258aead82b3829f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/ucc-validator.png\n// module id = 86\n// module chunks = 0","module.exports = __webpack_public_path__ + \"79594f5985518085d4b125c27f2c5727.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/webgl-wrokshop.png\n// module id = 87\n// module chunks = 0"],"sourceRoot":""}